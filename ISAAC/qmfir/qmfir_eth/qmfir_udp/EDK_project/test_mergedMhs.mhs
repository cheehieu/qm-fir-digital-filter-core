
 PARAMETER VERSION = 2.1.0


 PORT fpga_0_RS232_0_RX_pin = fpga_0_RS232_0_RX_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_RS232_0_TX_pin = fpga_0_RS232_0_TX_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_TemacPhy_RST_n_pin = fpga_0_Hard_Ethernet_MAC_TemacPhy_RST_n_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_TXD_0_pin = fpga_0_Hard_Ethernet_MAC_MII_TXD_0_pin, DIR = O, VEC = [3:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_TX_EN_0_pin = fpga_0_Hard_Ethernet_MAC_MII_TX_EN_0_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_TX_ER_0_pin = fpga_0_Hard_Ethernet_MAC_MII_TX_ER_0_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_RXD_0_pin = fpga_0_Hard_Ethernet_MAC_MII_RXD_0_pin, DIR = I, VEC = [3:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_RX_DV_0_pin = fpga_0_Hard_Ethernet_MAC_MII_RX_DV_0_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_RX_ER_0_pin = fpga_0_Hard_Ethernet_MAC_MII_RX_ER_0_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_RX_CLK_0_pin = fpga_0_Hard_Ethernet_MAC_MII_RX_CLK_0_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MII_TX_CLK_0_pin = fpga_0_Hard_Ethernet_MAC_MII_TX_CLK_0_pin, DIR = I, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MDC_0_pin = fpga_0_Hard_Ethernet_MAC_MDC_0_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_MDIO_0_pin = fpga_0_Hard_Ethernet_MAC_MDIO_0_pin, DIR = IO, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = TRUE, ENABLE = SINGLE, TRI_I = , TRI_O = , TRI_T = , IOB_STATE = INFER
 PORT fpga_0_Hard_Ethernet_MAC_PHY_INTR_pin = fpga_0_Hard_Ethernet_MAC_PHY_INTR_pin, DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_LOW, INTERRUPT_PRIORITY = MEDIUM, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_Clk_pin = fpga_0_DDR_SDRAM_0_DDR_Clk_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_Clk_n_pin = fpga_0_DDR_SDRAM_0_DDR_Clk_n_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_Addr_pin = fpga_0_DDR_SDRAM_0_DDR_Addr_pin, DIR = O, VEC = [13:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_BankAddr_pin = fpga_0_DDR_SDRAM_0_DDR_BankAddr_pin, DIR = O, VEC = [1:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_CAS_n_pin = fpga_0_DDR_SDRAM_0_DDR_CAS_n_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_CE_pin = fpga_0_DDR_SDRAM_0_DDR_CE_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_CS_n_pin = fpga_0_DDR_SDRAM_0_DDR_CS_n_pin, DIR = O, VEC = [1:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_RAS_n_pin = fpga_0_DDR_SDRAM_0_DDR_RAS_n_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_WE_n_pin = fpga_0_DDR_SDRAM_0_DDR_WE_n_pin, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_DM_pin = fpga_0_DDR_SDRAM_0_DDR_DM_pin, DIR = O, VEC = [4:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_DQS_pin = fpga_0_DDR_SDRAM_0_DDR_DQS_pin, DIR = IO, VEC = [4:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = TRUE, ENABLE = SINGLE, TRI_I = , TRI_O = , TRI_T = , IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_DDR_DQ_pin = fpga_0_DDR_SDRAM_0_DDR_DQ_pin, DIR = IO, VEC = [39:0], ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = TRUE, ENABLE = SINGLE, TRI_I = , TRI_O = , TRI_T = , IOB_STATE = INFER
 PORT fpga_0_DDR_SDRAM_0_CLK_RESET_n_pin = net_vcc, DIR = O, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_sys_clk_pin = dcm_clk_s, DIR = I, SIGIS = CLK, CLK_FREQ = 100000000, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT fpga_0_sys_rst_pin = sys_rst_s, DIR = I, SIGIS = RST, RST_POLARITY = 0, ASSIGNMENT = OPTIONAL, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER


BEGIN xps_timer
 PARAMETER INSTANCE = xps_timer_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_COUNT_WIDTH = 32, DT = INTEGER, RANGE = (8:32), PERMIT = BASE_USER, DESC = Counter Bit Width, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, MHS_VALUE = 32
 PARAMETER C_ONE_TIMER_ONLY = 0, DT = INTEGER, RANGE = (0,1), PERMIT = BASE_USER, DESC = Timer Mode, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_TRIG0_ASSERT = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_TRIG1_ASSERT = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_GEN0_ASSERT = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_GEN1_ASSERT = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_BASEADDR = 0x83c00000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x100, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x83c00000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x83c0ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x83c0ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = PLB_ABus:PLB_UABus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER HW_VER = 1.01.b
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT Interrupt = xps_timer_0_Interrupt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = HIGH, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = xps_timer_0_Interrupt
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:C_SPLB_AWIDTH-1], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
END

BEGIN xps_sysmon_adc
 PARAMETER INSTANCE = xps_sysmon_adc_0
 PARAMETER C_BASEADDR = 0x83800000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x3FF, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x83800000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8380ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8380ffff, RESOLVED_BUS = SPLB
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_INCLUDE_INTR = 1, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_SIM_MONITOR_FILE = Sysmon_Design.txt, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = Sysmon_Design.txt
 PARAMETER HW_VER = 2.00.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT IP2INTC_Irpt = xps_sysmon_adc_0_IP2INTC_Irpt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = xps_sysmon_adc_0_IP2INTC_Irpt
END

BEGIN xps_intc
 PARAMETER INSTANCE = xps_intc_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_BASEADDR = 0x81800000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x20, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x81800000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8180ffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8180ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_NUM_INTR_INPUTS = 2, DT = INTEGER, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_intr_inputs, RANGE = (1:C_SPLB_NATIVE_DWIDTH), AFFECTS_PORTS_VEC = Intr, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , MPD_VALUE = 2
 PARAMETER C_KIND_OF_INTR = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_intr, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_KIND_OF_EDGE = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_edge, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_KIND_OF_LVL = 0xffffffff, DT = std_logic_vector(31 downto 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_kind_of_lvl, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_HAS_IPR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Pending Register, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_SIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Set Interrupt Enables, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_CIE = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Clear Interrupt Enables, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_HAS_IVR = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), DESC = Interrupt Vector Register, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_IS_LEVEL = 1, DT = INTEGER, PERMIT = BASE_USER, RANGE = (0,1), VALUES = (0 = Edge, 1 = Level ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), VALUES = (0 = Falling/Low, 1 = Rising/High ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER HW_VER = 2.00.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = Rst, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Intr = xps_timer_0_Interrupt&Hard_Ethernet_MAC_TemacIntc0_Irpt&Hard_Ethernet_MAC_fifo_IP2INTC_Irpt&fpga_0_Hard_Ethernet_MAC_PHY_INTR_pin&RS232_0_Interrupt&xps_sysmon_adc_0_IP2INTC_Irpt&qmfir_0_IP2INTC_Irpt, DIR = I, VEC = [(C_NUM_INTR_INPUTS-1):0], SIGIS = INTERRUPT, ENDIAN = LITTLE, DEFAULT = , ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SENSITIVITY = EDGE_RISING, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = xps_timer_0_Interrupt&Hard_Ethernet_MAC_TemacIntc0_Irpt&Hard_Ethernet_MAC_fifo_IP2INTC_Irpt&fpga_0_Hard_Ethernet_MAC_PHY_INTR_pin&RS232_0_Interrupt&xps_sysmon_adc_0_IP2INTC_Irpt&qmfir_0_IP2INTC_Irpt
 PORT Irq = ppc440_0_EICC440EXTIRQ, DIR = O, SIGIS = INTERRUPT, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SENSITIVITY = EDGE_RISING, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = ppc440_0_EICC440EXTIRQ
END

BEGIN bram_block
 PARAMETER INSTANCE = xps_bram_if_cntlr_0_bram
 PARAMETER C_MEMSIZE = 2048, DT = integer, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2048
 PARAMETER C_PORT_DWIDTH = 32, DT = integer, BUS = PORTA:PORTB, RANGE = (32, 64, 128), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = BRAM_Din_A:BRAM_Dout_A:BRAM_Din_B:BRAM_Dout_B, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = PORTA
 PARAMETER C_PORT_AWIDTH = 32, DT = integer, BUS = PORTA:PORTB, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = BRAM_Addr_A:BRAM_Addr_B, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = PORTA
 PARAMETER C_NUM_WE = 4, DT = integer, RANGE = (1, 2, 4, 8, 16), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = BRAM_WEN_A:BRAM_WEN_B, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_FAMILY = virtex2, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex2
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE PORTA = xps_bram_if_cntlr_0_port, BUS_STD = XIL_BRAM, BUS_TYPE = TARGET
 PORT BRAM_Rst_A = BRAM_Rst, DIR = I, BUS = PORTA, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Clk_A = BRAM_Clk, DIR = I, BUS = PORTA, SIGIS = CLK, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_EN_A = BRAM_EN, DIR = I, BUS = PORTA, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_WEN_A = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTA, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Addr_A = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Din_A = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Dout_A = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Rst_B = BRAM_Rst, DIR = I, BUS = PORTB, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Clk_B = BRAM_Clk, DIR = I, BUS = PORTB, SIGIS = CLK, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_EN_B = BRAM_EN, DIR = I, BUS = PORTB, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_WEN_B = BRAM_WEN, DIR = I, VEC = [0:C_NUM_WE-1], BUS = PORTB, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Addr_B = BRAM_Addr, DIR = I, VEC = [0:C_PORT_AWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Din_B = BRAM_Din, DIR = O, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT BRAM_Dout_B = BRAM_Dout, DIR = I, VEC = [0:C_PORT_DWIDTH-1], BUS = PORTB, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN xps_bram_if_cntlr
 PARAMETER INSTANCE = xps_bram_if_cntlr_0
 PARAMETER C_BASEADDR = 0xffff8000, DT = std_logic_vector, BUS = SPLB, CACHEABLE = TRUE, ADDR_TYPE = MEMORY, ASSIGNMENT = REQUIRE, PAIR = C_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xffff8000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0xffffffff, DT = std_logic_vector, BUS = SPLB, ASSIGNMENT = REQUIRE, ADDR_TYPE = MEMORY, PAIR = C_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xffffffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 64, DT = integer, BUS = SPLB, ASSIGNMENT = REQUIRE, AFFECTS_PORTS_VEC = BRAM_WEN:BRAM_Din:BRAM_Dout, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, MHS_VALUE = 64, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = integer, BUS = SPLB, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = BRAM_Addr, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = integer, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 2, DT = integer, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = integer, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, MHS_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = integer, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = integer, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER HW_VER = 1.00.b
 BUS_INTERFACE SPLB = plb_v46_0, BUS_STD = PLBV46, BUS_TYPE = SLAVE
 BUS_INTERFACE PORTA = xps_bram_if_cntlr_0_port, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:C_SPLB_MID_WIDTH-1], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:(C_SPLB_DWIDTH/8)-1], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:C_SPLB_DWIDTH-1], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:C_SPLB_DWIDTH-1], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:C_SPLB_NUM_MASTERS-1], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT BRAM_Rst = BRAM_Rst, DIR = O, BUS = PORTA, DEFAULT = BRAM_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Clk = BRAM_Clk, DIR = O, BUS = PORTA, DEFAULT = BRAM_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_EN = BRAM_EN, DIR = O, BUS = PORTA, DEFAULT = BRAM_EN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_WEN = BRAM_WEN, DIR = O, VEC = [0:(C_SPLB_NATIVE_DWIDTH/8)-1], BUS = PORTA, DEFAULT = BRAM_WEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Addr = BRAM_Addr, DIR = O, VEC = [0:C_SPLB_AWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Din = BRAM_Din, DIR = I, VEC = [0:C_SPLB_NATIVE_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Din, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
 PORT BRAM_Dout = BRAM_Dout, DIR = O, VEC = [0:C_SPLB_NATIVE_DWIDTH-1], BUS = PORTA, DEFAULT = BRAM_Dout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = PORTA
END

BEGIN proc_sys_reset
 PARAMETER INSTANCE = proc_sys_reset_0
 PARAMETER C_SUBFAMILY = lx, DT = string, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = lx
 PARAMETER C_EXT_RST_WIDTH = 4, DT = integer, RANGE = (1:16), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_AUX_RST_WIDTH = 4, DT = integer, RANGE = (1:16), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_EXT_RESET_HIGH = 0, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_AUX_RESET_HIGH = 1, DT = std_logic, RANGE = (0,1), IO_IF = reset_0, IO_IS = polarity, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_BUS_RST = 1, DT = integer, RANGE = (1:8), AFFECTS_PORTS_VEC = Bus_Struct_Reset, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_PERP_RST = 1, DT = integer, RANGE = (1:16), AFFECTS_PORTS_VEC = Peripheral_Reset, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex5, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER HW_VER = 2.00.a
 BUS_INTERFACE RESETPPC0 = ppc_reset_bus, BUS_STD = XIL_RESETPPC, BUS_TYPE = INITIATOR, ISVALID = ([xstrncmp C_FAMILY virtex2p ] || [xstrncmp C_SUBFAMILY  *fx ] )
 PORT Slowest_sync_clk = clk_125_0000MHzPLL0_ADJUST, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT Ext_Reset_In = sys_rst_s, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_rst_s
 PORT Core_Reset_Req_0 = Core_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = Core_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT Chip_Reset_Req_0 = Chip_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = Chip_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT System_Reset_Req_0 = System_Reset_Req, DIR = I, BUS = RESETPPC0, SIGIS = RST, DEFAULT = System_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT Core_Reset_Req_1 = Core_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = Core_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Chip_Reset_Req_1 = Chip_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = Chip_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT System_Reset_Req_1 = System_Reset_Req, DIR = I, BUS = RESETPPC1, SIGIS = RST, DEFAULT = System_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Dcm_locked = Dcm_all_locked, DIR = I, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Dcm_all_locked
 PORT RstcPPCresetcore_0 = RstcPPCresetcore, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstcPPCresetcore, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT RstcPPCresetchip_0 = RstsPPCresetchip, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstsPPCresetchip, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT RstcPPCresetsys_0 = RstcPPCresetsys, DIR = O, BUS = RESETPPC0, SIGIS = RST, DEFAULT = RstcPPCresetsys, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC0
 PORT RstcPPCresetcore_1 = RstcPPCresetcore, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstcPPCresetcore, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetchip_1 = RstsPPCresetchip, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstsPPCresetchip, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RstcPPCresetsys_1 = RstcPPCresetsys, DIR = O, BUS = RESETPPC1, SIGIS = RST, DEFAULT = RstcPPCresetsys, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Bus_Struct_Reset = sys_bus_reset, DIR = O, VEC = [0:C_NUM_BUS_RST-1], SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT Peripheral_Reset = sys_periph_reset, DIR = O, VEC = [0:C_NUM_PERP_RST-1], SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_periph_reset
END

BEGIN ppc440_virtex5
 PARAMETER INSTANCE = ppc440_0
 PARAMETER C_PIR = 0b1111, DT = std_logic_vector(28 to 31), DESC = 'Processor Identification Register (4 LSBs)', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 4, MPD_VALUE = 0b1111
 PARAMETER C_ENDIAN_RESET = 0, DT = std_logic, VALUES = (0 = Big Endian, 1 = Little Endian), DESC = 'Reset value of Endian storage byte ordering', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_USER_RESET = 0b0000, DT = std_logic_vector(0 to 3), DESC = 'Reset value for user defined storage attributes (Tattribute[4:7])', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 4, MPD_VALUE = 0b0000
 PARAMETER C_INTERCONNECT_IMASK = 0xffffffff, DT = BIT_VECTOR(0 to 31), DESC = 'Interrupt mask for Crossbar, PLB Bridges, and MIB (IMASK DCR)', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xffffffff
 PARAMETER C_ICU_RD_FETCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for fetch requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_ICU_RD_SPEC_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for speculative fetch requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_ICU_RD_TOUCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for icbt requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_RD_LD_CACHE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent cacheable load requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_RD_NONCACHE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent non-cacheable load requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_RD_TOUCH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for dcbt requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_RD_URGENT_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for urgent load requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_WR_FLUSH_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent flush requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_WR_STORE_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for non-urgent store requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DCU_WR_URGENT_PLB_PRIO = 0b00, DT = std_logic_vector(0 to 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for urgent store requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DMA0_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 0), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA0 requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DMA1_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 1), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA1 requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DMA2_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 2), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA2 requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_DMA3_PLB_PRIO = 0b00, DT = bit_vector(0 to 1), ISVALID = (C_NUM_DMA > 3), VALUES = (0b00='00 (Lowest)', 0b01=01, 0b10=10, 0b11='11 (Highest)'), DESC = 'PLB priority for DMA3 requests', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 2, MPD_VALUE = 0b00
 PARAMETER C_IDCR_BASEADDR = 0b0000000000, DT = std_logic_vector(0 to 9), BUS = SDCR:MDCR, MIN_SIZE = 0x100, DESC = 'Base address of the internal DCR registers', ADDR_TYPE = REGISTER, PAIR = C_IDCR_HIGHADDR, ADDRESS = BASE, BITWIDTH = 10, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b1111111111, MHS_VALUE = 0b0000000000, RESOLVED_BUS = 
 PARAMETER C_IDCR_HIGHADDR = 0b0011111111, DT = std_logic_vector(0 to 9), BUS = SDCR:MDCR, DESC = 'High address of the internal DCR registers', ADDR_TYPE = REGISTER, PAIR = C_IDCR_BASEADDR, ADDRESS = HIGH, BITWIDTH = 10, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b0000000000, MHS_VALUE = 0b0011111111, RESOLVED_BUS = 
 PARAMETER C_APU_CONTROL = 0b00010000000000000, DT = BIT_VECTOR(0 to 16), DESC = 'APU Control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 17, MPD_VALUE = 0b00010000000000000
 PARAMETER C_APU_UDI_0 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 0', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_1 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_2 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 2', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_3 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 3', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_4 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 4', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_5 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 5', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_6 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 6', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_7 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 7', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_8 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 8', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_9 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 9', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_10 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 10', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_11 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 11', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_12 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 12', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_13 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 13', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_14 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 14', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_APU_UDI_15 = 0b000000000000000000000000, DT = BIT_VECTOR(0 to 23), DESC = 'UDI configuration register 15', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 24, MPD_VALUE = 0b000000000000000000000000
 PARAMETER C_PPC440MC_ADDR_BASE = 0xFFFFFFFF, DT = std_logic_vector(0 to 31), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc440mc_addr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0xFFFFFFFF
 PARAMETER C_PPC440MC_ADDR_HIGH = 0x00000000, DT = std_logic_vector(0 to 31), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc440mc_addr, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_PPC440MC_ROW_CONFLICT_MASK = 0x00000000, DT = BIT_VECTOR(0 to 31), DESC = 'Memory row conflict mask', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_PPC440MC_BANK_CONFLICT_MASK = 0x00000000, DT = BIT_VECTOR(0 to 31), DESC = 'Memory bank conflict mask', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000
 PARAMETER C_PPC440MC_CONTROL = 0x80F0008F, DT = BIT_VECTOR(0 to 31), DESC = 'Memory Controller Interface configuration register (MI_CONTROL DCR)', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x0000008f, MHS_VALUE = 0x80F0008F
 PARAMETER C_PPC440MC_PRIO_ICU = 4, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI instruction fetches', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_PPC440MC_PRIO_DCUW = 3, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI data stores', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 3
 PARAMETER C_PPC440MC_PRIO_DCUR = 2, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI data loads', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2
 PARAMETER C_PPC440MC_PRIO_SPLB1 = 0, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI requests from SPLB1, DMA2 or DMA3', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_PPC440MC_PRIO_SPLB0 = 1, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MCI requests from SPLB0, DMA0 or DMA1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PPC440MC_ARB_MODE = 0, DT = integer, VALUES = (0 = 'Least Recently Used', 1 = 'Round-Robin', 2= 'Fixed priority'), DESC = 'MCI arbitration mode', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_PPC440MC_MAX_BURST = 8, DT = integer, RANGE = (1,2,4,8,16), DESC = 'Maximum number of quad-words per burst through MCI ', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MPLB_AWIDTH = 32, DT = integer, BUS = MPLB, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = MPLB
 PARAMETER C_MPLB_DWIDTH = 128, DT = integer, BUS = MPLB, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = MPLB
 PARAMETER C_MPLB_NATIVE_DWIDTH = 128, DT = integer, BUS = MPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = MPLB
 PARAMETER C_MPLB_COUNTER = 0x00000500, DT = BIT_VECTOR(0 to 31), DESC = 'NOT SUPPORTED', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000500
 PARAMETER C_MPLB_PRIO_ICU = 4, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB instruction fetches', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_MPLB_PRIO_DCUW = 3, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB data stores', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 3
 PARAMETER C_MPLB_PRIO_DCUR = 2, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB data loads', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2
 PARAMETER C_MPLB_PRIO_SPLB1 = 0, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB requests from SPLB0, DMA0 or DMA1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MPLB_PRIO_SPLB0 = 1, DT = integer, RANGE = (0:4), DESC = 'Secondary priority for MPLB requests from SPLB0, DMA0 or DMA1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MPLB_ARB_MODE = 0, DT = integer, VALUES = (0 = 'Least Recently Used', 1 = 'Round-Robin', 2= 'Fixed priority'), DESC = 'MPLB arbitration mode', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPLB_SYNC_TATTRIBUTE = 0, DT = integer, VALUES = (0 = 'Disable SYNC', 1 = 'Enable Sync'), DESC = 'Value of Sync attribute (Tattribute[7]) on MPLB', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPLB_MAX_BURST = 8, DT = integer, RANGE = (1,2,4,8,16), DESC = 'Maximum number of quad-words per burst through MPLB', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MPLB_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on MPLB ', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MPLB_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on MPLB', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MPLB_WRITE_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), ISVALID = (C_MPLB_WRITE_POST_ENABLE > 0), DESC = 'Allow write address pipelining on MPLB ', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MPLB_WRITE_POST_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow posted writes on MPLB and SPLB interfaces', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MPLB_WRITE_PIPE_ENABLE, MPD_VALUE = 1
 PARAMETER C_MPLB_P2P = 0, BUS = MPLB, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = MPLB
 PARAMETER C_MPLB_WDOG_ENABLE = 1, DT = integer, RANGE = (0:1), DESC = 'NOT SUPPORTED', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_SPLB0_AWIDTH = 32, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB0_DWIDTH = 128, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = 
 PARAMETER C_SPLB0_NATIVE_DWIDTH = 128, DT = integer, BUS = SPLB0, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = 
 PARAMETER C_SPLB0_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB0, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB0_USE_MPLB_ADDR = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow access to MPLB via SPLB0', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_SPLB0_RNG0_MPLB_BASEADDR:C_SPLB0_RNG1_MPLB_BASEADDR:C_SPLB0_RNG2_MPLB_BASEADDR:C_SPLB0_RNG3_MPLB_BASEADDR, MPD_VALUE = 0
 PARAMETER C_SPLB0_NUM_MPLB_ADDR_RNG = 0, DT = integer, RANGE = (0:4), DESC = 'Number of MPLB address ranges accessible via SPLB0', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SPLB0_RNG0_MPLB_BASEADDR:C_SPLB0_RNG1_MPLB_BASEADDR:C_SPLB0_RNG2_MPLB_BASEADDR:C_SPLB0_RNG3_MPLB_BASEADDR, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_SPLB0_RNG_MC_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, MIN_SIZE = 0x08000000, DESC = 'MCI address range accessible via SPLB0', ADDR_TYPE = REGISTER, PAIR = C_SPLB0_RNG_MC_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG_MC_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0, ADDR_TYPE = REGISTER, PAIR = C_SPLB0_RNG_MC_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG0_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 1), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 0 of MPLB addresses accessible via SPLB0', PAIR = C_SPLB0_RNG0_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG0_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0, ADDR_TYPE = BRIDGE, PAIR = C_SPLB0_RNG0_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG1_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 2), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 1 of MPLB addresses accessible via SPLB0', PAIR = C_SPLB0_RNG1_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG1_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0, ADDR_TYPE = BRIDGE, PAIR = C_SPLB0_RNG1_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG2_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 3), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 2 of MPLB addresses accessible via SPLB0', PAIR = C_SPLB0_RNG2_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG2_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0, ADDR_TYPE = BRIDGE, PAIR = C_SPLB0_RNG2_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG3_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB0, BRIDGE_TO = MPLB, ISVALID = (C_SPLB0_NUM_MPLB_ADDR_RNG * C_SPLB0_USE_MPLB_ADDR >= 4), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 3 of MPLB addresses accessible via SPLB0', PAIR = C_SPLB0_RNG3_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB0_RNG3_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB0, ADDR_TYPE = BRIDGE, PAIR = C_SPLB0_RNG3_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PPCS0PLBMBUSY:PPCS0PLBMRDERR:PPCS0PLBMWRERR:PPCS0PLBMIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLBPPCS0MASTERID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB0_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on SPLB0 ', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_SPLB0_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on SPLB0', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_SPLB0_PROPAGATE_MIRQ = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Propagate MIRQ signals from crossbar onto SPLB0 bus', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_SPLB0_P2P = -1, DT = integer, BUS = SPLB0, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = -1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_AWIDTH = 32, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB1_DWIDTH = 128, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = 
 PARAMETER C_SPLB1_NATIVE_DWIDTH = 128, DT = integer, BUS = SPLB1, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = 
 PARAMETER C_SPLB1_SUPPORT_BURSTS = 1, DT = integer, BUS = SPLB1, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_USE_MPLB_ADDR = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow access to MPLB via SPLB1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_SPLB1_RNG0_MPLB_BASEADDR:C_SPLB1_RNG1_MPLB_BASEADDR:C_SPLB1_RNG2_MPLB_BASEADDR:C_SPLB1_RNG3_MPLB_BASEADDR, MPD_VALUE = 0
 PARAMETER C_SPLB1_NUM_MPLB_ADDR_RNG = 0, DT = integer, RANGE = (0:4), DESC = 'Number of MPLB address ranges accessible via SPLB1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SPLB1_RNG0_MPLB_BASEADDR:C_SPLB1_RNG1_MPLB_BASEADDR:C_SPLB1_RNG2_MPLB_BASEADDR:C_SPLB1_RNG3_MPLB_BASEADDR, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_SPLB1_RNG_MC_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, MIN_SIZE = 0x08000000, DESC = 'MCI address range accessible via SPLB1', ADDR_TYPE = REGISTER, PAIR = C_SPLB1_RNG_MC_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG_MC_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1, ADDR_TYPE = REGISTER, PAIR = C_SPLB1_RNG_MC_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG0_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 1), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 0 of MPLB addresses accessible via SPLB1', PAIR = C_SPLB1_RNG0_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG0_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1, ADDR_TYPE = BRIDGE, PAIR = C_SPLB1_RNG0_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG1_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 2), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 1 of MPLB addresses accessible via SPLB1', PAIR = C_SPLB1_RNG1_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG1_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1, ADDR_TYPE = BRIDGE, PAIR = C_SPLB1_RNG1_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG2_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 3), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 2 of MPLB addresses accessible via SPLB1', PAIR = C_SPLB1_RNG2_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG2_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1, ADDR_TYPE = BRIDGE, PAIR = C_SPLB1_RNG2_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG3_MPLB_BASEADDR = 0xffffffff, DT = std_logic_vector(0 to 31), BUS = SPLB1, BRIDGE_TO = MPLB, ISVALID = (C_SPLB1_NUM_MPLB_ADDR_RNG * C_SPLB1_USE_MPLB_ADDR >= 4), ADDR_TYPE = BRIDGE, MIN_SIZE = 0x08000000, DESC = 'Range 3 of MPLB addresses accessible via SPLB1', PAIR = C_SPLB1_RNG3_MPLB_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, RESOLVED_BUS = 
 PARAMETER C_SPLB1_RNG3_MPLB_HIGHADDR = 0x00000000, DT = std_logic_vector(0 to 31), BUS = SPLB1, ADDR_TYPE = BRIDGE, PAIR = C_SPLB1_RNG3_MPLB_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PPCS1PLBMBUSY:PPCS1PLBMRDERR:PPCS1PLBMWRERR:PPCS1PLBMIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLBPPCS1MASTERID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_ALLOW_LOCK_XFER = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow locked transfers on SPLB1 ', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_SPLB1_READ_PIPE_ENABLE = 1, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Allow read address pipelining on SPLB1', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_SPLB1_PROPAGATE_MIRQ = 0, DT = integer, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Propagate MIRQ signals from crossbar onto SPLB1 bus', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_SPLB1_P2P = -1, DT = integer, BUS = SPLB1, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = -1, RESOLVED_BUS = 
 PARAMETER C_NUM_DMA = 0, DT = INTEGER, RANGE = (0:4), DESC = 'Number of DMA channels to be used', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_DMA0_PLB_PRIO:C_DMA1_PLB_PRIO:C_DMA2_PLB_PRIO:C_DMA3_PLB_PRIO:C_DMA0_TXCHANNELCTRL:C_DMA0_RXCHANNELCTRL:C_DMA0_CONTROL:C_DMA0_TXIRQTIMER:C_DMA0_RXIRQTIMER:C_DMA1_TXCHANNELCTRL:C_DMA1_RXCHANNELCTRL:C_DMA1_CONTROL:C_DMA1_TXIRQTIMER:C_DMA1_RXIRQTIMER:C_DMA2_TXCHANNELCTRL:C_DMA2_RXCHANNELCTRL:C_DMA2_CONTROL:C_DMA2_TXIRQTIMER:C_DMA2_RXIRQTIMER:C_DMA3_TXCHANNELCTRL:C_DMA3_RXCHANNELCTRL:C_DMA3_CONTROL:C_DMA3_TXIRQTIMER:C_DMA3_RXIRQTIMER, MPD_VALUE = 0
 PARAMETER C_DMA0_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 Transmit channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA0_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 Receive channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA0_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 interface control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 8, MPD_VALUE = 0b00000000
 PARAMETER C_DMA0_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 transmit IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA0_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 0), DESC = 'DMA0 receive IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA1_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 Transmit channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA1_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 Receive channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA1_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 interface control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 8, MPD_VALUE = 0b00000000
 PARAMETER C_DMA1_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 transmit IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA1_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 1), DESC = 'DMA1 receive IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA2_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 Transmit channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA2_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 Receive channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA2_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 interface control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 8, MPD_VALUE = 0b00000000
 PARAMETER C_DMA2_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 transmit IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA2_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 2), DESC = 'DMA2 receive IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA3_TXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 Transmit channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA3_RXCHANNELCTRL = 0x01010000, DT = BIT_VECTOR(0 to 31), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 Receive channel control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x01010000
 PARAMETER C_DMA3_CONTROL = 0b00000000, DT = BIT_VECTOR(0 to 7), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 interface control register', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 8, MPD_VALUE = 0b00000000
 PARAMETER C_DMA3_TXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 transmit IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DMA3_RXIRQTIMER = 0b1111111111, DT = BIT_VECTOR(0 to 9), ISVALID = (C_NUM_DMA > 3), DESC = 'DMA3 receive IRQ coalescing clock divider ratio', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 10, MPD_VALUE = 0b1111111111
 PARAMETER C_DCR_AUTOLOCK_ENABLE = 1, DT = INTEGER, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Enable the auto-lock feature for the DCR indirect mode', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_PPCDM_ASYNCMODE = 0, DT = INTEGER, VALUES = (0 = 'Synchronous', 1 = 'Asynchronous'), DESC = 'Synchronization mode for the external MDCR interface', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_PPCDS_ASYNCMODE = 0, DT = INTEGER, VALUES = (0 = 'Synchronous', 1 = 'Asynchronous'), DESC = 'Synchronization mode for the external SDCR interface', ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_GENERATE_PLB_TIMESPECS = 1, DT = INTEGER, TYPE = NON_HDL, VALUES = (0 = 'No', 1 = 'Yes'), DESC = 'Generate TimeSpecs for SPLB0, SPLB1 MBusy output resynchronization flops', ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER HW_VER = 1.01.a
 BUS_INTERFACE MPLB = plb_v46_0, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE, SHARES_ADDR = PPC440MC, BRIDGE_FROM = SPLB0:SPLB1
 BUS_INTERFACE JTAGPPC = ppc440_0_jtagppc_bus, BUS_STD = XIL_JTAGPPC, BUS_TYPE = TARGET
 BUS_INTERFACE RESETPPC = ppc_reset_bus, BUS_STD = XIL_RESETPPC, BUS_TYPE = TARGET
 PORT CPMC440CLK = clk_250_0000MHzPLL0, DIR = I, INITIALVAL = VCC, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_250_0000MHzPLL0
 PORT CPMINTERCONNECTCLK = clk_250_0000MHzPLL0, DIR = I, INITIALVAL = VCC, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_250_0000MHzPLL0
 PORT CPMINTERCONNECTCLKNTO1 = net_vcc, DIR = I, INITIALVAL = VCC, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = net_vcc
 PORT EICC440EXTIRQ = ppc440_0_EICC440EXTIRQ, DIR = I, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = ppc440_0_EICC440EXTIRQ
 PORT DCRPPCDMACK = DCR_Ack, DIR = I, BUS = MDCR, DEFAULT = DCR_Ack, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDMDBUSIN = DCR_M_DBus, DIR = I, VEC = [0:31], BUS = MDCR, DEFAULT = DCR_M_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDMTIMEOUTWAIT = DCR_TimeoutWait, DIR = I, BUS = MDCR, DEFAULT = DCR_TimeoutWait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDMDCRREAD = M_dcrRead, DIR = O, BUS = MDCR, DEFAULT = M_dcrRead, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDMDCRWRITE = M_dcrWrite, DIR = O, BUS = MDCR, DEFAULT = M_dcrWrite, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDMDCRABUS = M_dcrABus, DIR = O, VEC = [0:9], BUS = MDCR, DEFAULT = M_dcrABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDMDCRDBUSOUT = M_dcrDBus, DIR = O, VEC = [0:31], BUS = MDCR, DEFAULT = M_dcrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDSREAD = DCR_Read, DIR = I, BUS = SDCR, DEFAULT = DCR_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDSWRITE = DCR_Write, DIR = I, BUS = SDCR, DEFAULT = DCR_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDSABUS = DCR_ABus, DIR = I, VEC = [0:9], BUS = SDCR, DEFAULT = DCR_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCRPPCDSDBUSOUT = DCR_Sl_DBus, DIR = I, VEC = [0:31], BUS = SDCR, DEFAULT = DCR_Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDSDCRACK = Sl_dcrAck, DIR = O, BUS = SDCR, DEFAULT = Sl_dcrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDSDCRDBUSIN = Sl_dcrDBus, DIR = O, VEC = [0:31], BUS = SDCR, DEFAULT = Sl_dcrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCDSDCRTIMEOUTWAIT = Sl_dcrTimeoutWait, DIR = O, BUS = SDCR, DEFAULT = Sl_dcrTimeoutWait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUCR = FCMAPUCR, DIR = I, VEC = [0:3], BUS = MFCM:MFCB, DEFAULT = FCMAPUCR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUDONE = FCMAPUDONE, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPUDONE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUEXCEPTION = FCMAPUEXCEPTION, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPUEXCEPTION, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUFPSCRFEX = FCMAPUFPSCRFEX, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPUFPSCRFEX, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPURESULT = FCMAPURESULT, DIR = I, VEC = [0:31], BUS = MFCM:MFCB, DEFAULT = FCMAPURESULT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPURESULTVALID = FCMAPURESULTVALID, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPURESULTVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUSLEEPNOTREADY = FCMAPUSLEEPNOTREADY, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPUSLEEPNOTREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUCONFIRMINSTR = FCMAPUCONFIRMINSTR, DIR = I, BUS = MFCM:MFCB, DEFAULT = FCMAPUCONFIRMINSTR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FCMAPUSTOREDATA = FCMAPUSTOREDATA, DIR = I, VEC = [0:127], BUS = MFCM:MFCB, DEFAULT = FCMAPUSTOREDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECNONAUTON = APUFCMDECNONAUTON, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMDECNONAUTON, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECFPUOP = APUFCMDECFPUOP, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMDECFPUOP, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECLDSTXFERSIZE = APUFCMDECLDSTXFERSIZE, DIR = O, VEC = [0:2], BUS = MFCM:MFCB, DEFAULT = APUFCMDECLDSTXFERSIZE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECLOAD = APUFCMDECLOAD, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMDECLOAD, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMNEXTINSTRREADY = APUFCMNEXTINSTRREADY, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMNEXTINSTRREADY, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECSTORE = APUFCMDECSTORE, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMDECSTORE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECUDI = APUFCMDECUDI, DIR = O, VEC = [0:3], BUS = MFCM:MFCB, DEFAULT = APUFCMDECUDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMDECUDIVALID = APUFCMDECUDIVALID, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMDECUDIVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMENDIAN = APUFCMENDIAN, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMENDIAN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMFLUSH = APUFCMFLUSH, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMFLUSH, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMINSTRUCTION = APUFCMINSTRUCTION, DIR = O, VEC = [0:31], BUS = MFCM:MFCB, DEFAULT = APUFCMINSTRUCTION, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMINSTRVALID = APUFCMINSTRVALID, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMINSTRVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMLOADBYTEADDR = APUFCMLOADBYTEADDR, DIR = O, VEC = [0:3], BUS = MFCM:MFCB, DEFAULT = APUFCMLOADBYTEADDR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMLOADDATA = APUFCMLOADDATA, DIR = O, VEC = [0:127], BUS = MFCM:MFCB, DEFAULT = APUFCMLOADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMLOADDVALID = APUFCMLOADDVALID, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMLOADDVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMOPERANDVALID = APUFCMOPERANDVALID, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMOPERANDVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMRADATA = APUFCMRADATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB, DEFAULT = APUFCMRADATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMRBDATA = APUFCMRBDATA, DIR = O, VEC = [0:31], BUS = MFCM:MFCB, DEFAULT = APUFCMRBDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMWRITEBACKOK = APUFCMWRITEBACKOK, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMWRITEBACKOK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMMSRFE0 = APUFCMMSRFE0, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMMSRFE0, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT APUFCMMSRFE1 = APUFCMMSRFE1, DIR = O, BUS = MFCM:MFCB, DEFAULT = APUFCMMSRFE1, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT JTGC440TCK = JTGC405TCK, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TCK', IO_IF = cpudbg_0, IO_IS = cpu_tck, DEFAULT = JTGC405TCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT JTGC440TDI = JTGC405TDI, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDI', IO_IF = cpudbg_0, IO_IS = cpu_tdi, DEFAULT = JTGC405TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT JTGC440TMS = JTGC405TMS, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TMS', IO_IF = cpudbg_0, IO_IS = cpu_tms, DEFAULT = JTGC405TMS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT JTGC440TRSTNEG = JTGC405TRSTNEG, DIR = I, INITIALVAL = VCC, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TRST', IO_IF = cpudbg_0, IO_IS = cpu_trst, DEFAULT = JTGC405TRSTNEG, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT C440JTGTDO = C405JTGTDO, DIR = O, BUS = JTAGPPC, PERMIT = BASE_USER, DESC = 'JTAG TDO', IO_IF = cpudbg_0, IO_IS = cpu_tdo, DEFAULT = C405JTGTDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT C440JTGTDOEN = C405JTGTDOEN, DIR = O, BUS = JTAGPPC, DEFAULT = C405JTGTDOEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC
 PORT CPMMCCLK = clk_125_0000MHzPLL0_ADJUST, DIR = I, INITIALVAL = VCC, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT MCMIREADDATA = MCMIREADDATA, DIR = I, VEC = [0:127], BUS = PPC440MC, DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCMIREADDATAVALID = MCMIREADDATAVALID, DIR = I, BUS = PPC440MC, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCMIREADDATAERR = MCMIREADDATAERR, DIR = I, BUS = PPC440MC, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCMIADDRREADYTOACCEPT = MCMIADDRREADYTOACCEPT, DIR = I, INITIALVAL = VCC, BUS = PPC440MC, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCREADNOTWRITE = MIMCREADNOTWRITE, DIR = O, BUS = PPC440MC, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCADDRESS = MIMCADDRESS, DIR = O, VEC = [0:35], BUS = PPC440MC, DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCADDRESSVALID = MIMCADDRESSVALID, DIR = O, BUS = PPC440MC, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCWRITEDATA = MIMCWRITEDATA, DIR = O, VEC = [0:127], BUS = PPC440MC, DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCWRITEDATAVALID = MIMCWRITEDATAVALID, DIR = O, BUS = PPC440MC, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCBYTEENABLE = MIMCBYTEENABLE, DIR = O, VEC = [0:15], BUS = PPC440MC, DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCBANKCONFLICT = MIMCBANKCONFLICT, DIR = O, BUS = PPC440MC, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MIMCROWCONFLICT = MIMCROWCONFLICT, DIR = O, BUS = PPC440MC, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCMMBUSY = PLB_MBusy, DIR = I, BUS = MPLB, DEFAULT = PLB_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMMIRQ = PLB_MIRQ, DIR = I, BUS = MPLB, DEFAULT = PLB_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMMRDERR = PLB_MRdErr, DIR = I, BUS = MPLB, DEFAULT = PLB_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMMWRERR = PLB_MWrErr, DIR = I, BUS = MPLB, DEFAULT = PLB_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMADDRACK = PLB_MAddrAck, DIR = I, BUS = MPLB, DEFAULT = PLB_MAddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDBTERM = PLB_MRdBTerm, DIR = I, BUS = MPLB, DEFAULT = PLB_MRdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDDACK = PLB_MRdDAck, DIR = I, BUS = MPLB, DEFAULT = PLB_MRdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDDBUS = PLB_MRdDBus, DIR = I, VEC = [0:127], BUS = MPLB, DEFAULT = PLB_MRdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDWDADDR = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB, DEFAULT = PLB_MRdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMREARBITRATE = PLB_MRearbitrate, DIR = I, BUS = MPLB, DEFAULT = PLB_MRearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMSSIZE = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB, DEFAULT = PLB_MSSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMTIMEOUT = PLB_MTimeout, DIR = I, BUS = MPLB, DEFAULT = PLB_MTimeout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMWRBTERM = PLB_MWrBTerm, DIR = I, BUS = MPLB, DEFAULT = PLB_MWrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMWRDACK = PLB_MWrDAck, DIR = I, BUS = MPLB, DEFAULT = PLB_MWrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = MPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMRDPENDREQ = PLB_rdPendReq, DIR = I, BUS = MPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMREQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = MPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMWRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = MPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCMWRPENDREQ = PLB_wrPendReq, DIR = I, BUS = MPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBABORT = M_abort, DIR = O, BUS = MPLB, DEFAULT = M_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBABUS = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB, DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBBE = M_BE, DIR = O, VEC = [0:15], BUS = MPLB, DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBBUSLOCK = M_busLock, DIR = O, BUS = MPLB, DEFAULT = M_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBLOCKERR = M_lockErr, DIR = O, BUS = MPLB, DEFAULT = M_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBMSIZE = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB, DEFAULT = M_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBPRIORITY = M_priority, DIR = O, VEC = [0:1], BUS = MPLB, DEFAULT = M_priority, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBRDBURST = M_rdBurst, DIR = O, BUS = MPLB, DEFAULT = M_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBREQUEST = M_request, DIR = O, BUS = MPLB, DEFAULT = M_request, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBRNW = M_RNW, DIR = O, BUS = MPLB, DEFAULT = M_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBSIZE = M_size, DIR = O, VEC = [0:3], BUS = MPLB, DEFAULT = M_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBTATTRIBUTE = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB, DEFAULT = M_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBTYPE = M_type, DIR = O, VEC = [0:2], BUS = MPLB, DEFAULT = M_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBUABUS = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB, DEFAULT = M_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBWRBURST = M_wrBurst, DIR = O, BUS = MPLB, DEFAULT = M_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PPCMPLBWRDBUS = M_wrDBus, DIR = O, VEC = [0:127], BUS = MPLB, DEFAULT = M_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPLB
 PORT PLBPPCS0MASTERID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB0_MID_WIDTH-1)], BUS = SPLB0, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0PAVALID = PLB_PAValid, DIR = I, BUS = SPLB0, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0SAVALID = PLB_SAValid, DIR = I, BUS = SPLB0, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0RDPENDREQ = PLB_rdPendReq, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0WRPENDREQ = PLB_wrPendReq, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0RDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB0, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0WRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB0, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0REQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB0, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0RDPRIM = PLB_rdPrim, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0WRPRIM = PLB_wrPrim, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0BUSLOCK = PLB_busLock, DIR = I, BUS = SPLB0, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0ABORT = PLB_abort, DIR = I, BUS = SPLB0, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0RNW = PLB_RNW, DIR = I, BUS = SPLB0, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0BE = PLB_BE, DIR = I, VEC = [0:15], BUS = SPLB0, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0SIZE = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB0, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0TYPE = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB0, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0TATTRIBUTE = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB0, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0LOCKERR = PLB_lockErr, DIR = I, BUS = SPLB0, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0MSIZE = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB0, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0UABUS = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB0, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0ABUS = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB0, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0WRDBUS = PLB_wrDBus, DIR = I, VEC = [0:127], BUS = SPLB0, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0WRBURST = PLB_wrBurst, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS0RDBURST = PLB_rdBurst, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBADDRACK = Sl_addrAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBWAIT = Sl_wait, DIR = O, BUS = SPLB0, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBREARBITRATE = Sl_rearbitrate, DIR = O, BUS = SPLB0, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBWRDACK = Sl_wrDAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBWRCOMP = Sl_wrComp, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBRDDBUS = Sl_rdDBus, DIR = O, VEC = [0:127], BUS = SPLB0, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBRDWDADDR = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB0, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBRDDACK = Sl_rdDAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBRDCOMP = Sl_rdComp, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBRDBTERM = Sl_rdBTerm, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBWRBTERM = Sl_wrBTerm, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBMBUSY = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBMRDERR = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBMWRERR = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBMIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], BUS = SPLB0, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS0PLBSSIZE = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB0, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1MASTERID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB1_MID_WIDTH-1)], BUS = SPLB1, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1PAVALID = PLB_PAValid, DIR = I, BUS = SPLB1, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1SAVALID = PLB_SAValid, DIR = I, BUS = SPLB1, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1RDPENDREQ = PLB_rdPendReq, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1WRPENDREQ = PLB_wrPendReq, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1RDPENDPRI = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB1, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1WRPENDPRI = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB1, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1REQPRI = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB1, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1RDPRIM = PLB_rdPrim, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1WRPRIM = PLB_wrPrim, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1BUSLOCK = PLB_busLock, DIR = I, BUS = SPLB1, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1ABORT = PLB_abort, DIR = I, BUS = SPLB1, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1RNW = PLB_RNW, DIR = I, BUS = SPLB1, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1BE = PLB_BE, DIR = I, VEC = [0:15], BUS = SPLB1, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1SIZE = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB1, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1TYPE = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB1, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1TATTRIBUTE = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB1, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1LOCKERR = PLB_lockErr, DIR = I, BUS = SPLB1, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1MSIZE = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB1, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1UABUS = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB1, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1ABUS = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB1, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1WRDBUS = PLB_wrDBus, DIR = I, VEC = [0:127], BUS = SPLB1, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1WRBURST = PLB_wrBurst, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLBPPCS1RDBURST = PLB_rdBurst, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBADDRACK = Sl_addrAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBWAIT = Sl_wait, DIR = O, BUS = SPLB1, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBREARBITRATE = Sl_rearbitrate, DIR = O, BUS = SPLB1, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBWRDACK = Sl_wrDAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBWRCOMP = Sl_wrComp, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBRDDBUS = Sl_rdDBus, DIR = O, VEC = [0:127], BUS = SPLB1, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBRDWDADDR = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB1, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBRDDACK = Sl_rdDAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBRDCOMP = Sl_rdComp, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBRDBTERM = Sl_rdBTerm, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBWRBTERM = Sl_wrBTerm, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBMBUSY = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBMRDERR = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBMWRERR = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBMIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], BUS = SPLB1, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPCS1PLBSSIZE = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB1, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA0, DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA0, DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA0RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA0, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA0, DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA0, DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA0, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA0LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA0, ISVALID = (C_NUM_DMA > 0), DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA1, DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA1, DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA1RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA1, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA1, DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA1, DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA1, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA1LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA1, ISVALID = (C_NUM_DMA > 1), DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA2, DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA2, DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA2RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA2, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA2, DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA2, DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA2, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA2LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA2, ISVALID = (C_NUM_DMA > 2), DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3TXDSTRDYN = LL_Tx_DstRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXD = LL_Rx_Data, DIR = I, VEC = [0:31], BUS = LLDMA3, DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXREM = LL_Rx_Rem, DIR = I, VEC = [0:3], BUS = LLDMA3, DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXSOFN = LL_Rx_SOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXEOFN = LL_Rx_EOF_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXSOPN = LL_Rx_SOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXEOPN = LL_Rx_EOP_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LLDMA3RXSRCRDYN = LL_Rx_SrcRdy_n, DIR = I, INITIALVAL = VCC, BUS = LLDMA3, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXD = LL_Tx_Data, DIR = O, VEC = [0:31], BUS = LLDMA3, DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXREM = LL_Tx_Rem, DIR = O, VEC = [0:3], BUS = LLDMA3, DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXSOFN = LL_Tx_SOF_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXEOFN = LL_Tx_EOF_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXSOPN = LL_Tx_SOP_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXEOPN = LL_Tx_EOP_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLTXSRCRDYN = LL_Tx_SrcRdy_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLRXDSTRDYN = LL_Rx_DstRdy_n, DIR = O, BUS = LLDMA3, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DMA3LLRSTENGINEACK = LL_RST_ACK, DIR = O, BUS = LLDMA3, ISVALID = (C_NUM_DMA > 3), DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT RSTC440RESETCORE = RstcPPCresetcore, DIR = I, SIGIS = RST, BUS = RESETPPC, DEFAULT = RstcPPCresetcore, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
 PORT RSTC440RESETCHIP = RstsPPCresetchip, DIR = I, SIGIS = RST, BUS = RESETPPC, DEFAULT = RstsPPCresetchip, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
 PORT RSTC440RESETSYSTEM = RstcPPCresetsys, DIR = I, SIGIS = RST, BUS = RESETPPC, DEFAULT = RstcPPCresetsys, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
 PORT C440RSTCORERESETREQ = Core_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC, DEFAULT = Core_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
 PORT C440RSTCHIPRESETREQ = Chip_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC, DEFAULT = Chip_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
 PORT C440RSTSYSTEMRESETREQ = System_Reset_Req, DIR = O, SIGIS = RST, BUS = RESETPPC, DEFAULT = System_Reset_Req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = RESETPPC
END

BEGIN plb_v46
 PARAMETER INSTANCE = plb_v46_0
 PARAMETER C_PLBV46_NUM_MASTERS = 4, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = MPLB_Rst:M_ABus:M_UABus:M_BE:M_RNW:M_abort:M_busLock:M_TAttribute:M_lockErr:M_MSize:M_priority:M_rdBurst:M_request:M_size:M_type:M_wrBurst:M_wrDBus:Sl_MRdErr:Sl_MWrErr:Sl_MBusy:Sl_MIRQ:PLB_MIRQ:PLB_MAddrAck:PLB_MTimeout:PLB_MBusy:PLB_MRdErr:PLB_MWrErr:PLB_MRdBTerm:PLB_MRdDAck:PLB_MRdDBus:PLB_MRdWdAddr:PLB_MRearbitrate:PLB_MWrBTerm:PLB_MWrDAck:PLB_MSSize:PLB_SMRdErr:PLB_SMWrErr:PLB_SMBusy, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_PLBV46_NUM_SLAVES = 8, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB_Rst:Sl_addrAck:Sl_MRdErr:Sl_MWrErr:Sl_MBusy:Sl_rdBTerm:Sl_rdComp:Sl_rdDAck:Sl_rdDBus:Sl_rdWdAddr:Sl_rearbitrate:Sl_SSize:Sl_wait:Sl_wrBTerm:Sl_wrComp:Sl_wrDAck:Sl_MIRQ:PLB_rdPrim:PLB_wrPrim, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8
 PARAMETER C_PLBV46_MID_WIDTH = 2, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2
 PARAMETER C_PLBV46_AWIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32
 PARAMETER C_PLBV46_DWIDTH = 64, DT = integer, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = M_BE:M_wrDBus:Sl_rdDBus:PLB_BE:PLB_MRdDBus:PLB_wrDBus:PLB_SrdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 64
 PARAMETER C_DCR_INTFCE = 0, DT = integer, BUS = SDCR, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_BASEADDR:C_HIGHADDR, MPD_VALUE = 0, MHS_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_BASEADDR = 0b1111111111, DT = std_logic_vector, BUS = SDCR, MIN_SIZE = 0x08, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1), ADDR_TYPE = REGISTER, PAIR = C_HIGHADDR, ADDRESS = BASE, BITWIDTH = 10, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b1111111111, RESOLVED_BUS = 
 PARAMETER C_HIGHADDR = 0b0000000000, DT = std_logic_vector, ASSIGNMENT = REQUIRE, ISVALID = (C_DCR_INTFCE==1), BUS = SDCR, ADDR_TYPE = REGISTER, PAIR = C_BASEADDR, ADDRESS = HIGH, BITWIDTH = 10, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0b0000000000, RESOLVED_BUS = 
 PARAMETER C_DCR_AWIDTH = 10, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = DCR_ABus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 10, RESOLVED_BUS = 
 PARAMETER C_DCR_DWIDTH = 32, DT = integer, BUS = SDCR, ASSIGNMENT = CONSTANT, AFFECTS_PORTS_VEC = PLB_dcrDBus:DCR_DBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_EXT_RESET_HIGH = 1, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IRQ_ACTIVE = 1, DT = std_logic, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_NUM_CLK_PLB2OPB_REARB = 5, DT = integer, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 5
 PARAMETER C_ADDR_PIPELINING_TYPE = 1, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_FAMILY = virtex5, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_P2P = 0, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ARB_TYPE = 0, DT = integer, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER HW_VER = 1.04.a
 PORT PLB_Clk = clk_125_0000MHzPLL0_ADJUST, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT SYS_Rst = sys_bus_reset, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_bus_reset
 PORT PLB_Rst = PLB_Rst, DIR = O, SIGIS = RST, DEFAULT = PLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT SPLB_Rst = SPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT MPLB_Rst = MPLB_Rst, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], SIGIS = RST, DEFAULT = MPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_dcrAck = Sl_dcrAck, DIR = O, BUS = SDCR, DEFAULT = Sl_dcrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PLB_dcrDBus = Sl_dcrDBus, DIR = O, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR, DEFAULT = Sl_dcrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_ABus = DCR_ABus, DIR = I, VEC = [0:C_DCR_AWIDTH-1], BUS = SDCR, DEFAULT = DCR_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_DBus = DCR_Sl_DBus, DIR = I, VEC = [0:C_DCR_DWIDTH-1], BUS = SDCR, DEFAULT = DCR_Sl_DBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_Read = DCR_Read, DIR = I, BUS = SDCR, DEFAULT = DCR_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT DCR_Write = DCR_Write, DIR = I, BUS = SDCR, DEFAULT = DCR_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT M_ABus = M_ABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1], DEFAULT = M_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_UABus = M_UABus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*32)-1], DEFAULT = M_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_BE = M_BE, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*(C_PLBV46_DWIDTH/8))-1], DEFAULT = M_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_RNW = M_RNW, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_abort = M_abort, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_busLock = M_busLock, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_TAttribute = M_TAttribute, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*16)-1], DEFAULT = M_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_lockErr = M_lockErr, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_MSize = M_MSize, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = M_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_priority = M_priority, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = M_priority, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_rdBurst = M_rdBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_request = M_request, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_request, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_size = M_size, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1], DEFAULT = M_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_type = M_type, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*3)-1], DEFAULT = M_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_wrBurst = M_wrBurst, DIR = I, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = M_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT M_wrDBus = M_wrDBus, DIR = I, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1], DEFAULT = M_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_addrAck = Sl_addrAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MRdErr = Sl_MRdErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MWrErr = Sl_MWrErr, DIR = I, VEC = [0:(C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS)-1], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MBusy = Sl_MBusy, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS - 1 ], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdComp = Sl_rdComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdDAck = Sl_rdDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdDBus = Sl_rdDBus, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_DWIDTH-1], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*4-1], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_SSize = Sl_SSize, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*2-1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wait = Sl_wait, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrComp = Sl_wrComp, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_wrDAck = Sl_wrDAck, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT Sl_MIRQ = Sl_MIRQ, DIR = I, VEC = [0:C_PLBV46_NUM_SLAVES*C_PLBV46_NUM_MASTERS-1], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MIRQ = PLB_MIRQ, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_ABus = PLB_ABus, DIR = O, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_UABus = PLB_UABus, DIR = O, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_BE = PLB_BE, DIR = O, VEC = [0:(C_PLBV46_DWIDTH/8)-1], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MAddrAck = PLB_MAddrAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MAddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MTimeout = PLB_MTimeout, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MTimeout, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MBusy = PLB_MBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdErr = PLB_MRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrErr = PLB_MWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdDAck = PLB_MRdDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdDBus = PLB_MRdDBus, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*C_PLBV46_DWIDTH)-1], DEFAULT = PLB_MRdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*4)-1], DEFAULT = PLB_MRdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MRearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MWrDAck = PLB_MWrDAck, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_MWrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MSSize = PLB_MSSize, DIR = O, VEC = [0:(C_PLBV46_NUM_MASTERS*2)-1], DEFAULT = PLB_MSSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_PAValid = PLB_PAValid, DIR = O, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_RNW = PLB_RNW, DIR = O, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SAValid = PLB_SAValid, DIR = O, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_abort = PLB_abort, DIR = O, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_busLock = PLB_busLock, DIR = O, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_TAttribute = PLB_TAttribute, DIR = O, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_lockErr = PLB_lockErr, DIR = O, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_masterID = PLB_masterID, DIR = O, VEC = [0:C_PLBV46_MID_WIDTH-1], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_MSize = PLB_MSize, DIR = O, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = O, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = O, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = O, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = O, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdBurst = PLB_rdBurst, DIR = O, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_rdPrim = PLB_rdPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_reqPri = PLB_reqPri, DIR = O, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_size = PLB_size, DIR = O, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_type = PLB_type, DIR = O, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrBurst = PLB_wrBurst, DIR = O, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrDBus = PLB_wrDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_wrPrim = PLB_wrPrim, DIR = O, VEC = [0:C_PLBV46_NUM_SLAVES-1], DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SaddrAck = PLB_SaddrAck, DIR = O, DEFAULT = PLB_SaddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMRdErr = PLB_SMRdErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMWrErr = PLB_SMWrErr, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SMBusy = PLB_SMBusy, DIR = O, VEC = [0:C_PLBV46_NUM_MASTERS-1], DEFAULT = PLB_SMBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdBTerm = PLB_SrdBTerm, DIR = O, DEFAULT = PLB_SrdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdComp = PLB_SrdComp, DIR = O, DEFAULT = PLB_SrdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdDAck = PLB_SrdDAck, DIR = O, DEFAULT = PLB_SrdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdDBus = PLB_SrdDBus, DIR = O, VEC = [0:C_PLBV46_DWIDTH-1], DEFAULT = PLB_SrdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SrdWdAddr = PLB_SrdWdAddr, DIR = O, VEC = [0:3], DEFAULT = PLB_SrdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Srearbitrate = PLB_Srearbitrate, DIR = O, DEFAULT = PLB_Srearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Sssize = PLB_Sssize, DIR = O, VEC = [0:1], DEFAULT = PLB_Sssize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_Swait = PLB_Swait, DIR = O, DEFAULT = PLB_Swait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrBTerm = PLB_SwrBTerm, DIR = O, DEFAULT = PLB_SwrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrComp = PLB_SwrComp, DIR = O, DEFAULT = PLB_SwrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT PLB_SwrDAck = PLB_SwrDAck, DIR = O, DEFAULT = PLB_SwrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
END

BEGIN jtagppc_cntlr
 PARAMETER INSTANCE = jtagppc_cntlr_inst
 PARAMETER C_DEVICE = X2VP4, DT = string, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = X2VP4
 PARAMETER C_NUM_PPC_USED = 0, DT = integer, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ppc, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER HW_VER = 2.01.c
 BUS_INTERFACE JTAGPPC0 = ppc440_0_jtagppc_bus, BUS_STD = XIL_JTAGPPC, BUS_TYPE = INITIATOR
 PORT C405JTGTDO0 = C405JTGTDO, DIR = I, INITIALVAL = GND, BUS = JTAGPPC0, DEFAULT = C405JTGTDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT C405JTGTDOEN0 = C405JTGTDOEN, DIR = I, INITIALVAL = GND, BUS = JTAGPPC0, DEFAULT = C405JTGTDOEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT JTGC405TCK0 = JTGC405TCK, DIR = O, BUS = JTAGPPC0, DEFAULT = JTGC405TCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT JTGC405TDI0 = JTGC405TDI, DIR = O, BUS = JTAGPPC0, DEFAULT = JTGC405TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT JTGC405TMS0 = JTGC405TMS, DIR = O, BUS = JTAGPPC0, DEFAULT = JTGC405TMS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT JTGC405TRSTNEG0 = JTGC405TRSTNEG, DIR = O, BUS = JTAGPPC0, DEFAULT = JTGC405TRSTNEG, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = JTAGPPC0
 PORT C405JTGTDO1 = C405JTGTDO, DIR = I, INITIALVAL = GND, BUS = JTAGPPC1, DEFAULT = C405JTGTDO, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT C405JTGTDOEN1 = C405JTGTDOEN, DIR = I, INITIALVAL = GND, BUS = JTAGPPC1, DEFAULT = C405JTGTDOEN, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT JTGC405TCK1 = JTGC405TCK, DIR = O, BUS = JTAGPPC1, DEFAULT = JTGC405TCK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT JTGC405TDI1 = JTGC405TDI, DIR = O, BUS = JTAGPPC1, DEFAULT = JTGC405TDI, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT JTGC405TMS1 = JTGC405TMS, DIR = O, BUS = JTAGPPC1, DEFAULT = JTGC405TMS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT JTGC405TRSTNEG1 = JTGC405TRSTNEG, DIR = O, BUS = JTAGPPC1, DEFAULT = JTGC405TRSTNEG, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
END

BEGIN clock_generator
 PARAMETER INSTANCE = clock_generator_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_SPEEDGRADE = 0, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_EXT_RESET_HIGH = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_CLK_GEN = update, DT = STRING, VALUES = (UPDATE=UPDATE, PASSED=PASSED, FAILED=FAILED), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = update
 PARAMETER C_CLKOUT0_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT0_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT2_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT2_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT3_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT3_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT4_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT4_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT5_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT5_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT6_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT6_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT7_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT7_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT8_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT8_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT9_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT9_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT10_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT10_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT11_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT11_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT12_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT12_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT13_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT13_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT14_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT14_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT15_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT15_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKFBOUT_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKFBOUT_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PSDONE_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_DIVCLK_DIVIDE = 1, DT = INTEGER, RANGE = (1:52), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKFBOUT_MULT = 1, DT = INTEGER, RANGE = (1:64), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT0_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT1_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT2_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT3_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT4_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_CLKOUT5_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL0_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL0_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL0_BANDWIDTH = OPTIMIZED, DT = STRING, VALUES = (OPTIMIZED=OPTIMIZED, LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_PLL0_COMPENSATION = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM_SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE_SYNCHRONOUS), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_PLL0_REF_JITTER = 0.100000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.100000
 PARAMETER C_PLL0_RESET_ON_LOSS_OF_LOCK = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_RST_DEASSERT_CLK = CLKIN1, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = CLKIN1
 PARAMETER C_PLL0_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_PLL0_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_PLL0_CLKOUT0_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKOUT1_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKOUT2_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKOUT3_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKOUT4_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKOUT5_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKFBOUT_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL0_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_DIVCLK_DIVIDE = 1, DT = INTEGER, RANGE = (1:52), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKFBOUT_MULT = 1, DT = INTEGER, RANGE = (1:64), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT0_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT1_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT2_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT3_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT4_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_CLKOUT5_DIVIDE = 1, DT = INTEGER, RANGE = (1:128), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PLL1_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_PLL1_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_PLL1_BANDWIDTH = OPTIMIZED, DT = STRING, VALUES = (OPTIMIZED=OPTIMIZED, LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_PLL1_COMPENSATION = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM_SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE_SYNCHRONOUS), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_PLL1_REF_JITTER = 0.100000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.100000
 PARAMETER C_PLL1_RESET_ON_LOSS_OF_LOCK = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_RST_DEASSERT_CLK = CLKIN1, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = CLKIN1
 PARAMETER C_PLL1_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_PLL1_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_PLL1_CLKOUT0_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKOUT1_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKOUT2_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKOUT3_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKOUT4_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKOUT5_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKFBOUT_DESKEW_ADJUST = NONE, DT = STRING, VALUES = (NONE=NONE, PPC=PPC), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_PLL1_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PLL1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM0_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM0_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = true
 PARAMETER C_DCM0_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1X
 PARAMETER C_DCM0_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCM0_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_DCM0_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM0_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2.000000
 PARAMETER C_DCM0_CLKIN_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_DCM0_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_DCM0_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM0_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM0_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_DCM0_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM1_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM1_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = true
 PARAMETER C_DCM1_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1X
 PARAMETER C_DCM1_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCM1_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_DCM1_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM1_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2.000000
 PARAMETER C_DCM1_CLKIN_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_DCM1_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_DCM1_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM1_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM1_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_DCM1_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM2_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM2_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = true
 PARAMETER C_DCM2_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1X
 PARAMETER C_DCM2_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCM2_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_DCM2_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM2_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2.000000
 PARAMETER C_DCM2_CLKIN_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_DCM2_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_DCM2_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM2_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM2_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_DCM2_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM2_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_DFS_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM3_DLL_FREQUENCY_MODE = LOW, DT = STRING, VALUES = (LOW=LOW, HIGH=HIGH), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = LOW
 PARAMETER C_DCM3_DUTY_CYCLE_CORRECTION = true, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = true
 PARAMETER C_DCM3_CLKIN_DIVIDE_BY_2 = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK_FEEDBACK = 1X, DT = STRING, VALUES = (NONE=NONE, 1X=1X, 2X=2X), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1X
 PARAMETER C_DCM3_CLKOUT_PHASE_SHIFT = NONE, DT = STRING, VALUES = (NONE=NONE, FIXED=FIXED, VARIABLE=VARIABLE, VARIABLE_POSITIVE=VARIABLE POSITIVE, VARIABLE_CENTER=VARIABLE CENTER, DIRECT=DIRECT), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_DSS_MODE = NONE, DT = STRING, VALUES = (NONE=NONE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_STARTUP_WAIT = false, DT = BOOLEAN, VALUES = (TRUE=TRUE, FALSE=FALSE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_PHASE_SHIFT = 0, DT = INTEGER, RANGE = (-255:1023), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_DCM3_CLKFX_MULTIPLY = 4, DT = INTEGER, RANGE = (2:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4
 PARAMETER C_DCM3_CLKFX_DIVIDE = 1, DT = INTEGER, RANGE = (1:32), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM3_CLKDV_DIVIDE = 2.000000, DT = REAL, VALUES = (1.5 = 1.5, 2.0 = 2.0, 2.5 = 2.5, 3.0= 3.0, 3.5= 3.5, 4.0= 4.0, 4.5= 4.5, 5.0= 5.0, 5.5=5.5, 6.0= 6.0, 6.5= 6.5, 7.0= 7.0, 7.5= 7.5, 8.0= 8.0, 9.0= 9.0, 10.0= 10.0, 11.0= 11.0, 12.0= 12.0, 13.0= 13.0, 14.0= 14.0, 15.0= 15.0, 16.0= 16.0), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 2.000000
 PARAMETER C_DCM3_CLKIN_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_DCM3_DESKEW_ADJUST = SYSTEM_SYNCHRONOUS, DT = STRING, VALUES = (SYSTEM_SYNCHRONOUS=SYSTEM SYNCHRONOUS, SOURCE_SYNCHRONOUS=SOURCE SYNCHRONOUS, 0=0, 1=1, 2=2, 3=3, 4=4, 5=5, 6=6, 7=7, 8=8, 9=9, 10=10, 11=11, 12=12, 13=13, 14=14, 15=15), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = SYSTEM_SYNCHRONOUS
 PARAMETER C_DCM3_CLKIN_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLKFB_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK90_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK270_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLKDV_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLKDV180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK2X_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLK2X180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLKFX_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_CLKFX180_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_DCM3_EXT_RESET_HIGH = 1, DT = INTEGER, IO_IS = polarity, RANGE = (0:1), VALUES = (0=0:Active Low, 1=1:Active High), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_DCM3_FAMILY = virtex5, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_DCM3_CLKIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_CLKIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_CLKFB_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_CLKFB_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_DCM3_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM0_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_MMCM0_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM0_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM0_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM0_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM0_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = ZHOLD
 PARAMETER C_MMCM0_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.010000
 PARAMETER C_MMCM0_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM0_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex6
 PARAMETER C_MMCM0_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM0_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM0_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM0_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM0_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM0_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM1_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_MMCM1_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM1_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM1_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM1_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM1_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = ZHOLD
 PARAMETER C_MMCM1_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.010000
 PARAMETER C_MMCM1_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM1_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex6
 PARAMETER C_MMCM1_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM1_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM1_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM1_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM1_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM1_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM2_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_MMCM2_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM2_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM2_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM2_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM2_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = ZHOLD
 PARAMETER C_MMCM2_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.010000
 PARAMETER C_MMCM2_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM2_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex6
 PARAMETER C_MMCM2_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM2_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM2_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM2_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM2_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM2_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM3_BANDWIDTH = OPTIMIZED, DT = STRING, VALUE = (OPTIMIZED=OPTIMIZED, HIGH=HIGH, LOW=LOW), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OPTIMIZED
 PARAMETER C_MMCM3_CLKFBOUT_MULT_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM3_CLKFBOUT_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKFBOUT_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKIN1_PERIOD = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT0_DIVIDE_F = 1.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1.000000
 PARAMETER C_MMCM3_CLKOUT0_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT0_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT1_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT1_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT1_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT2_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT2_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT2_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT3_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT3_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT3_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT4_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT4_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT4_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT4_CASCADE = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT5_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT5_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT5_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT6_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_CLKOUT6_DUTY_CYCLE = 0.500000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.500000
 PARAMETER C_MMCM3_CLKOUT6_PHASE = 0.000000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.000000
 PARAMETER C_MMCM3_CLKOUT0_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT1_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT2_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT3_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT4_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT5_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT6_USE_FINE_PS = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_COMPENSATION = ZHOLD, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = ZHOLD
 PARAMETER C_MMCM3_DIVCLK_DIVIDE = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_REF_JITTER1 = 0.010000, DT = REAL, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0.010000
 PARAMETER C_MMCM3_CLKIN1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKFBOUT_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLOCK_HOLD = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_STARTUP_WAIT = false, DT = BOOLEAN, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_EXT_RESET_HIGH = 1, DT = INTEGER, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_MMCM3_FAMILY = virtex6, DT = STRING, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex6
 PARAMETER C_MMCM3_CLKOUT0_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT1_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT2_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT3_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT4_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT5_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKOUT6_BUF = false, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = false
 PARAMETER C_MMCM3_CLKIN1_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM3_CLKIN1_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM3_CLKFBIN_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM3_CLKFBIN_PORT = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKFBIN=CLKFBIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKFBOUT=CLKFBOUT, CLKDCMOUT0=CLKOUTDCM0, CLKDCMOUT1=CLKOUTDCM1, CLKDCMOUT2=CLKOUTDCM2, CLKOUTDCM3=CLKOUTDCM3, CLKOUTDCM4=CLKOUTDCM4, CLKOUTDCM5=CLKOUTDCM5, CLKFBDCM=CLKFBDCM, CLKOUT0B=CLKOUT0B, CLKOUT1B=CLKOUT1B, CLKOUT2B=CLKOUT2B, CLKOUT3B=CLKOUT3B, CLKOUT4B=CLKOUT4B, CLKOUT5B=CLKOUT5B, CLK0=CLK0, CLK90=CLK90, CLK180=CLK180, CLK270=CLK270, CLKDV=CLKDV, CLKDV180=CLKDV180, CLK2X=CLK2X, CLK2X180=CLK2X180, CLKFX=CLKFX, CLKFX180=CLKFX180, CLK0B=CLK0B, CLK90B=CLK90B, CLK180B=CLK180B, CLK270B=CLK270B, CLKDVB=CLKDVB, CLKDV180B=CLKDV180B, CLK2XB=CLK2XB, CLK2X180B=CLK2X180B, CLKFXB=CLKFXB, CLKFX180B=CLKFX180B, CLKOUT6=CLKOUT6, CLKOUT6B=CLKOUT6B), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_MMCM3_RST_MODULE = NONE, DT = STRING, VALUES = (NONE=NONE, CLKGEN=CLKGEN, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKIN_FREQ = 100000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 100000000
 PARAMETER C_CLKFBIN_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKFBIN_DESKEW = NONE, DT = STRING, VALUES = (NONE=NONE, CLKIN=CLKIN, CLKOUT0=CLKOUT0, CLKOUT1=CLKOUT1, CLKOUT2=CLKOUT2, CLKOUT3=CLKOUT3, CLKOUT4=CLKOUT4, CLKOUT5=CLKOUT5, CLKOUT6=CLKOUT6, CLKOUT7=CLKOUT7, CLKOUT8=CLKOUT8, CLKOUT9=CLKOUT9, CLKOUT10=CLKOUT10, CLKOUT11=CLKOUT11, CLKOUT12=CLKOUT12, CLKOUT13=CLKOUT13, CLKOUT14=CLKOUT14, CLKOUT15=CLKOUT15), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_PSDONE_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3, MMCM0_FB=MMCM0_FB, MMCM1_FB=MMCM1_FB, MMCM2_FB=MMCM2_FB, MMCM3_FB=MMCM3_FB), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT0_FREQ = 125000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 125000000
 PARAMETER C_CLKOUT0_PHASE = 90, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 90
 PARAMETER C_CLKOUT0_GROUP = PLL0_ADJUST, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE, MHS_VALUE = PLL0_ADJUST
 PARAMETER C_CLKOUT0_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE, MHS_VALUE = TRUE
 PARAMETER C_CLKOUT0_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT1_FREQ = 125000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 125000000
 PARAMETER C_CLKOUT1_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_CLKOUT1_GROUP = PLL0_ADJUST, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE, MHS_VALUE = PLL0_ADJUST
 PARAMETER C_CLKOUT1_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE, MHS_VALUE = TRUE
 PARAMETER C_CLKOUT1_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT2_FREQ = 200000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 200000000
 PARAMETER C_CLKOUT2_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_CLKOUT2_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE, MHS_VALUE = NONE
 PARAMETER C_CLKOUT2_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE, MHS_VALUE = TRUE
 PARAMETER C_CLKOUT2_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT3_FREQ = 250000000, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0, MHS_VALUE = 250000000
 PARAMETER C_CLKOUT3_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_CLKOUT3_GROUP = PLL0, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE, MHS_VALUE = PLL0
 PARAMETER C_CLKOUT3_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE, MHS_VALUE = TRUE
 PARAMETER C_CLKOUT3_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT4_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT4_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT4_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT4_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT4_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT5_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT5_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT5_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT5_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT5_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT6_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT6_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT6_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT6_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT6_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT7_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT7_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT7_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT7_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT7_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT8_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT8_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT8_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT8_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT8_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT9_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT9_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT9_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT9_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT9_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT10_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT10_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT10_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT10_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT10_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT11_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT11_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT11_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT11_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT11_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT12_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT12_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT12_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT12_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT12_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT13_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT13_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT13_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT13_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT13_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT14_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT14_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT14_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT14_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT14_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKOUT15_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKOUT15_PHASE = 0, DT = INTEGER, RANGE = (0:359), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKOUT15_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL0_ADJUST=PLL0_ADJUST, PLL1=PLL1, PLL1_ADJUST=PLL1_ADJUST, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKOUT15_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER C_CLKOUT15_VARIABLE_PHASE = FALSE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_CLKFBOUT_FREQ = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CLKFBOUT_PHASE = 0, DT = INTEGER, RANGE = (0:0), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_CLKFBOUT_GROUP = NONE, DT = STRING, VALUES = (NONE=NONE, PLL0=PLL0, PLL1=PLL1, DCM0=DCM0, DCM1=DCM1, DCM2=DCM2, DCM3=DCM3, MMCM0=MMCM0, MMCM1=MMCM1, MMCM2=MMCM2, MMCM3=MMCM3), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_CLKFBOUT_BUF = TRUE, DT = BOOLEAN, VALUES = (FALSE=FALSE, TRUE=TRUE), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = TRUE
 PARAMETER HW_VER = 3.02.a
 PORT CLKIN = dcm_clk_s, DIR = I, SIGIS = CLK, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = dcm_clk_s
 PORT CLKOUT0 = clk_125_0000MHz90PLL0_ADJUST, DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT0_FREQ / C_CLKIN_FREQ, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHz90PLL0_ADJUST
 PORT CLKOUT1 = clk_125_0000MHzPLL0_ADJUST, DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT1_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT1_FREQ > 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT CLKOUT2 = clk_200_0000MHz, DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT2_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT2_FREQ > 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_200_0000MHz
 PORT CLKOUT3 = clk_250_0000MHzPLL0, DIR = O, SIGIS = CLK, CLK_INPORT = CLKIN, CLK_FACTOR = 1.0 * C_CLKOUT3_FREQ / C_CLKIN_FREQ, ISVALID = (C_CLKOUT3_FREQ > 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_250_0000MHzPLL0
 PORT RST = sys_rst_s, DIR = I, SIGIS = RST, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_rst_s
 PORT LOCKED = Dcm_all_locked, DIR = O, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Dcm_all_locked
END

BEGIN xps_uartlite
 PARAMETER INSTANCE = RS232_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_SPLB_CLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = SPLB, IO_IS = clk_freq, CLK_PORT = SPLB_Clk, CLK_UNIT = HZ, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 100000000, RESOLVED_BUS = SPLB
 PARAMETER C_BASEADDR = 0x84000000, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x10, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x84000000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x8400ffff, DT = std_logic_vector(0 to 31), BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8400ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_BAUDRATE = 9600, DT = INTEGER, DESC = Baudrate, PERMIT = BASE_USER, VALUES = (110= 110 , 300= 300 , 1200= 1200 , 2400= 2400 , 4800= 4800 , 9600= 9600 , 19200= 19200 , 38400= 38400 , 57600= 57600 , 115200= 115200 , 128000= 128000 , 230400= 230400 , 460800= 460800 , 921600= 921600 ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 9600, MHS_VALUE = 9600
 PARAMETER C_DATA_BITS = 8, DT = INTEGER, RANGE = (5:8), DESC = Num Data Bits, PERMIT = BASE_USER, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8, MHS_VALUE = 8
 PARAMETER C_USE_PARITY = 0, DT = INTEGER, RANGE = (0,1), DESC = Use Parity, PERMIT = BASE_USER, VALUES = (0=FALSE, 1=TRUE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_ODD_PARITY = 0, DT = INTEGER, RANGE = (0,1), DESC = Parity Type, PERMIT = BASE_USER, VALUES = (0= EVEN , 1= ODD ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER HW_VER = 1.01.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT RX = fpga_0_RS232_0_RX_pin, DIR = I, PERMIT = BASE_USER, DESC = 'Serial Data In', IO_IF = uart_0, IO_IS = serial_in, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_RS232_0_RX_pin
 PORT TX = fpga_0_RS232_0_TX_pin, DIR = O, PERMIT = BASE_USER, DESC = 'Serial Data Out', IO_IF = uart_0, IO_IS = serial_out, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_RS232_0_TX_pin
 PORT Interrupt = RS232_0_Interrupt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = EDGE_RISING, INTERRUPT_PRIORITY = LOW, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = RS232_0_Interrupt
END

BEGIN xps_ll_fifo
 PARAMETER INSTANCE = Hard_Ethernet_MAC_fifo
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SMALLEST_MASTER = 128, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 128, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_BASEADDR = 0x81a00000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x4000, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x81a00000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x81a0ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x81a0ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER HW_VER = 1.02.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 BUS_INTERFACE LLINK = Hard_Ethernet_MAC_llink0, BUS_STD = XIL_LL_DMA, BUS_TYPE = TARGET
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT IP2INTC_Irpt = Hard_Ethernet_MAC_fifo_IP2INTC_Irpt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Hard_Ethernet_MAC_fifo_IP2INTC_Irpt
 PORT llink_rst = LL_RST_ACK, DIR = O, BUS = LLINK, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = RST, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_din = LL_Tx_Data, DIR = O, BUS = LLINK, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_src_rdy_n = LL_Tx_SrcRdy_n, DIR = O, BUS = LLINK, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_dest_rdy_n = LL_Tx_DstRdy_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_sof_n = LL_Tx_SOF_n, DIR = O, BUS = LLINK, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_sop_n = LL_Tx_SOP_n, DIR = O, BUS = LLINK, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_eof_n = LL_Tx_EOF_n, DIR = O, BUS = LLINK, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_eop_n = LL_Tx_EOP_n, DIR = O, BUS = LLINK, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT tx_llink_rem_n = LL_Tx_Rem, DIR = O, BUS = LLINK, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_din = LL_Rx_Data, DIR = I, BUS = LLINK, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_src_rdy_n = LL_Rx_SrcRdy_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_dest_rdy_n = LL_Rx_DstRdy_n, DIR = O, BUS = LLINK, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_sof_n = LL_Rx_SOF_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_sop_n = LL_Rx_SOP_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_eof_n = LL_Rx_EOF_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_eop_n = LL_Rx_EOP_n, DIR = I, BUS = LLINK, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
 PORT rx_llink_rem_n = LL_Rx_Rem, DIR = I, BUS = LLINK, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK
END

BEGIN xps_ll_temac
 PARAMETER INSTANCE = Hard_Ethernet_MAC
 PARAMETER C_NUM_IDELAYCTRL = 0, DT = INTEGER, RANGE = (0:16), IO_IF = temacif_0, IO_IS = C_NUM_IDELAYCTRL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_IDELAYCTRL_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_IDELAYCTRL_LOC, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_SUBFAMILY = FX, DT = string, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = FX
 PARAMETER C_RESERVED = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5
 PARAMETER C_BASEADDR = 0x83c80000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80000, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0x83c80000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0x83cfffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE, ADDR_TYPE = REGISTER, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x83cfffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_INCLUDE_IO = 1, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PHY_TYPE = 0, DT = INTEGER, RANGE = (0:5), VALUES = (0= MII, 1= GMII, 2=  RGMII V1.3 , 3= RGMII V2.0 , 4=SGMII, 5=  1000Base-X ), IO_IF = temacif_0, IO_IS = C_PHY_TYPE, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 0
 PARAMETER C_TEMAC1_ENABLED = 0, DT = INTEGER, RANGE = (0,1), IO_IF = temacif_0, IO_IS = C_TEMAC1_ENABLED, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_TEMAC1_TXFIFO:C_TEMAC1_RXFIFO:C_TEMAC1_TXCSUM:C_TEMAC1_RXCSUM:C_TEMAC1_PHYADDR:C_TEMAC1_TXVLAN_TRAN:C_TEMAC1_RXVLAN_TRAN:C_TEMAC1_TXVLAN_TAG:C_TEMAC1_RXVLAN_TAG:C_TEMAC1_TXVLAN_STRP:C_TEMAC1_RXVLAN_STRP:C_TEMAC1_MCAST_EXTEND:C_TEMAC1_STATS:C_TEMAC1_AVB, MPD_VALUE = 0
 PARAMETER C_TEMAC0_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4096
 PARAMETER C_TEMAC0_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4096
 PARAMETER C_TEMAC1_TXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4096
 PARAMETER C_TEMAC1_RXFIFO = 4096, DT = INTEGER, RANGE = (2048, 4096, 8192, 16384, 32768), VALUES = (2048= 2048B, 4096= 4096B, 8192= 8192B, 16384= 16384B, 32768= 32768B ), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4096
 PARAMETER C_BUS2CORE_CLK_RATIO = 1, DT = INTEGER, RANGE = (1,2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, MHS_VALUE = 1
 PARAMETER C_TEMAC_TYPE = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=  V5 Hard TEMAC , 1=  V4 Hard TEMAC , 2=  Soft TEMAC , 3=  V6 Hard TEMAC  ), IO_IF = temacif_0, IO_IS = C_TEMAC_TYPE, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SIMULATION, MPD_VALUE = 0, MHS_VALUE = 0
 PARAMETER C_TEMAC0_TXCSUM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_RXCSUM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_TXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_RXCSUM = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_PHYADDR = 0b00001, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC0_PHYADDR, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 5, MPD_VALUE = 0b00001
 PARAMETER C_TEMAC1_PHYADDR = 0b00010, DT = std_logic_vector, IO_IF = temacif_0, IO_IS = C_TEMAC1_PHYADDR, ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 5, MPD_VALUE = 0b00010
 PARAMETER C_TEMAC0_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_TXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_RXVLAN_TRAN = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_TXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_RXVLAN_TAG = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_TXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_RXVLAN_STRP = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_MCAST_EXTEND = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_STATS = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_STATS = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC0_AVB = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_TEMAC1_AVB = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC1_ENABLED==1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_SIMULATION = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_TEMAC_TYPE==2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER HW_VER = 2.03.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_STD = PLBV46, BUS_TYPE = SLAVE
 BUS_INTERFACE LLINK0 = Hard_Ethernet_MAC_llink0, BUS_STD = XIL_LL_DMA, BUS_TYPE = INITIATOR
 PORT TemacIntc0_Irpt = Hard_Ethernet_MAC_TemacIntc0_Irpt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = Hard_Ethernet_MAC_TemacIntc0_Irpt
 PORT TemacPhy_RST_n = fpga_0_Hard_Ethernet_MAC_TemacPhy_RST_n_pin, DIR = O, IO_IF = temacif_0, IO_IS = PhyResetN, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_TemacPhy_RST_n_pin
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT LlinkTemac0_CLK = clk_125_0000MHzPLL0_ADJUST, DIR = I, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = LL_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT LlinkTemac0_RST = LL_RST_ACK, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_REM = LL_Tx_Rem, DIR = I, BUS = LLINK0, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_Data = LL_Tx_Data, DIR = I, BUS = LLINK0, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK0, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK0, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT Temac0Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK0, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac0_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK0, INITIALVAL = VCC, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = LLINK0
 PORT LlinkTemac1_RST = LL_RST_ACK, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_SOP_n = LL_Tx_SOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_EOP_n = LL_Tx_EOP_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_SOF_n = LL_Tx_SOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_EOF_n = LL_Tx_EOF_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_REM = LL_Tx_Rem, DIR = I, BUS = LLINK1, INITIALVAL = VCC, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_Data = LL_Tx_Data, DIR = I, BUS = LLINK1, INITIALVAL = GND, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_SRC_RDY_n = LL_Tx_SrcRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_DST_RDY_n = LL_Tx_DstRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_SOP_n = LL_Rx_SOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_EOP_n = LL_Rx_EOP_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_SOF_n = LL_Rx_SOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_EOF_n = LL_Rx_EOF_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_REM = LL_Rx_Rem, DIR = O, BUS = LLINK1, VEC = [0:3], ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_Data = LL_Rx_Data, DIR = O, BUS = LLINK1, VEC = [0:31], ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT Temac1Llink_SRC_RDY_n = LL_Rx_SrcRdy_n, DIR = O, BUS = LLINK1, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT LlinkTemac1_DST_RDY_n = LL_Rx_DstRdy_n, DIR = I, BUS = LLINK1, INITIALVAL = VCC, ISVALID = ( C_TEMAC1_ENABLED == 1 ), DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MII_TXD_0 = fpga_0_Hard_Ethernet_MAC_MII_TXD_0_pin, DIR = O, VEC = [3:0], ENDIAN = LITTLE, IO_IF = temacif_0, IO_IS = MII_TXD_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_TXD_0_pin
 PORT MII_TX_EN_0 = fpga_0_Hard_Ethernet_MAC_MII_TX_EN_0_pin, DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_EN_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_TX_EN_0_pin
 PORT MII_TX_ER_0 = fpga_0_Hard_Ethernet_MAC_MII_TX_ER_0_pin, DIR = O, IO_IF = temacif_0, IO_IS = MII_TX_ER_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_TX_ER_0_pin
 PORT MII_RXD_0 = fpga_0_Hard_Ethernet_MAC_MII_RXD_0_pin, DIR = I, VEC = [3:0], ENDIAN = LITTLE, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RXD_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_RXD_0_pin
 PORT MII_RX_DV_0 = fpga_0_Hard_Ethernet_MAC_MII_RX_DV_0_pin, DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_DV_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_RX_DV_0_pin
 PORT MII_RX_ER_0 = fpga_0_Hard_Ethernet_MAC_MII_RX_ER_0_pin, DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_ER_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_RX_ER_0_pin
 PORT MII_RX_CLK_0 = fpga_0_Hard_Ethernet_MAC_MII_RX_CLK_0_pin, DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_RX_CLK_0, ISVALID = ( C_PHY_TYPE == 0), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_RX_CLK_0_pin
 PORT MII_TX_CLK_0 = fpga_0_Hard_Ethernet_MAC_MII_TX_CLK_0_pin, DIR = I, INITIALVAL = GND, IO_IF = temacif_0, IO_IS = MII_TX_CLK_0, ISVALID = ( C_PHY_TYPE == 0 || C_PHY_TYPE == 1 ), DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MII_TX_CLK_0_pin
 PORT MDC_0 = fpga_0_Hard_Ethernet_MAC_MDC_0_pin, DIR = O, IO_IF = temacif_0, IO_IS = MDC_0, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MDC_0_pin
 PORT HostMiimRdy = host_mii_rdy, DIR = I, DEFAULT = host_mii_rdy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT HostRdData = host_rd_data, DIR = I, VEC = [31:0], ENDIAN = LITTLE, DEFAULT = host_rd_data, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT HostMiimSel = host_mii_sel, DIR = O, DEFAULT = host_mii_sel, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT HostReq = host_req, DIR = O, DEFAULT = host_req, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT HostAddr = host_addr, DIR = O, VEC = [9:0], ENDIAN = LITTLE, DEFAULT = host_addr, ASSIGNMENT = OPTIONAL, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT HostEmac1Sel = host_emac1_sel, DIR = O, DEFAULT = host_emac1_sel, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER
 PORT MDIO_0 = fpga_0_Hard_Ethernet_MAC_MDIO_0_pin, DIR = IO, THREE_STATE = TRUE, INITIALVAL = VCC, IO_IF = temacif_0, IO_IS = MDIO_0, TRI_I = MDIO_0_I, TRI_O = MDIO_0_O, TRI_T = MDIO_0_T, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , ENABLE = SINGLE, IOB_STATE = INFER, MHS_VALUE = fpga_0_Hard_Ethernet_MAC_MDIO_0_pin
END

BEGIN mpmc
 PARAMETER INSTANCE = DDR_SDRAM_0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PORT_CONFIG:C_NUM_IDELAYCTRL:C_IDELAYCTRL_LOC:C_IODELAY_GRP:C_MCB_LOC:C_ARB_PIPELINE:C_WR_DATAPATH_TML_PIPELINE:C_RD_DATAPATH_TML_MAX_FANOUT:C_SKIP_SIM_INIT_DELAY:C_USE_STATIC_PHY:C_STATIC_PHY_RDDATA_CLK_SEL:C_STATIC_PHY_RDDATA_SWAP_RISE:C_STATIC_PHY_RDEN_DELAY:C_DEBUG_REG_ENABLE:C_SPECIAL_BOARD:C_USE_MIG_FLOW:C_MEM_ADDR_ORDER:C_MEM_CALIBRATION_MODE:C_MEM_CALIBRATION_DELAY:C_MEM_CALIBRATION_SOFT_IP:C_MEM_CALIBRATION_BYPASS:C_MEM_SKIP_IN_TERM_CAL:C_MEM_SKIP_DYNAMIC_CAL:C_MEM_SKIP_DYN_IN_TERM:C_MEM_INCDEC_THRESHOLD:C_MEM_CHECK_MAX_INDELAY:C_MEM_CHECK_MAX_TAP_REG:C_MEM_TZQINIT_MAXCNT:C_MPMC_CLK_MEM_2X_PERIOD_PS:C_MCB_USE_EXTERNAL_BUFPLL:C_MCB_LDQSP_TAP_DELAY_VAL:C_MCB_UDQSP_TAP_DELAY_VAL:C_MCB_LDQSN_TAP_DELAY_VAL:C_MCB_UDQSN_TAP_DELAY_VAL:C_MCB_DQ0_TAP_DELAY_VAL:C_MCB_DQ1_TAP_DELAY_VAL:C_MCB_DQ2_TAP_DELAY_VAL:C_MCB_DQ3_TAP_DELAY_VAL:C_MCB_DQ4_TAP_DELAY_VAL:C_MCB_DQ5_TAP_DELAY_VAL:C_MCB_DQ6_TAP_DELAY_VAL:C_MCB_DQ7_TAP_DELAY_VAL:C_MCB_DQ8_TAP_DELAY_VAL:C_MCB_DQ9_TAP_DELAY_VAL:C_MCB_DQ10_TAP_DELAY_VAL:C_MCB_DQ11_TAP_DELAY_VAL:C_MCB_DQ12_TAP_DELAY_VAL:C_MCB_DQ13_TAP_DELAY_VAL:C_MCB_DQ14_TAP_DELAY_VAL:C_MCB_DQ15_TAP_DELAY_VAL:C_MPMC_CLK_MEM_PERIOD_PS:C_MEM_REG_DIMM:C_MEM_CLK_WIDTH:C_MEM_ODT_WIDTH:C_MEM_CE_WIDTH:C_MEM_CS_N_WIDTH:C_MEM_NUM_RANKS:C_INCLUDE_ECC_SUPPORT:C_ECC_DEFAULT_ON:C_INCLUDE_ECC_TEST:C_ECC_SEC_THRESHOLD:C_ECC_DEC_THRESHOLD:C_ECC_PEC_THRESHOLD:C_ECC_DATA_WIDTH:C_ECC_DM_WIDTH:C_ECC_DQS_WIDTH:C_MEM_PA_SR:C_MEM_AUTO_SR:C_MEM_HIGH_TEMP_SR:C_MEM_DYNAMIC_WRITE_ODT:C_MEM_WRLVL:C_MEM_NDQS_COL0:C_MEM_NDQS_COL1:C_MEM_NDQS_COL2:C_MEM_NDQS_COL3:C_MEM_DQS_LOC_COL0:C_MEM_DQS_LOC_COL1:C_MEM_DQS_LOC_COL2:C_MEM_DQS_LOC_COL3:C_TBY4TAPVALUE:C_PIM0_DATA_WIDTH:C_PI0_RD_FIFO_TYPE:C_PI0_WR_FIFO_TYPE:C_PI0_ADDRACK_PIPELINE:C_PI0_RD_FIFO_APP_PIPELINE:C_PI0_RD_FIFO_MEM_PIPELINE:C_PI0_WR_FIFO_APP_PIPELINE:C_PI0_WR_FIFO_MEM_PIPELINE:C_PIM1_DATA_WIDTH:C_PI1_RD_FIFO_TYPE:C_PI1_WR_FIFO_TYPE:C_PI1_ADDRACK_PIPELINE:C_PI1_RD_FIFO_APP_PIPELINE:C_PI1_RD_FIFO_MEM_PIPELINE:C_PI1_WR_FIFO_APP_PIPELINE:C_PI1_WR_FIFO_MEM_PIPELINE:C_PIM2_DATA_WIDTH:C_PI2_RD_FIFO_TYPE:C_PI2_WR_FIFO_TYPE:C_PI2_ADDRACK_PIPELINE:C_PI2_RD_FIFO_APP_PIPELINE:C_PI2_RD_FIFO_MEM_PIPELINE:C_PI2_WR_FIFO_APP_PIPELINE:C_PI2_WR_FIFO_MEM_PIPELINE:C_PIM3_DATA_WIDTH:C_PI3_RD_FIFO_TYPE:C_PI3_WR_FIFO_TYPE:C_PI3_ADDRACK_PIPELINE:C_PI3_RD_FIFO_APP_PIPELINE:C_PI3_RD_FIFO_MEM_PIPELINE:C_PI3_WR_FIFO_APP_PIPELINE:C_PI3_WR_FIFO_MEM_PIPELINE:C_PIM4_DATA_WIDTH:C_PI4_RD_FIFO_TYPE:C_PI4_WR_FIFO_TYPE:C_PI4_ADDRACK_PIPELINE:C_PI4_RD_FIFO_APP_PIPELINE:C_PI4_RD_FIFO_MEM_PIPELINE:C_PI4_WR_FIFO_APP_PIPELINE:C_PI4_WR_FIFO_MEM_PIPELINE:C_PIM5_DATA_WIDTH:C_PI5_RD_FIFO_TYPE:C_PI5_WR_FIFO_TYPE:C_PI5_ADDRACK_PIPELINE:C_PI5_RD_FIFO_APP_PIPELINE:C_PI5_RD_FIFO_MEM_PIPELINE:C_PI5_WR_FIFO_APP_PIPELINE:C_PI5_WR_FIFO_MEM_PIPELINE:C_PIM6_DATA_WIDTH:C_PI6_RD_FIFO_TYPE:C_PI6_WR_FIFO_TYPE:C_PI6_ADDRACK_PIPELINE:C_PI6_RD_FIFO_APP_PIPELINE:C_PI6_RD_FIFO_MEM_PIPELINE:C_PI6_WR_FIFO_APP_PIPELINE:C_PI6_WR_FIFO_MEM_PIPELINE:C_PIM7_DATA_WIDTH:C_PI7_RD_FIFO_TYPE:C_PI7_WR_FIFO_TYPE:C_PI7_ADDRACK_PIPELINE:C_PI7_RD_FIFO_APP_PIPELINE:C_PI7_RD_FIFO_MEM_PIPELINE:C_PI7_WR_FIFO_APP_PIPELINE:C_PI7_WR_FIFO_MEM_PIPELINE:C_WR_TRAINING_PORT, MPD_VALUE = virtex5
 PARAMETER C_SUBFAMILY = fx, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = fx
 PARAMETER C_DEVICE = 5vlx50t, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 5vlx50t
 PARAMETER C_PACKAGE = ff1136, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = ff1136
 PARAMETER C_SPEEDGRADE = -1, DT = STRING, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = -1
 PARAMETER C_SPEEDGRADE_INT = 1, DT = INTEGER, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_speedgrade, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_NUM_PORTS = 1, DT = INTEGER, RANGE = (1:8), IPLEVEL_DRC_PROC = iplevel_drc_num_ports, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 1
 PARAMETER C_PORT_CONFIG = 1, DT = INTEGER, RANGE = (0:4), ASSIGNMENT = REQUIRE, VALUES = (0=B32 B32 U32 U32 U32 U32, 1=B32 B32 B32 B32, 2=B64 B32 B32, 3=B64 B64, 4=B128), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_PORT_CONFIG, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ALL_PIMS_SHARE_ADDRESSES = 1, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MPMC_BASEADDR:C_MPMC_HIGHADDR:C_MPMC_SW_BASEADDR:C_MPMC_SW_HIGHADDR:C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM0_BASEADDR:C_PIM0_HIGHADDR:C_PIM0_OFFSET:C_SDMA_CTRL0_BASEADDR:C_SDMA_CTRL0_HIGHADDR:C_PIM1_BASEADDR:C_PIM1_HIGHADDR:C_PIM1_OFFSET:C_SDMA_CTRL1_BASEADDR:C_SDMA_CTRL1_HIGHADDR:C_PIM2_BASEADDR:C_PIM2_HIGHADDR:C_PIM2_OFFSET:C_SDMA_CTRL2_BASEADDR:C_SDMA_CTRL2_HIGHADDR:C_PIM3_BASEADDR:C_PIM3_HIGHADDR:C_PIM3_OFFSET:C_SDMA_CTRL3_BASEADDR:C_SDMA_CTRL3_HIGHADDR:C_PIM4_BASEADDR:C_PIM4_HIGHADDR:C_PIM4_OFFSET:C_SDMA_CTRL4_BASEADDR:C_SDMA_CTRL4_HIGHADDR:C_PIM5_BASEADDR:C_PIM5_HIGHADDR:C_PIM5_OFFSET:C_SDMA_CTRL5_BASEADDR:C_SDMA_CTRL5_HIGHADDR:C_PIM6_BASEADDR:C_PIM6_HIGHADDR:C_PIM6_OFFSET:C_SDMA_CTRL6_BASEADDR:C_SDMA_CTRL6_HIGHADDR:C_PIM7_BASEADDR:C_PIM7_HIGHADDR:C_PIM7_OFFSET:C_SDMA_CTRL7_BASEADDR:C_SDMA_CTRL7_HIGHADDR, MPD_VALUE = 1
 PARAMETER C_MPMC_BASEADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_MPMC_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 1), IO_IF = memory_0, IO_IS = C_BASEADDR, ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, MHS_VALUE = 0x00000000, RESOLVED_BUS = SPLB0
 PARAMETER C_MPMC_HIGHADDR = 0x1fffffff, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0:XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1:XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2:XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3:XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4:XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5:XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6:XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_MPMC_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 1), IO_IF = memory_0, IO_IS = C_HIGHADDR, ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x1fffffff, RESOLVED_BUS = SPLB0
 PARAMETER C_MPMC_SW_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL, BUS = , ADDR_TYPE = REGISTER, PAIR = C_MPMC_SW_HIGHADDR, ADDRESS = BASE, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_MPMC_SW_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, ISVALID = (C_ALL_PIMS_SHARE_ADDRESSES == 0), TYPE = NON_HDL, BUS = , ADDR_TYPE = REGISTER, PAIR = C_MPMC_SW_BASEADDR, ADDRESS = HIGH, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL_BASEADDR = 0xFFFFFFFF, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES == 1) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL_HIGHADDR = 0x00000000, DT = STD_LOGIC_VECTOR, BUS = SDMA_CTRL0:SDMA_CTRL1:SDMA_CTRL2:SDMA_CTRL3:SDMA_CTRL4:SDMA_CTRL5:SDMA_CTRL6:SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = ((C_ALL_PIMS_SHARE_ADDRESSES == 1) && ((C_PIM0_BASETYPE == 3) || (C_PIM1_BASETYPE == 3) || (C_PIM2_BASETYPE == 3) || (C_PIM3_BASETYPE == 3) || (C_PIM4_BASETYPE == 3) || (C_PIM5_BASETYPE == 3) || (C_PIM6_BASETYPE == 3) || (C_PIM7_BASETYPE == 3))), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_MPMC_CTRL_BASEADDR = 0x84800000, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = BASE, PAIR = C_MPMC_CTRL_HIGHADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, MHS_VALUE = 0x84800000, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_HIGHADDR = 0x8480ffff, DT = STD_LOGIC_VECTOR, BUS = MPMC_CTRL, ADDRESS = HIGH, PAIR = C_MPMC_CTRL_BASEADDR, ADDR_TYPE = REGISTER, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0x8480ffff, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_AWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_DWIDTH = 64, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = MPMC_CTRL_PLB_BE:MPMC_CTRL_PLB_wrDBus:MPMC_CTRL_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_NUM_MASTERS = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:16), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = MPMC_CTRL_Sl_MBusy:MPMC_CTRL_Sl_MRdErr:MPMC_CTRL_Sl_MWrErr:MPMC_CTRL_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_MID_WIDTH = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0:4), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = MPMC_CTRL_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_P2P = 1, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MPMC_CTRL, ASSIGNMENT = CONSTANT, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_MPMC_CTRL_SMALLEST_MASTER = 32, DT = INTEGER, BUS = MPMC_CTRL, RANGE = (32,64,128), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ] || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = MPMC_CTRL
 PARAMETER C_NUM_IDELAYCTRL = 3, DT = INTEGER, RANGE = (0:16), IO_IF = memory_0, IO_IS = C_NUM_IDELAYCTRL, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_num_idelayctrl, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 3
 PARAMETER C_IDELAYCTRL_LOC = IDELAYCTRL_X1Y8-IDELAYCTRL_X0Y8-IDELAYCTRL_X0Y7, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_IDELAYCTRL_LOC, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_idelayctrl_loc, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0), GUI_PERMIT = , MPD_VALUE = NOT_SET, MHS_VALUE = IDELAYCTRL_X1Y8-IDELAYCTRL_X0Y8-IDELAYCTRL_X0Y7
 PARAMETER C_IODELAY_GRP = NOT_SET, DT = STRING, ASSIGNMENT = OPTIONAL_UPDATE, IO_IF = memory_0, IO_IS = C_IODELAY_GRP, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_iodelay_grp, ISVALID = (([xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR3 ] || [xstrncmp C_MEM_TYPE  DDR2 ]) && C_USE_STATIC_PHY == 0), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_MCB_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, VALUES = (NOT_SET=NOT SET, MEMC1=MEMC1, MEMC2=MEMC2, MEMC3=MEMC3, MEMC4=MEMC4), IO_IF = memory_0, IO_IS = C_MCB_LOC, ASSIGNMENT = REQUIRE, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_MMCM_EXT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_EXT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_MMCM_INT_LOC = NOT_SET, DT = STRING, TYPE = NON_HDL, IO_IS = C_MMCM_INT_LOC, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mmcm_loc, GUI_PERMIT = , MPD_VALUE = NOT_SET
 PARAMETER C_MAX_REQ_ALLOWED = 1, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_ARB_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_WR_DATAPATH_TML_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_RD_DATAPATH_TML_MAX_FANOUT = 0, DT = INTEGER, RANGE = (0,1,2,4,8), ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ARB_USE_DEFAULT = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_ARB0_ALGO = ROUND_ROBIN, DT = STRING, VALUES = (ROUND_ROBIN=Round Robin, FIXED=Fixed, CUSTOM=Custom), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_ARB0_NUM_SLOTS:C_ARB0_SLOT0:C_ARB0_SLOT1:C_ARB0_SLOT2:C_ARB0_SLOT3:C_ARB0_SLOT4:C_ARB0_SLOT5:C_ARB0_SLOT6:C_ARB0_SLOT7:C_ARB0_SLOT8:C_ARB0_SLOT9:C_ARB0_SLOT10:C_ARB0_SLOT11:C_ARB0_SLOT12:C_ARB0_SLOT13:C_ARB0_SLOT14:C_ARB0_SLOT15, MPD_VALUE = ROUND_ROBIN
 PARAMETER C_ARB0_NUM_SLOTS = 8, DT = INTEGER, RANGE = (1:16), ISVALID = ([xstrncmp C_ARB0_ALGO  CUSTOM ]), IPLEVEL_DRC_PROC = iplevel_drc_arb0_num_slots, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_ARB0_SLOT0:C_ARB0_SLOT1:C_ARB0_SLOT2:C_ARB0_SLOT3:C_ARB0_SLOT4:C_ARB0_SLOT5:C_ARB0_SLOT6:C_ARB0_SLOT7:C_ARB0_SLOT8:C_ARB0_SLOT9:C_ARB0_SLOT10:C_ARB0_SLOT11:C_ARB0_SLOT12:C_ARB0_SLOT13:C_ARB0_SLOT14:C_ARB0_SLOT15, MPD_VALUE = 8
 PARAMETER C_ARB0_SLOT0 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 0 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 01234567
 PARAMETER C_ARB0_SLOT1 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 1 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 12345670
 PARAMETER C_ARB0_SLOT2 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 2 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 23456701
 PARAMETER C_ARB0_SLOT3 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 3 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 34567012
 PARAMETER C_ARB0_SLOT4 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 4 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 45670123
 PARAMETER C_ARB0_SLOT5 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 5 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 56701234
 PARAMETER C_ARB0_SLOT6 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 6 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 67012345
 PARAMETER C_ARB0_SLOT7 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 7 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 70123456
 PARAMETER C_ARB0_SLOT8 = 01234567, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 8 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 01234567
 PARAMETER C_ARB0_SLOT9 = 12345670, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 9 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 12345670
 PARAMETER C_ARB0_SLOT10 = 23456701, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 10 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 23456701
 PARAMETER C_ARB0_SLOT11 = 34567012, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 11 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 34567012
 PARAMETER C_ARB0_SLOT12 = 45670123, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 12 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 45670123
 PARAMETER C_ARB0_SLOT13 = 56701234, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 13 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 56701234
 PARAMETER C_ARB0_SLOT14 = 67012345, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 14 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 67012345
 PARAMETER C_ARB0_SLOT15 = 70123456, DT = STRING, ISVALID = (C_ARB0_NUM_SLOTS > 15 && [xstrncmp C_ARB0_ALGO  CUSTOM ]), TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , MPD_VALUE = 70123456
 PARAMETER C_PM_ENABLE = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MPMC_CTRL_BASEADDR:C_MPMC_CTRL_HIGHADDR:C_MPMC_CTRL_AWIDTH:C_MPMC_CTRL_DWIDTH:C_MPMC_CTRL_NATIVE_DWIDTH:C_MPMC_CTRL_NUM_MASTERS:C_MPMC_CTRL_MID_WIDTH:C_MPMC_CTRL_P2P:C_MPMC_CTRL_SUPPORT_BURSTS:C_MPMC_CTRL_SMALLEST_MASTER:C_PM_DC_WIDTH:C_PM_GC_CNTR:C_PM_GC_WIDTH:C_PM_SHIFT_CNT_BY:C_PI0_PM_USED:C_PI0_PM_DC_CNTR:C_PI1_PM_USED:C_PI1_PM_DC_CNTR:C_PI2_PM_USED:C_PI2_PM_DC_CNTR:C_PI3_PM_USED:C_PI3_PM_DC_CNTR:C_PI4_PM_USED:C_PI4_PM_DC_CNTR:C_PI5_PM_USED:C_PI5_PM_DC_CNTR:C_PI6_PM_USED:C_PI6_PM_DC_CNTR:C_PI7_PM_USED:C_PI7_PM_DC_CNTR, MPD_VALUE = 0
 PARAMETER C_PM_DC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 48
 PARAMETER C_PM_GC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PM_GC_WIDTH = 48, DT = INTEGER, RANGE = (1:64), ISVALID = (C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 48
 PARAMETER C_PM_SHIFT_CNT_BY = 1, DT = INTEGER, RANGE = (0:3), ISVALID = (C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_SKIP_SIM_INIT_DELAY = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_USE_STATIC_PHY = 0, DT = INTEGER, RANGE = (0,1), IO_IF = memory_0, IO_IS = C_USE_STATIC_PHY, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MPMC_CTRL_BASEADDR:C_MPMC_CTRL_HIGHADDR:C_MPMC_CTRL_AWIDTH:C_MPMC_CTRL_DWIDTH:C_MPMC_CTRL_NATIVE_DWIDTH:C_MPMC_CTRL_NUM_MASTERS:C_MPMC_CTRL_MID_WIDTH:C_MPMC_CTRL_P2P:C_MPMC_CTRL_SUPPORT_BURSTS:C_MPMC_CTRL_SMALLEST_MASTER:C_NUM_IDELAYCTRL:C_IDELAYCTRL_LOC:C_IODELAY_GRP:C_STATIC_PHY_RDDATA_CLK_SEL:C_STATIC_PHY_RDDATA_SWAP_RISE:C_STATIC_PHY_RDEN_DELAY:C_DEBUG_REG_ENABLE:C_USE_MIG_FLOW:C_TBY4TAPVALUE:C_WR_TRAINING_PORT, MPD_VALUE = 0
 PARAMETER C_STATIC_PHY_RDDATA_CLK_SEL = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ])), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_STATIC_PHY_RDDATA_SWAP_RISE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 && ([xstrncmp C_MEM_TYPE  SDRAM ] == 0))), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_STATIC_PHY_RDEN_DELAY = 5, DT = INTEGER, RANGE = (0:15), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && (C_USE_STATIC_PHY == 1 || [xstrncmp C_MEM_TYPE  SDRAM ])), IO_IF = memory_0, IO_IS = C_STATIC_PHY_RDEN_DELAY, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 5
 PARAMETER C_DEBUG_REG_ENABLE = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && C_USE_STATIC_PHY == 0 && [xstrncmp C_MEM_TYPE  SDRAM ] == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MPMC_CTRL_BASEADDR:C_MPMC_CTRL_HIGHADDR:C_MPMC_CTRL_AWIDTH:C_MPMC_CTRL_DWIDTH:C_MPMC_CTRL_NATIVE_DWIDTH:C_MPMC_CTRL_NUM_MASTERS:C_MPMC_CTRL_MID_WIDTH:C_MPMC_CTRL_P2P:C_MPMC_CTRL_SUPPORT_BURSTS:C_MPMC_CTRL_SMALLEST_MASTER, MPD_VALUE = 0
 PARAMETER C_SPECIAL_BOARD = NONE, DT = STRING, VALUES = (NONE=NONE, S3E_STKIT=S3E_STKIT, S3E_1600E=S3E_1600E, S3A_STKIT=S3A_STKIT), IO_IF = memory_0, IO_IS = C_SPECIAL_BOARD, ISVALID = ([xstrncmp C_FAMILY  spartan3a ] || [xstrncmp C_FAMILY  aspartan3a ] || [xstrncmp C_FAMILY  spartan3e ] || [xstrncmp C_FAMILY  aspartan3e ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NONE
 PARAMETER C_USE_MIG_FLOW = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && C_USE_STATIC_PHY == 0 && [xstrncmp C_MEM_TYPE  SDRAM ] == 0), TYPE = NON_HDL, SYSLEVEL_DRC_PROC = syslevel_drc_mig_flow, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_ADDR_ORDER = BANK_ROW_COLUMN, DT = STRING, VALUES = (BANK_ROW_COLUMN=BANK_ROW_COLUMN, ROW_BANK_COLUMN=ROW_BANK_COLUMN), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_ADDR_ORDER, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = BANK_ROW_COLUMN
 PARAMETER C_MEM_CALIBRATION_MODE = 1, DT = INTEGER, RANGE = (0:1), VALUES = (1=CALIBRATION, 0=NO CALIBRATION), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_MODE, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_CALIBRATION_DELAY = HALF, DT = STRING, VALUES = (QUARTER=QUARTER, FULL=FULL, HALF=HALF, THREEQUARTER=THREEQUARTER), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_DELAY, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = HALF
 PARAMETER C_MEM_CALIBRATION_SOFT_IP = FALSE, DT = STRING, VALUES = (FALSE=FALSE, TRUE=TRUE), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_SOFT_IP, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = FALSE
 PARAMETER C_MEM_CALIBRATION_BYPASS = NO, DT = STRING, VALUES = (YES=YES, NO=NO), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CALIBRATION_BYPASS, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NO
 PARAMETER C_MEM_SKIP_IN_TERM_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_IN_TERM_CAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_SKIP_DYNAMIC_CAL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_DYNAMIC_CAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_SKIP_DYN_IN_TERM = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_SKIP_DYN_IN_TERM, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_INCDEC_THRESHOLD = 0x02, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_INCDEC_THRESHOLD, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0x02
 PARAMETER C_MEM_CHECK_MAX_INDELAY = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CHECK_MAX_INDELAY, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_CHECK_MAX_TAP_REG = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_CHECK_MAX_TAP_REG, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_TZQINIT_MAXCNT = 512, DT = INTEGER, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MEM_TZQINIT_MAXCNT, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 512
 PARAMETER C_MPMC_CLK_MEM_2X_PERIOD_PS = 1250, DT = INTEGER, RANGE = (1250:12500), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem_2x, CLK_UNIT = PS, ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MPMC_CLK_MEM_2X_PERIOD_PS, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1250
 PARAMETER C_MCB_USE_EXTERNAL_BUFPLL = 0, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_USE_EXTERNAL_BUFPLL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_LDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_LDQSP_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_UDQSP_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_UDQSP_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_LDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_LDQSN_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_UDQSN_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_UDQSN_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ0_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ0_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ1_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ1_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ2_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ2_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ3_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ3_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ4_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ4_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ5_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ5_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ6_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ6_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ7_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ7_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ8_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ8_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ9_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ9_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ10_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ10_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ11_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ11_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ12_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ12_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ13_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ13_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ14_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ14_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MCB_DQ15_TAP_DELAY_VAL = 0, DT = INTEGER, RANGE = (0:255), ISVALID = ([xstrncmp C_FAMILY  spartan6 ]), IO_IS = C_MCB_DQ15_TAP_DELAY_VAL, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_TYPE = DDR, DT = STRING, VALUES = (DDR3=DDR3, DDR2=DDR2, DDR=DDR, LPDDR=LPDDR, SDRAM=SDRAM), IPLEVEL_DRC_PROC = iplevel_drc_mem_type, IO_IF = memory_0, IO_IS = C_MEM_TYPE, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MPMC_CTRL_BASEADDR:C_MPMC_CTRL_HIGHADDR:C_MPMC_CTRL_AWIDTH:C_MPMC_CTRL_DWIDTH:C_MPMC_CTRL_NATIVE_DWIDTH:C_MPMC_CTRL_NUM_MASTERS:C_MPMC_CTRL_MID_WIDTH:C_MPMC_CTRL_P2P:C_MPMC_CTRL_SUPPORT_BURSTS:C_MPMC_CTRL_SMALLEST_MASTER:C_NUM_IDELAYCTRL:C_IDELAYCTRL_LOC:C_IODELAY_GRP:C_STATIC_PHY_RDDATA_CLK_SEL:C_STATIC_PHY_RDDATA_SWAP_RISE:C_STATIC_PHY_RDEN_DELAY:C_DEBUG_REG_ENABLE:C_USE_MIG_FLOW:C_MEM_PART_TDQSS:C_MEM_PART_TCCD:C_MEM_PART_TWTR:C_MEM_ODT_TYPE:C_MEM_REDUCED_DRV:C_MEM_ODT_WIDTH:C_DDR2_DQSN_ENABLE:C_MEM_PA_SR:C_MEM_CAS_WR_LATENCY:C_MEM_AUTO_SR:C_MEM_HIGH_TEMP_SR:C_MEM_DYNAMIC_WRITE_ODT:C_MEM_WRLVL:C_TBY4TAPVALUE:C_WR_TRAINING_PORT, MPD_VALUE = DDR2, MHS_VALUE = DDR
 PARAMETER C_MEM_PARTNO = MT46V64M16-6T, DT = STRING, TYPE = NON_HDL, IO_IF = memory_0, IO_IS = C_MEM_PARTNO, ASSIGNMENT = REQUIRE, IPLEVEL_DRC_PROC = iplevel_drc_partno, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MEM_PART_DATA_DEPTH:C_MEM_PART_DATA_WIDTH:C_MEM_PART_NUM_BANK_BITS:C_MEM_PART_NUM_ROW_BITS:C_MEM_PART_NUM_COL_BITS:C_MEM_PART_TRAS:C_MEM_PART_TRASMAX:C_MEM_PART_TRC:C_MEM_PART_TRCD:C_MEM_PART_TDQSS:C_MEM_PART_TWR:C_MEM_PART_TRP:C_MEM_PART_TRRD:C_MEM_PART_TRFC:C_MEM_PART_TREFI:C_MEM_PART_TCCD:C_MEM_PART_TWTR:C_MEM_PART_CAS_A_FMAX:C_MEM_PART_CAS_A:C_MEM_PART_CAS_B_FMAX:C_MEM_PART_CAS_B:C_MEM_PART_CAS_C_FMAX:C_MEM_PART_CAS_C:C_MEM_PART_CAS_D_FMAX:C_MEM_PART_CAS_D, MPD_VALUE = NONE, MHS_VALUE = MT46V64M16-6T
 PARAMETER C_MEM_PART_DATA_DEPTH = 16, DT = INTEGER, RANGE = (1,2,4,8,16,32,64,128,256,512,1024), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_DEPTH, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 16
 PARAMETER C_MEM_PART_DATA_WIDTH = 8, DT = INTEGER, RANGE = (4,8,16,32,64), ASSIGNMENT = REQUIRE, TYPE = NON_HDL, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MEM_PART_NUM_BANK_BITS = 2, DT = INTEGER, RANGE = (1:4), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_BANK_BITS, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2
 PARAMETER C_MEM_PART_NUM_ROW_BITS = 13, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_ROW_BITS, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 13
 PARAMETER C_MEM_PART_NUM_COL_BITS = 9, DT = INTEGER, RANGE = (1:20), ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_NUM_COL_BITS, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 9
 PARAMETER C_MEM_PART_TRAS = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRAS, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRASMAX = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRASMAX, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRC, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRCD, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TDQSS = 1, DT = INTEGER, RANGE = (1), ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && [xstrncmp C_MEM_TYPE  DDR ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TDQSS, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_PART_TWR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TWR, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRP = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRP, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TMRD = 4, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TMRD, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 4
 PARAMETER C_MEM_PART_TRRD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRRD, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRFC = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TRFC, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TREFI = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_TREFI, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TAL = 0, DT = INTEGER, RANGE = (0), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TAL, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_PART_TCCD = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TCCD, TYPE = NON_HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TWTR = 0, DT = INTEGER, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), IO_IF = memory_0, IO_IS = C_MEM_PART_TWTR, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_TRTP = 7500, DT = INTEGER, RANGE = (7500), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TRTP, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 7500
 PARAMETER C_MEM_PART_TZQINIT = 512, DT = INTEGER, RANGE = (512), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 512
 PARAMETER C_MEM_PART_TZQCS = 64, DT = INTEGER, RANGE = (64), ISVALID = (0), IO_IF = memory_0, IO_IS = C_MEM_PART_TZQCS, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64
 PARAMETER C_MEM_PART_CAS_A_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A_FMAX, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MEM_PART_CAS_B_FMAX:C_MEM_PART_CAS_B, MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_A = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = REQUIRE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ]), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_A, IPLEVEL_DRC_PROC = iplevel_drc_cas_check, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_B_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B_FMAX, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MEM_PART_CAS_C_FMAX:C_MEM_PART_CAS_C, MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_B = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_A_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_B, IPLEVEL_DRC_PROC = iplevel_drc_cas_check, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_C_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C_FMAX, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_MEM_PART_CAS_D_FMAX:C_MEM_PART_CAS_D, MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_C = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_B_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_C, IPLEVEL_DRC_PROC = iplevel_drc_cas_check, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_D_FMAX = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D_FMAX, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_PART_CAS_D = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, ISVALID = ([xstrncmp C_MEM_PARTNO  CUSTOM ] && C_MEM_PART_CAS_C_FMAX != 0), VALUES = (1.5 = 1.5 (2), 2 = 2, 2.5 = 2.5 (3), 3 = 3, 3.5 = 3.5 (4), 4 = 4, 5 = 5, 6 = 6, 7 = 7, 8 = 8, 9 = 9, 10 = 10), IO_IF = memory_0, IO_IS = C_MEM_PART_CAS_D, IPLEVEL_DRC_PROC = iplevel_drc_cas_check, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPMC_CLK0_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk0, CLK_UNIT = PS, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MPMC_CLK_MEM_PERIOD_PS = 1, DT = INTEGER, RANGE = (1:1000000), ASSIGNMENT = OPTIONAL_UPDATE, CLK_PORT = MPMC_Clk_Mem, CLK_UNIT = PS, TYPE = NON_HDL, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MPMC_CLK_WR_I0_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPMC_CLK_WR_O0_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPMC_CLK_WR_I1_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MPMC_CLK_WR_O1_PHASE = 0, DT = INTEGER, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_MEM_CAS_LATENCY = 3, DT = INTEGER, RANGE = (2:10), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_latency, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 3
 PARAMETER C_MEM_ODT_TYPE = 0, DT = INTEGER, RANGE = (0:5), VALUES = (0= Disabled/Disabled , 1= 75 Ohm/RZQ/4 , 2= 150 Ohm/RZQ/2 , 3= 50 Ohm/RZQ/6, 4=Reserved/RZQ/12, 5=Reserved/RZQ/8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]), IPLEVEL_DRC_PROC = iplevel_drc_mem_odt_type, IO_IS = C_MEM_ODT_TYPE, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_REDUCED_DRV = 0, DT = INTEGER, RANGE = (0:3), VALUES = (0=FULL/RZQ/6/FULL, 1=REDUCED/RZQ/7/HALF, 2=RESERVED/RESERVED/QUARTER, 3=RESERVED/RESERVED/THREEQUARTERS), IPLEVEL_DRC_PROC = iplevel_drc_mem_reduced_drv, ISVALID = ([xstrncmp C_MEM_TYPE  LPDDR ] || [xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_REG_DIMM = 0, DT = INTEGER, RANGE = (0,1), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_REG_DIMM, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_CLK_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CLK_WIDTH, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = SDRAM_Clk:DDR_Clk:DDR_Clk_n:DDR2_Clk:DDR2_Clk_n:DDR3_Clk:DDR3_Clk_n, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_ODT_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_ODT_WIDTH, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ] && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple, AFFECTS_PORTS_VEC = DDR2_ODT:DDR3_ODT, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_CE_WIDTH = 1, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CE_WIDTH, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = SDRAM_CE:DDR_CE:DDR2_CE:DDR3_CE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_CS_N_WIDTH = 2, DT = INTEGER, RANGE = (1:16), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IO_IF = memory_0, IO_IS = C_MEM_CS_N_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_ranks_x_dimms_multiple, ISVALID = (![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = SDRAM_CS_n:DDR_CS_n:DDR2_CS_n:DDR3_CS_n, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 2
 PARAMETER C_MEM_ADDR_WIDTH = 13, DT = INTEGER, RANGE = (1:20), IO_IF = memory_0, IO_IS = C_MEM_ADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_addr_width, AFFECTS_PORTS_VEC = SDRAM_Addr:DDR_Addr:DDR2_Addr:DDR3_Addr:mcbx_dram_addr, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 13
 PARAMETER C_MEM_BANKADDR_WIDTH = 2, DT = INTEGER, RANGE = (1:4), IO_IF = memory_0, IO_IS = C_MEM_BANKADDR_WIDTH, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bankaddr_width, AFFECTS_PORTS_VEC = SDRAM_BankAddr:DDR_BankAddr:DDR2_BankAddr:DDR3_BankAddr:mcbx_dram_ba, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2
 PARAMETER C_MEM_DATA_WIDTH = 32, DT = INTEGER, RANGE = (4,8,16,32,64), IO_IF = memory_0, IO_IS = C_MEM_DATA_WIDTH, IPLEVEL_DRC_PROC = iplevel_drc_mem_data_width, AFFECTS_PORTS_VEC = SDRAM_DQ:DDR_DQ:DDR2_DQ:DDR3_DQ:mcbx_dram_dq, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, MHS_VALUE = 32
 PARAMETER C_MEM_BITS_DATA_PER_DQS = 8, DT = INTEGER, RANGE = (4:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_bits_data, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MEM_DM_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DM_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dm_width, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDRAM_DM:DDR_DM:DDR2_DM:DDR3_DM, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MEM_DQS_WIDTH = 8, DT = INTEGER, RANGE = (1,2,4,8), IO_IF = memory_0, IO_IS = C_MEM_DQS_WIDTH, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_width, ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = DDR_DQS:DDR2_DQS:DDR2_DQS_n:DDR3_DQS:DDR3_DQS_n, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8
 PARAMETER C_MEM_NUM_DIMMS = 1, DT = INTEGER, RANGE = (1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_MEM_NUM_RANKS = 2, DT = INTEGER, RANGE = (1:2), ISVALID = (![xstrncmp C_FAMILY  virtex6 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL_UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_parameter, IPLEVEL_DRC_PROC = iplevel_drc_mem_num_ranks, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, MHS_VALUE = 2
 PARAMETER C_MEM_DQS_IO_COL = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 72, MPD_VALUE = 0x000000000000000000
 PARAMETER C_MEM_DQ_IO_MS = 0x000000000000000000, DT = STD_LOGIC_VECTOR, IPLEVEL_DRC_PROC = iplevel_drc_mig_v3, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 72, MPD_VALUE = 0x000000000000000000
 PARAMETER C_DDR2_DQSN_ENABLE = 1, DT = INTEGER, RANGE = (0,1), IO_IS = C_DDR2_DQSN_ENABLE, IO_IF = memory_0, ISVALID = ([xstrncmp C_MEM_TYPE  DDR2 ]), IPLEVEL_DRC_PROC = iplevel_drc_ddr2_dqsn_enable, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_INCLUDE_ECC_SUPPORT = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (![xstrncmp C_FAMILY  virtex6 ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_MPMC_CTRL_BASEADDR:C_MPMC_CTRL_HIGHADDR:C_MPMC_CTRL_AWIDTH:C_MPMC_CTRL_DWIDTH:C_MPMC_CTRL_NATIVE_DWIDTH:C_MPMC_CTRL_NUM_MASTERS:C_MPMC_CTRL_MID_WIDTH:C_MPMC_CTRL_P2P:C_MPMC_CTRL_SUPPORT_BURSTS:C_MPMC_CTRL_SMALLEST_MASTER:C_ECC_DEFAULT_ON:C_INCLUDE_ECC_TEST:C_ECC_SEC_THRESHOLD:C_ECC_DEC_THRESHOLD:C_ECC_PEC_THRESHOLD:C_ECC_DATA_WIDTH:C_ECC_DM_WIDTH:C_ECC_DQS_WIDTH, MPD_VALUE = 0, MHS_VALUE = 1
 PARAMETER C_ECC_DEFAULT_ON = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_INCLUDE_ECC_TEST = 0, DT = INTEGER, RANGE = (0,1), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_SEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ECC_DEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ECC_PEC_THRESHOLD = 1, DT = INTEGER, RANGE = (1:4095), ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_ECC_DATA_WIDTH = 0, DT = INTEGER, RANGE = (0,3:8), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_datawidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = SDRAM_DQ:DDR_DQ:DDR2_DQ:DDR3_DQ, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_DM_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dmwidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = SDRAM_DM:DDR_DM:DDR2_DM:DDR3_DM, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ECC_DQS_WIDTH = 0, DT = INTEGER, RANGE = (0:1), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_ecc_dqswidth, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 && ![xstrncmp C_FAMILY  spartan6 ]), AFFECTS_PORTS_VEC = DDR_DQS:DDR2_DQS:DDR2_DQS_n:DDR3_DQS:DDR3_DQS_n, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_PA_SR = 0, DT = INTEGER, RANGE = (0:1), VALUES = (0=FULL, 1=HALF), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ] || [xstrncmp C_MEM_TYPE  LPDDR ])), IPLEVEL_DRC_PROC = iplevel_drc_mem_pa_sr, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_CAS_WR_LATENCY = 5, DT = INTEGER, RANGE = (5:8), ISVALID = ([xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_mem_cas_wr_latency, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 5
 PARAMETER C_MEM_AUTO_SR = ENABLED, DT = STRING, VALUES = (ENABLED=ENABLED, MANUAL=MANUAL), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && [xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = ENABLED
 PARAMETER C_MEM_HIGH_TEMP_SR = NORMAL, DT = STRING, VALUES = (NORMAL=NORMAL, EXTENDED=EXTENDED), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && ([xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ])), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = NORMAL
 PARAMETER C_MEM_DYNAMIC_WRITE_ODT = OFF, DT = STRING, VALUES = (OFF=OFF, DIV2=DIV2, DIV4=DIV4), ISVALID = ([xstrncmp C_FAMILY  spartan6 ] && [xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = OFF
 PARAMETER C_MEM_WRLVL = 1, DT = INTEGER, RANGE = (0:1), ISVALID = ([xstrncmp C_FAMILY  virtex6 ] && [xstrncmp C_MEM_TYPE  DDR3 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_IDELAY_CLK_FREQ = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, 200.0=200.0, 300.0=300.0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_PHASE_DETECT = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_OCB_MONITOR = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_IBUF_LPWR_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_IODELAY_HP_MODE = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, ON=ON, OFF=OFF), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_SIM_INIT_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_INIT=SKIP_INIT, SKIP_PU_DELAY=SKIP_PU_DELAY, NONE=NONE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_SIM_CAL_OPTION = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, SKIP_CAL=SKIP_CAL, FAST_CAL=FAST_CAL, FAST_WIN_DETECT=FAST_WIN_DETECT, NONE=NONE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_CAL_WIDTH = DEFAULT, DT = STRING, VALUES = (DEFAULT=DEFAULT, FULL=FULL, HALF=HALF), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = DEFAULT
 PARAMETER C_MEM_NDQS_COL0 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL0, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_NDQS_COL1 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL1, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_NDQS_COL2 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL2, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_NDQS_COL3 = 0, DT = INTEGER, ASSIGNMENT = OPTIONAL_UPDATE, RANGE = (0:18), ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_NDQS_COL3, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_MEM_DQS_LOC_COL0 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL0, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 144, MPD_VALUE = 0x000000000000000000000000000000000000
 PARAMETER C_MEM_DQS_LOC_COL1 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL1, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 144, MPD_VALUE = 0x000000000000000000000000000000000000
 PARAMETER C_MEM_DQS_LOC_COL2 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL2, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 144, MPD_VALUE = 0x000000000000000000000000000000000000
 PARAMETER C_MEM_DQS_LOC_COL3 = 0x000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = ([xstrncmp C_FAMILY  virtex6 ]), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_mem_dqs_col, IO_IS = C_MEM_DQS_LOC_COL3, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 144, MPD_VALUE = 0x000000000000000000000000000000000000
 PARAMETER C_TBY4TAPVALUE = 9999, DT = INTEGER, RANGE = (0:63,9999), ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ]) && (C_USE_STATIC_PHY == 0) && ([xstrncmp C_MEM_TYPE  SDRAM ])), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 9999
 PARAMETER C_PIM0_BASEADDR = 0xFFFFFFFF, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = BASE, PAIR = C_PIM0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = SPLB0
 PARAMETER C_PIM0_HIGHADDR = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0:VFBC0, ADDRESS = HIGH, PAIR = C_PIM0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM0_BASETYPE != 0 && C_PIM0_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = SPLB0
 PARAMETER C_PIM0_OFFSET = 0x00000000, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:PPC440MC0, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM0_BASETYPE == 1 || C_PIM0_BASETYPE == 2 || C_PIM0_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = SPLB0
 PARAMETER C_PIM0_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM0:VFBC0:MCB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 4 || C_PIM0_BASETYPE == 6 || ((C_PIM0_BASETYPE == 7 || C_PIM0_BASETYPE == 8 || C_PIM0_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM0_WrFIFO_Data:PIM0_WrFIFO_BE:PIM0_RdFIFO_Data:MCB0_wr_mask:MCB0_wr_data:MCB0_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM0_BASETYPE = 2, DT = INTEGER, BUS = XCL0:XCL0_B:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM0_BASEADDR:C_PIM0_HIGHADDR:C_PIM0_OFFSET:C_PIM0_DATA_WIDTH:C_PIM0_SUBTYPE:C_XCL0_LINESIZE:C_XCL0_WRITEXFER:C_XCL0_PIPE_STAGES:C_XCL0_B_IN_USE:C_SPLB0_AWIDTH:C_SPLB0_DWIDTH:C_SPLB0_NATIVE_DWIDTH:C_SPLB0_NUM_MASTERS:C_SPLB0_MID_WIDTH:C_SPLB0_P2P:C_SPLB0_SUPPORT_BURSTS:C_SPLB0_SMALLEST_MASTER:C_SDMA_CTRL0_BASEADDR:C_SDMA_CTRL0_HIGHADDR:C_SDMA_CTRL0_AWIDTH:C_SDMA_CTRL0_DWIDTH:C_SDMA_CTRL0_NATIVE_DWIDTH:C_SDMA_CTRL0_NUM_MASTERS:C_SDMA_CTRL0_MID_WIDTH:C_SDMA_CTRL0_P2P:C_SDMA_CTRL0_SUPPORT_BURSTS:C_SDMA_CTRL0_SMALLEST_MASTER:C_SDMA0_COMPLETED_ERR_TX:C_SDMA0_COMPLETED_ERR_RX:C_SDMA0_PRESCALAR:C_SDMA0_PI2LL_CLK_RATIO:C_PPC440MC0_BURST_LENGTH:C_PPC440MC0_PIPE_STAGES:C_VFBC0_CMD_FIFO_DEPTH:C_VFBC0_CMD_AFULL_COUNT:C_VFBC0_RDWD_DATA_WIDTH:C_VFBC0_RDWD_FIFO_DEPTH:C_VFBC0_RD_AEMPTY_WD_AFULL_COUNT:C_PI0_RD_FIFO_TYPE:C_PI0_WR_FIFO_TYPE:C_PI0_ADDRACK_PIPELINE:C_PI0_RD_FIFO_APP_PIPELINE:C_PI0_RD_FIFO_MEM_PIPELINE:C_PI0_WR_FIFO_APP_PIPELINE:C_PI0_WR_FIFO_MEM_PIPELINE:C_PI0_PM_USED:C_PI0_PM_DC_CNTR, MPD_VALUE = 2, MHS_VALUE = 2, RESOLVED_BUS = SPLB0
 PARAMETER C_PIM0_SUBTYPE = PLB, DT = STRING, BUS = XCL0:SPLB0:SDMA_LL0:MPMC_PIM0:PPC440MC0:VFBC0:MCB0, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM0_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = PLB, RESOLVED_BUS = SPLB0
 PARAMETER C_XCL0_LINESIZE = 4, DT = INTEGER, BUS = XCL0, RANGE = (1,4,8,16), ISVALID = (C_PIM0_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL0_WRITEXFER = 1, DT = INTEGER, BUS = XCL0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL0_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL0, RANGE = (0:3), ISVALID = (C_PIM0_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL0_B_IN_USE = 0, DT = INTEGER, BUS = XCL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM0_B_SUBTYPE:C_XCL0_B_LINESIZE:C_XCL0_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM0_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL0_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL0_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL0_B_LINESIZE = 4, DT = INTEGER, BUS = XCL0_B, RANGE = (1,4,8,16), ISVALID = (C_XCL0_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL0_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL0_B, RANGE = (0:2), ISVALID = (C_XCL0_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB0_AWIDTH = 32, DT = INTEGER, BUS = SPLB0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB0_PLB_BE:SPLB0_PLB_wrDBus:SPLB0_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB0_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB0_Sl_MBusy:SPLB0_Sl_MRdErr:SPLB0_Sl_MWrErr:SPLB0_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB0_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_P2P = 1, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = SPLB0
 PARAMETER C_SPLB0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB0
 PARAMETER C_SDMA_CTRL0_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL0, ADDRESS = BASE, PAIR = C_SDMA_CTRL0_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_HIGHADDR = 0x00000000, BUS = SDMA_CTRL0, ADDRESS = HIGH, PAIR = C_SDMA_CTRL0_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM0_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL0_PLB_BE:SDMA_CTRL0_PLB_wrDBus:SDMA_CTRL0_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:16), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL0_Sl_MBusy:SDMA_CTRL0_Sl_MRdErr:SDMA_CTRL0_Sl_MWrErr:SDMA_CTRL0_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0:4), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL0_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM0_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL0_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL0, RANGE = (32,64,128), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA0_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA0_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA0_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL0, RANGE = (0:1023), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA0_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL0, RANGE = (1:2), ISVALID = (C_PIM0_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC0_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC0, RANGE = (2,4,8), ISVALID = (C_PIM0_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC0_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC0, RANGE = (0:2), ISVALID = (C_PIM0_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC0_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC0_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC0_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC0, RANGE = (8,16,32,64), ISVALID = (C_PIM0_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC0_Wd_Data:VFBC0_Wd_Data_BE:VFBC0_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC0_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC0_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC0, ISVALID = (C_PIM0_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI0_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM0_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI0_RD_FIFO_APP_PIPELINE:C_PI0_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI0_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM0_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI0_WR_FIFO_APP_PIPELINE:C_PI0_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI0_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && ![xstrncmp C_PI0_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI0_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM0_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM1_BASEADDR = 0xFFFFFFFF, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = BASE, PAIR = C_PIM1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM1_HIGHADDR = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1:VFBC1, ADDRESS = HIGH, PAIR = C_PIM1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM1_BASETYPE != 0 && C_PIM1_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM1_OFFSET = 0x00000000, BUS = XCL1:XCL1_B:SPLB1:SDMA_LL1:PPC440MC1, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM1_BASETYPE == 1 || C_PIM1_BASETYPE == 2 || C_PIM1_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM1_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM1:VFBC1:MCB1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 4 || C_PIM1_BASETYPE == 6 || ((C_PIM1_BASETYPE == 7 || C_PIM1_BASETYPE == 8 || C_PIM1_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM1_WrFIFO_Data:PIM1_WrFIFO_BE:PIM1_RdFIFO_Data:MCB1_wr_mask:MCB1_wr_data:MCB1_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM1_BASETYPE = 0, DT = INTEGER, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM1_BASEADDR:C_PIM1_HIGHADDR:C_PIM1_OFFSET:C_PIM1_DATA_WIDTH:C_PIM1_SUBTYPE:C_XCL1_LINESIZE:C_XCL1_WRITEXFER:C_XCL1_PIPE_STAGES:C_XCL1_B_IN_USE:C_SPLB1_AWIDTH:C_SPLB1_DWIDTH:C_SPLB1_NATIVE_DWIDTH:C_SPLB1_NUM_MASTERS:C_SPLB1_MID_WIDTH:C_SPLB1_P2P:C_SPLB1_SUPPORT_BURSTS:C_SPLB1_SMALLEST_MASTER:C_SDMA_CTRL1_BASEADDR:C_SDMA_CTRL1_HIGHADDR:C_SDMA_CTRL1_AWIDTH:C_SDMA_CTRL1_DWIDTH:C_SDMA_CTRL1_NATIVE_DWIDTH:C_SDMA_CTRL1_NUM_MASTERS:C_SDMA_CTRL1_MID_WIDTH:C_SDMA_CTRL1_P2P:C_SDMA_CTRL1_SUPPORT_BURSTS:C_SDMA_CTRL1_SMALLEST_MASTER:C_SDMA1_COMPLETED_ERR_TX:C_SDMA1_COMPLETED_ERR_RX:C_SDMA1_PRESCALAR:C_SDMA1_PI2LL_CLK_RATIO:C_PPC440MC1_BURST_LENGTH:C_PPC440MC1_PIPE_STAGES:C_VFBC1_CMD_FIFO_DEPTH:C_VFBC1_CMD_AFULL_COUNT:C_VFBC1_RDWD_DATA_WIDTH:C_VFBC1_RDWD_FIFO_DEPTH:C_VFBC1_RD_AEMPTY_WD_AFULL_COUNT:C_PI1_RD_FIFO_TYPE:C_PI1_WR_FIFO_TYPE:C_PI1_ADDRACK_PIPELINE:C_PI1_RD_FIFO_APP_PIPELINE:C_PI1_RD_FIFO_MEM_PIPELINE:C_PI1_WR_FIFO_APP_PIPELINE:C_PI1_WR_FIFO_MEM_PIPELINE:C_PI1_PM_USED:C_PI1_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM1_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1:SPLB1:SDMA_LL1:MPMC_PIM1:PPC440MC1:VFBC1:MCB1, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM1_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL1_LINESIZE = 4, DT = INTEGER, BUS = XCL1, RANGE = (1,4,8,16), ISVALID = (C_PIM1_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL1_WRITEXFER = 1, DT = INTEGER, BUS = XCL1, RANGE = (0:2), ISVALID = (C_PIM1_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL1_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL1, RANGE = (0:3), ISVALID = (C_PIM1_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL1_B_IN_USE = 0, DT = INTEGER, BUS = XCL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM1_B_SUBTYPE:C_XCL1_B_LINESIZE:C_XCL1_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM1_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL1_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL1_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL1_B_LINESIZE = 4, DT = INTEGER, BUS = XCL1_B, RANGE = (1,4,8,16), ISVALID = (C_XCL1_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL1_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL1_B, RANGE = (0:2), ISVALID = (C_XCL1_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_AWIDTH = 32, DT = INTEGER, BUS = SPLB1, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB1_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB1_PLB_BE:SPLB1_PLB_wrDBus:SPLB1_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB1_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB1_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB1_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:16), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB1_Sl_MBusy:SPLB1_Sl_MRdErr:SPLB1_Sl_MWrErr:SPLB1_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0:4), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB1_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_P2P = 1, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL1, ADDRESS = BASE, PAIR = C_SDMA_CTRL1_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_HIGHADDR = 0x00000000, BUS = SDMA_CTRL1, ADDRESS = HIGH, PAIR = C_SDMA_CTRL1_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM1_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL1_PLB_BE:SDMA_CTRL1_PLB_wrDBus:SDMA_CTRL1_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:16), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL1_Sl_MBusy:SDMA_CTRL1_Sl_MRdErr:SDMA_CTRL1_Sl_MWrErr:SDMA_CTRL1_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0:4), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL1_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM1_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL1_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL1, RANGE = (32,64,128), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA1_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA1_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA1_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL1, RANGE = (0:1023), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA1_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL1, RANGE = (1:2), ISVALID = (C_PIM1_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC1_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC1, RANGE = (2,4,8), ISVALID = (C_PIM1_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC1_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC1, RANGE = (0:2), ISVALID = (C_PIM1_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC1_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC1_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC1_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC1, RANGE = (8,16,32,64), ISVALID = (C_PIM1_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC1_Wd_Data:VFBC1_Wd_Data_BE:VFBC1_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC1_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC1_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC1, ISVALID = (C_PIM1_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI1_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM1_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI1_RD_FIFO_APP_PIPELINE:C_PI1_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI1_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM1_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI1_WR_FIFO_APP_PIPELINE:C_PI1_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI1_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && ![xstrncmp C_PI1_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI1_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM1_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM2_BASEADDR = 0xFFFFFFFF, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = BASE, PAIR = C_PIM2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM2_HIGHADDR = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2:VFBC2, ADDRESS = HIGH, PAIR = C_PIM2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM2_BASETYPE != 0 && C_PIM2_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM2_OFFSET = 0x00000000, BUS = XCL2:XCL2_B:SPLB2:SDMA_LL2:PPC440MC2, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM2_BASETYPE == 1 || C_PIM2_BASETYPE == 2 || C_PIM2_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM2_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM2:VFBC2:MCB2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 4 || C_PIM2_BASETYPE == 6 || ((C_PIM2_BASETYPE == 7 || C_PIM2_BASETYPE == 8 || C_PIM2_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM2_WrFIFO_Data:PIM2_WrFIFO_BE:PIM2_RdFIFO_Data:MCB2_wr_mask:MCB2_wr_data:MCB2_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM2_BASETYPE = 0, DT = INTEGER, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM2_BASEADDR:C_PIM2_HIGHADDR:C_PIM2_OFFSET:C_PIM2_DATA_WIDTH:C_PIM2_SUBTYPE:C_XCL2_LINESIZE:C_XCL2_WRITEXFER:C_XCL2_PIPE_STAGES:C_XCL2_B_IN_USE:C_SPLB2_AWIDTH:C_SPLB2_DWIDTH:C_SPLB2_NATIVE_DWIDTH:C_SPLB2_NUM_MASTERS:C_SPLB2_MID_WIDTH:C_SPLB2_P2P:C_SPLB2_SUPPORT_BURSTS:C_SPLB2_SMALLEST_MASTER:C_SDMA_CTRL2_BASEADDR:C_SDMA_CTRL2_HIGHADDR:C_SDMA_CTRL2_AWIDTH:C_SDMA_CTRL2_DWIDTH:C_SDMA_CTRL2_NATIVE_DWIDTH:C_SDMA_CTRL2_NUM_MASTERS:C_SDMA_CTRL2_MID_WIDTH:C_SDMA_CTRL2_P2P:C_SDMA_CTRL2_SUPPORT_BURSTS:C_SDMA_CTRL2_SMALLEST_MASTER:C_SDMA2_COMPLETED_ERR_TX:C_SDMA2_COMPLETED_ERR_RX:C_SDMA2_PRESCALAR:C_SDMA2_PI2LL_CLK_RATIO:C_PPC440MC2_BURST_LENGTH:C_PPC440MC2_PIPE_STAGES:C_VFBC2_CMD_FIFO_DEPTH:C_VFBC2_CMD_AFULL_COUNT:C_VFBC2_RDWD_DATA_WIDTH:C_VFBC2_RDWD_FIFO_DEPTH:C_VFBC2_RD_AEMPTY_WD_AFULL_COUNT:C_PI2_RD_FIFO_TYPE:C_PI2_WR_FIFO_TYPE:C_PI2_ADDRACK_PIPELINE:C_PI2_RD_FIFO_APP_PIPELINE:C_PI2_RD_FIFO_MEM_PIPELINE:C_PI2_WR_FIFO_APP_PIPELINE:C_PI2_WR_FIFO_MEM_PIPELINE:C_PI2_PM_USED:C_PI2_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM2_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2:SPLB2:SDMA_LL2:MPMC_PIM2:PPC440MC2:VFBC2:MCB2, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM2_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL2_LINESIZE = 4, DT = INTEGER, BUS = XCL2, RANGE = (1,4,8,16), ISVALID = (C_PIM2_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL2_WRITEXFER = 1, DT = INTEGER, BUS = XCL2, RANGE = (0:2), ISVALID = (C_PIM2_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL2_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL2, RANGE = (0:3), ISVALID = (C_PIM2_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL2_B_IN_USE = 0, DT = INTEGER, BUS = XCL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM2_B_SUBTYPE:C_XCL2_B_LINESIZE:C_XCL2_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM2_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL2_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL2_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL2_B_LINESIZE = 4, DT = INTEGER, BUS = XCL2_B, RANGE = (1,4,8,16), ISVALID = (C_XCL2_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL2_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL2_B, RANGE = (0:2), ISVALID = (C_XCL2_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB2_AWIDTH = 32, DT = INTEGER, BUS = SPLB2, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB2_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB2_PLB_BE:SPLB2_PLB_wrDBus:SPLB2_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB2_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB2_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB2_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:16), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB2_Sl_MBusy:SPLB2_Sl_MRdErr:SPLB2_Sl_MWrErr:SPLB2_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB2_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0:4), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB2_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB2_P2P = 1, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL2, ADDRESS = BASE, PAIR = C_SDMA_CTRL2_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_HIGHADDR = 0x00000000, BUS = SDMA_CTRL2, ADDRESS = HIGH, PAIR = C_SDMA_CTRL2_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM2_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL2_PLB_BE:SDMA_CTRL2_PLB_wrDBus:SDMA_CTRL2_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:16), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL2_Sl_MBusy:SDMA_CTRL2_Sl_MRdErr:SDMA_CTRL2_Sl_MWrErr:SDMA_CTRL2_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0:4), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL2_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM2_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL2_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL2, RANGE = (32,64,128), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA2_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA2_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA2_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL2, RANGE = (0:1023), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA2_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL2, RANGE = (1:2), ISVALID = (C_PIM2_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC2_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC2, RANGE = (2,4,8), ISVALID = (C_PIM2_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC2_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC2, RANGE = (0:2), ISVALID = (C_PIM2_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC2_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC2_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC2_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC2, RANGE = (8,16,32,64), ISVALID = (C_PIM2_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC2_Wd_Data:VFBC2_Wd_Data_BE:VFBC2_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC2_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC2_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC2, ISVALID = (C_PIM2_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI2_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM2_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI2_RD_FIFO_APP_PIPELINE:C_PI2_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI2_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM2_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI2_WR_FIFO_APP_PIPELINE:C_PI2_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI2_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && ![xstrncmp C_PI2_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI2_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM2_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM3_BASEADDR = 0xFFFFFFFF, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = BASE, PAIR = C_PIM3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM3_HIGHADDR = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3:VFBC3, ADDRESS = HIGH, PAIR = C_PIM3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM3_BASETYPE != 0 && C_PIM3_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM3_OFFSET = 0x00000000, BUS = XCL3:XCL3_B:SPLB3:SDMA_LL3:PPC440MC3, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM3_BASETYPE == 1 || C_PIM3_BASETYPE == 2 || C_PIM3_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM3_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM3:VFBC3:MCB3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 4 || C_PIM3_BASETYPE == 6 || ((C_PIM3_BASETYPE == 7 || C_PIM3_BASETYPE == 8 || C_PIM3_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM3_WrFIFO_Data:PIM3_WrFIFO_BE:PIM3_RdFIFO_Data:MCB3_wr_mask:MCB3_wr_data:MCB3_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM3_BASETYPE = 0, DT = INTEGER, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM3_BASEADDR:C_PIM3_HIGHADDR:C_PIM3_OFFSET:C_PIM3_DATA_WIDTH:C_PIM3_SUBTYPE:C_XCL3_LINESIZE:C_XCL3_WRITEXFER:C_XCL3_PIPE_STAGES:C_XCL3_B_IN_USE:C_SPLB3_AWIDTH:C_SPLB3_DWIDTH:C_SPLB3_NATIVE_DWIDTH:C_SPLB3_NUM_MASTERS:C_SPLB3_MID_WIDTH:C_SPLB3_P2P:C_SPLB3_SUPPORT_BURSTS:C_SPLB3_SMALLEST_MASTER:C_SDMA_CTRL3_BASEADDR:C_SDMA_CTRL3_HIGHADDR:C_SDMA_CTRL3_AWIDTH:C_SDMA_CTRL3_DWIDTH:C_SDMA_CTRL3_NATIVE_DWIDTH:C_SDMA_CTRL3_NUM_MASTERS:C_SDMA_CTRL3_MID_WIDTH:C_SDMA_CTRL3_P2P:C_SDMA_CTRL3_SUPPORT_BURSTS:C_SDMA_CTRL3_SMALLEST_MASTER:C_SDMA3_COMPLETED_ERR_TX:C_SDMA3_COMPLETED_ERR_RX:C_SDMA3_PRESCALAR:C_SDMA3_PI2LL_CLK_RATIO:C_PPC440MC3_BURST_LENGTH:C_PPC440MC3_PIPE_STAGES:C_VFBC3_CMD_FIFO_DEPTH:C_VFBC3_CMD_AFULL_COUNT:C_VFBC3_RDWD_DATA_WIDTH:C_VFBC3_RDWD_FIFO_DEPTH:C_VFBC3_RD_AEMPTY_WD_AFULL_COUNT:C_PI3_RD_FIFO_TYPE:C_PI3_WR_FIFO_TYPE:C_PI3_ADDRACK_PIPELINE:C_PI3_RD_FIFO_APP_PIPELINE:C_PI3_RD_FIFO_MEM_PIPELINE:C_PI3_WR_FIFO_APP_PIPELINE:C_PI3_WR_FIFO_MEM_PIPELINE:C_PI3_PM_USED:C_PI3_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM3_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3:SPLB3:SDMA_LL3:MPMC_PIM3:PPC440MC3:VFBC3:MCB3, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM3_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL3_LINESIZE = 4, DT = INTEGER, BUS = XCL3, RANGE = (1,4,8,16), ISVALID = (C_PIM3_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL3_WRITEXFER = 1, DT = INTEGER, BUS = XCL3, RANGE = (0:2), ISVALID = (C_PIM3_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL3_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL3, RANGE = (0:3), ISVALID = (C_PIM3_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL3_B_IN_USE = 0, DT = INTEGER, BUS = XCL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM3_B_SUBTYPE:C_XCL3_B_LINESIZE:C_XCL3_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM3_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL3_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL3_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL3_B_LINESIZE = 4, DT = INTEGER, BUS = XCL3_B, RANGE = (1,4,8,16), ISVALID = (C_XCL3_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL3_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL3_B, RANGE = (0:2), ISVALID = (C_XCL3_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB3_AWIDTH = 32, DT = INTEGER, BUS = SPLB3, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB3_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB3_PLB_BE:SPLB3_PLB_wrDBus:SPLB3_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB3_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB3_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB3_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:16), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB3_Sl_MBusy:SPLB3_Sl_MRdErr:SPLB3_Sl_MWrErr:SPLB3_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB3_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0:4), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB3_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB3_P2P = 1, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL3, ADDRESS = BASE, PAIR = C_SDMA_CTRL3_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_HIGHADDR = 0x00000000, BUS = SDMA_CTRL3, ADDRESS = HIGH, PAIR = C_SDMA_CTRL3_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM3_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL3_PLB_BE:SDMA_CTRL3_PLB_wrDBus:SDMA_CTRL3_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:16), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL3_Sl_MBusy:SDMA_CTRL3_Sl_MRdErr:SDMA_CTRL3_Sl_MWrErr:SDMA_CTRL3_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0:4), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL3_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM3_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL3_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL3, RANGE = (32,64,128), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA3_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA3_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA3_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL3, RANGE = (0:1023), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA3_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL3, RANGE = (1:2), ISVALID = (C_PIM3_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC3_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC3, RANGE = (2,4,8), ISVALID = (C_PIM3_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC3_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC3, RANGE = (0:2), ISVALID = (C_PIM3_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC3_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC3_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC3_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC3, RANGE = (8,16,32,64), ISVALID = (C_PIM3_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC3_Wd_Data:VFBC3_Wd_Data_BE:VFBC3_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC3_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC3_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC3, ISVALID = (C_PIM3_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI3_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM3_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI3_RD_FIFO_APP_PIPELINE:C_PI3_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI3_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM3_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI3_WR_FIFO_APP_PIPELINE:C_PI3_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI3_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && ![xstrncmp C_PI3_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI3_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM3_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM4_BASEADDR = 0xFFFFFFFF, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = BASE, PAIR = C_PIM4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM4_HIGHADDR = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4:VFBC4, ADDRESS = HIGH, PAIR = C_PIM4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM4_BASETYPE != 0 && C_PIM4_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM4_OFFSET = 0x00000000, BUS = XCL4:XCL4_B:SPLB4:SDMA_LL4:PPC440MC4, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM4_BASETYPE == 1 || C_PIM4_BASETYPE == 2 || C_PIM4_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM4_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM4:VFBC4:MCB4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 4 || C_PIM4_BASETYPE == 6 || ((C_PIM4_BASETYPE == 7 || C_PIM4_BASETYPE == 8 || C_PIM4_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM4_WrFIFO_Data:PIM4_WrFIFO_BE:PIM4_RdFIFO_Data:MCB4_wr_mask:MCB4_wr_data:MCB4_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM4_BASETYPE = 0, DT = INTEGER, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM4_BASEADDR:C_PIM4_HIGHADDR:C_PIM4_OFFSET:C_PIM4_DATA_WIDTH:C_PIM4_SUBTYPE:C_XCL4_LINESIZE:C_XCL4_WRITEXFER:C_XCL4_PIPE_STAGES:C_XCL4_B_IN_USE:C_SPLB4_AWIDTH:C_SPLB4_DWIDTH:C_SPLB4_NATIVE_DWIDTH:C_SPLB4_NUM_MASTERS:C_SPLB4_MID_WIDTH:C_SPLB4_P2P:C_SPLB4_SUPPORT_BURSTS:C_SPLB4_SMALLEST_MASTER:C_SDMA_CTRL4_BASEADDR:C_SDMA_CTRL4_HIGHADDR:C_SDMA_CTRL4_AWIDTH:C_SDMA_CTRL4_DWIDTH:C_SDMA_CTRL4_NATIVE_DWIDTH:C_SDMA_CTRL4_NUM_MASTERS:C_SDMA_CTRL4_MID_WIDTH:C_SDMA_CTRL4_P2P:C_SDMA_CTRL4_SUPPORT_BURSTS:C_SDMA_CTRL4_SMALLEST_MASTER:C_SDMA4_COMPLETED_ERR_TX:C_SDMA4_COMPLETED_ERR_RX:C_SDMA4_PRESCALAR:C_SDMA4_PI2LL_CLK_RATIO:C_PPC440MC4_BURST_LENGTH:C_PPC440MC4_PIPE_STAGES:C_VFBC4_CMD_FIFO_DEPTH:C_VFBC4_CMD_AFULL_COUNT:C_VFBC4_RDWD_DATA_WIDTH:C_VFBC4_RDWD_FIFO_DEPTH:C_VFBC4_RD_AEMPTY_WD_AFULL_COUNT:C_PI4_RD_FIFO_TYPE:C_PI4_WR_FIFO_TYPE:C_PI4_ADDRACK_PIPELINE:C_PI4_RD_FIFO_APP_PIPELINE:C_PI4_RD_FIFO_MEM_PIPELINE:C_PI4_WR_FIFO_APP_PIPELINE:C_PI4_WR_FIFO_MEM_PIPELINE:C_PI4_PM_USED:C_PI4_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM4_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4:SPLB4:SDMA_LL4:MPMC_PIM4:PPC440MC4:VFBC4:MCB4, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM4_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL4_LINESIZE = 4, DT = INTEGER, BUS = XCL4, RANGE = (1,4,8,16), ISVALID = (C_PIM4_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL4_WRITEXFER = 1, DT = INTEGER, BUS = XCL4, RANGE = (0:2), ISVALID = (C_PIM4_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL4_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL4, RANGE = (0:3), ISVALID = (C_PIM4_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL4_B_IN_USE = 0, DT = INTEGER, BUS = XCL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM4_B_SUBTYPE:C_XCL4_B_LINESIZE:C_XCL4_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM4_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL4_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL4_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL4_B_LINESIZE = 4, DT = INTEGER, BUS = XCL4_B, RANGE = (1,4,8,16), ISVALID = (C_XCL4_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL4_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL4_B, RANGE = (0:2), ISVALID = (C_XCL4_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB4_AWIDTH = 32, DT = INTEGER, BUS = SPLB4, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB4_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB4_PLB_BE:SPLB4_PLB_wrDBus:SPLB4_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB4_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB4_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB4_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:16), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB4_Sl_MBusy:SPLB4_Sl_MRdErr:SPLB4_Sl_MWrErr:SPLB4_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB4_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0:4), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB4_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB4_P2P = 1, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL4, ADDRESS = BASE, PAIR = C_SDMA_CTRL4_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_HIGHADDR = 0x00000000, BUS = SDMA_CTRL4, ADDRESS = HIGH, PAIR = C_SDMA_CTRL4_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM4_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL4_PLB_BE:SDMA_CTRL4_PLB_wrDBus:SDMA_CTRL4_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:16), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL4_Sl_MBusy:SDMA_CTRL4_Sl_MRdErr:SDMA_CTRL4_Sl_MWrErr:SDMA_CTRL4_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0:4), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL4_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM4_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL4_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL4, RANGE = (32,64,128), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA4_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA4_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA4_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL4, RANGE = (0:1023), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA4_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL4, RANGE = (1:2), ISVALID = (C_PIM4_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC4_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC4, RANGE = (2,4,8), ISVALID = (C_PIM4_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC4_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC4, RANGE = (0:2), ISVALID = (C_PIM4_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC4_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC4_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC4_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC4, RANGE = (8,16,32,64), ISVALID = (C_PIM4_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC4_Wd_Data:VFBC4_Wd_Data_BE:VFBC4_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC4_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC4_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC4, ISVALID = (C_PIM4_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI4_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM4_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI4_RD_FIFO_APP_PIPELINE:C_PI4_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI4_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM4_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI4_WR_FIFO_APP_PIPELINE:C_PI4_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI4_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && ![xstrncmp C_PI4_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI4_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM4_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM5_BASEADDR = 0xFFFFFFFF, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = BASE, PAIR = C_PIM5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM5_HIGHADDR = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5:VFBC5, ADDRESS = HIGH, PAIR = C_PIM5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM5_BASETYPE != 0 && C_PIM5_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM5_OFFSET = 0x00000000, BUS = XCL5:XCL5_B:SPLB5:SDMA_LL5:PPC440MC5, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM5_BASETYPE == 1 || C_PIM5_BASETYPE == 2 || C_PIM5_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM5_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM5:VFBC5:MCB5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 4 || C_PIM5_BASETYPE == 6 || ((C_PIM5_BASETYPE == 7 || C_PIM5_BASETYPE == 8 || C_PIM5_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM5_WrFIFO_Data:PIM5_WrFIFO_BE:PIM5_RdFIFO_Data:MCB5_wr_mask:MCB5_wr_data:MCB5_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM5_BASETYPE = 0, DT = INTEGER, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM5_BASEADDR:C_PIM5_HIGHADDR:C_PIM5_OFFSET:C_PIM5_DATA_WIDTH:C_PIM5_SUBTYPE:C_XCL5_LINESIZE:C_XCL5_WRITEXFER:C_XCL5_PIPE_STAGES:C_XCL5_B_IN_USE:C_SPLB5_AWIDTH:C_SPLB5_DWIDTH:C_SPLB5_NATIVE_DWIDTH:C_SPLB5_NUM_MASTERS:C_SPLB5_MID_WIDTH:C_SPLB5_P2P:C_SPLB5_SUPPORT_BURSTS:C_SPLB5_SMALLEST_MASTER:C_SDMA_CTRL5_BASEADDR:C_SDMA_CTRL5_HIGHADDR:C_SDMA_CTRL5_AWIDTH:C_SDMA_CTRL5_DWIDTH:C_SDMA_CTRL5_NATIVE_DWIDTH:C_SDMA_CTRL5_NUM_MASTERS:C_SDMA_CTRL5_MID_WIDTH:C_SDMA_CTRL5_P2P:C_SDMA_CTRL5_SUPPORT_BURSTS:C_SDMA_CTRL5_SMALLEST_MASTER:C_SDMA5_COMPLETED_ERR_TX:C_SDMA5_COMPLETED_ERR_RX:C_SDMA5_PRESCALAR:C_SDMA5_PI2LL_CLK_RATIO:C_PPC440MC5_BURST_LENGTH:C_PPC440MC5_PIPE_STAGES:C_VFBC5_CMD_FIFO_DEPTH:C_VFBC5_CMD_AFULL_COUNT:C_VFBC5_RDWD_DATA_WIDTH:C_VFBC5_RDWD_FIFO_DEPTH:C_VFBC5_RD_AEMPTY_WD_AFULL_COUNT:C_PI5_RD_FIFO_TYPE:C_PI5_WR_FIFO_TYPE:C_PI5_ADDRACK_PIPELINE:C_PI5_RD_FIFO_APP_PIPELINE:C_PI5_RD_FIFO_MEM_PIPELINE:C_PI5_WR_FIFO_APP_PIPELINE:C_PI5_WR_FIFO_MEM_PIPELINE:C_PI5_PM_USED:C_PI5_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM5_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5:SPLB5:SDMA_LL5:MPMC_PIM5:PPC440MC5:VFBC5:MCB5, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM5_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL5_LINESIZE = 4, DT = INTEGER, BUS = XCL5, RANGE = (1,4,8,16), ISVALID = (C_PIM5_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL5_WRITEXFER = 1, DT = INTEGER, BUS = XCL5, RANGE = (0:2), ISVALID = (C_PIM5_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL5_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL5, RANGE = (0:3), ISVALID = (C_PIM5_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL5_B_IN_USE = 0, DT = INTEGER, BUS = XCL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM5_B_SUBTYPE:C_XCL5_B_LINESIZE:C_XCL5_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM5_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL5_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL5_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL5_B_LINESIZE = 4, DT = INTEGER, BUS = XCL5_B, RANGE = (1,4,8,16), ISVALID = (C_XCL5_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL5_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL5_B, RANGE = (0:2), ISVALID = (C_XCL5_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB5_AWIDTH = 32, DT = INTEGER, BUS = SPLB5, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB5_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB5_PLB_BE:SPLB5_PLB_wrDBus:SPLB5_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB5_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB5_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB5_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:16), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB5_Sl_MBusy:SPLB5_Sl_MRdErr:SPLB5_Sl_MWrErr:SPLB5_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB5_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0:4), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB5_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB5_P2P = 1, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL5, ADDRESS = BASE, PAIR = C_SDMA_CTRL5_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_HIGHADDR = 0x00000000, BUS = SDMA_CTRL5, ADDRESS = HIGH, PAIR = C_SDMA_CTRL5_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM5_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL5_PLB_BE:SDMA_CTRL5_PLB_wrDBus:SDMA_CTRL5_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:16), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL5_Sl_MBusy:SDMA_CTRL5_Sl_MRdErr:SDMA_CTRL5_Sl_MWrErr:SDMA_CTRL5_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0:4), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL5_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM5_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL5_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL5, RANGE = (32,64,128), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA5_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA5_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA5_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL5, RANGE = (0:1023), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA5_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL5, RANGE = (1:2), ISVALID = (C_PIM5_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC5_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC5, RANGE = (2,4,8), ISVALID = (C_PIM5_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC5_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC5, RANGE = (0:2), ISVALID = (C_PIM5_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC5_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC5_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC5_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC5, RANGE = (8,16,32,64), ISVALID = (C_PIM5_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC5_Wd_Data:VFBC5_Wd_Data_BE:VFBC5_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC5_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC5_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC5, ISVALID = (C_PIM5_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI5_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM5_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI5_RD_FIFO_APP_PIPELINE:C_PI5_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI5_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ] || C_PIM5_BASETYPE == 6), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI5_WR_FIFO_APP_PIPELINE:C_PI5_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI5_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && ![xstrncmp C_PI5_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI5_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM5_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM6_BASEADDR = 0xFFFFFFFF, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = BASE, PAIR = C_PIM6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM6_HIGHADDR = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6:VFBC6, ADDRESS = HIGH, PAIR = C_PIM6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM6_BASETYPE != 0 && C_PIM6_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM6_OFFSET = 0x00000000, BUS = XCL6:XCL6_B:SPLB6:SDMA_LL6:PPC440MC6, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM6_BASETYPE == 1 || C_PIM6_BASETYPE == 2 || C_PIM6_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM6_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM6:VFBC6:MCB6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 4 || C_PIM6_BASETYPE == 6 || ((C_PIM6_BASETYPE == 7 || C_PIM6_BASETYPE == 8 || C_PIM6_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM6_WrFIFO_Data:PIM6_WrFIFO_BE:PIM6_RdFIFO_Data:MCB6_wr_mask:MCB6_wr_data:MCB6_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM6_BASETYPE = 0, DT = INTEGER, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM6_BASEADDR:C_PIM6_HIGHADDR:C_PIM6_OFFSET:C_PIM6_DATA_WIDTH:C_PIM6_SUBTYPE:C_XCL6_LINESIZE:C_XCL6_WRITEXFER:C_XCL6_PIPE_STAGES:C_XCL6_B_IN_USE:C_SPLB6_AWIDTH:C_SPLB6_DWIDTH:C_SPLB6_NATIVE_DWIDTH:C_SPLB6_NUM_MASTERS:C_SPLB6_MID_WIDTH:C_SPLB6_P2P:C_SPLB6_SUPPORT_BURSTS:C_SPLB6_SMALLEST_MASTER:C_SDMA_CTRL6_BASEADDR:C_SDMA_CTRL6_HIGHADDR:C_SDMA_CTRL6_AWIDTH:C_SDMA_CTRL6_DWIDTH:C_SDMA_CTRL6_NATIVE_DWIDTH:C_SDMA_CTRL6_NUM_MASTERS:C_SDMA_CTRL6_MID_WIDTH:C_SDMA_CTRL6_P2P:C_SDMA_CTRL6_SUPPORT_BURSTS:C_SDMA_CTRL6_SMALLEST_MASTER:C_SDMA6_COMPLETED_ERR_TX:C_SDMA6_COMPLETED_ERR_RX:C_SDMA6_PRESCALAR:C_SDMA6_PI2LL_CLK_RATIO:C_PPC440MC6_BURST_LENGTH:C_PPC440MC6_PIPE_STAGES:C_VFBC6_CMD_FIFO_DEPTH:C_VFBC6_CMD_AFULL_COUNT:C_VFBC6_RDWD_DATA_WIDTH:C_VFBC6_RDWD_FIFO_DEPTH:C_VFBC6_RD_AEMPTY_WD_AFULL_COUNT:C_PI6_RD_FIFO_TYPE:C_PI6_WR_FIFO_TYPE:C_PI6_ADDRACK_PIPELINE:C_PI6_RD_FIFO_APP_PIPELINE:C_PI6_RD_FIFO_MEM_PIPELINE:C_PI6_WR_FIFO_APP_PIPELINE:C_PI6_WR_FIFO_MEM_PIPELINE:C_PI6_PM_USED:C_PI6_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM6_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6:SPLB6:SDMA_LL6:MPMC_PIM6:PPC440MC6:VFBC6:MCB6, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM6_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL6_LINESIZE = 4, DT = INTEGER, BUS = XCL6, RANGE = (1,4,8,16), ISVALID = (C_PIM6_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL6_WRITEXFER = 1, DT = INTEGER, BUS = XCL6, RANGE = (0:2), ISVALID = (C_PIM6_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL6_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL6, RANGE = (0:3), ISVALID = (C_PIM6_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL6_B_IN_USE = 0, DT = INTEGER, BUS = XCL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM6_B_SUBTYPE:C_XCL6_B_LINESIZE:C_XCL6_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM6_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL6_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL6_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL6_B_LINESIZE = 4, DT = INTEGER, BUS = XCL6_B, RANGE = (1,4,8,16), ISVALID = (C_XCL6_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL6_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL6_B, RANGE = (0:2), ISVALID = (C_XCL6_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB6_AWIDTH = 32, DT = INTEGER, BUS = SPLB6, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB6_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB6_PLB_BE:SPLB6_PLB_wrDBus:SPLB6_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB6_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB6_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB6_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:16), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB6_Sl_MBusy:SPLB6_Sl_MRdErr:SPLB6_Sl_MWrErr:SPLB6_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB6_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0:4), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB6_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB6_P2P = 1, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL6, ADDRESS = BASE, PAIR = C_SDMA_CTRL6_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_HIGHADDR = 0x00000000, BUS = SDMA_CTRL6, ADDRESS = HIGH, PAIR = C_SDMA_CTRL6_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM6_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL6_PLB_BE:SDMA_CTRL6_PLB_wrDBus:SDMA_CTRL6_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:16), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL6_Sl_MBusy:SDMA_CTRL6_Sl_MRdErr:SDMA_CTRL6_Sl_MWrErr:SDMA_CTRL6_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0:4), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL6_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM6_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL6_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL6, RANGE = (32,64,128), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA6_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA6_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA6_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL6, RANGE = (0:1023), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA6_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL6, RANGE = (1:2), ISVALID = (C_PIM6_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC6_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC6, RANGE = (2,4,8), ISVALID = (C_PIM6_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC6_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC6, RANGE = (0:2), ISVALID = (C_PIM6_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC6_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC6_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC6_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC6, RANGE = (8,16,32,64), ISVALID = (C_PIM6_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC6_Wd_Data:VFBC6_Wd_Data_BE:VFBC6_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC6_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC6_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC6, ISVALID = (C_PIM6_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI6_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI6_RD_FIFO_APP_PIPELINE:C_PI6_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI6_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI6_WR_FIFO_APP_PIPELINE:C_PI6_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI6_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && ![xstrncmp C_PI6_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI6_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM6_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PIM7_BASEADDR = 0xFFFFFFFF, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = BASE, PAIR = C_PIM7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_PIM7_HIGHADDR = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7:VFBC7, ADDRESS = HIGH, PAIR = C_PIM7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = ((C_PIM7_BASETYPE != 0 && C_PIM7_BASETYPE != 4) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM7_OFFSET = 0x00000000, BUS = XCL7:XCL7_B:SPLB7:SDMA_LL7:PPC440MC7, DT = STD_LOGIC_VECTOR, ISVALID = ((C_PIM7_BASETYPE == 1 || C_PIM7_BASETYPE == 2 || C_PIM7_BASETYPE == 5) && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 32, MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_PIM7_DATA_WIDTH = 64, DT = INTEGER, BUS = MPMC_PIM7:VFBC7:MCB7, RANGE = (32,64), ISVALID = (C_PIM7_BASETYPE == 4 || C_PIM7_BASETYPE == 6 || ((C_PIM7_BASETYPE == 7 || C_PIM7_BASETYPE == 8 || C_PIM7_BASETYPE == 9) && [xstrncmp C_FAMILY  spartan6 ])), IPLEVEL_DRC_PROC = iplevel_drc_pim_data_width, AFFECTS_PORTS_VEC = PIM7_WrFIFO_Data:PIM7_WrFIFO_BE:PIM7_RdFIFO_Data:MCB7_wr_mask:MCB7_wr_data:MCB7_rd_data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_PIM7_BASETYPE = 0, DT = INTEGER, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, RANGE = (0:9), VALUES = (0=INACTIVE, 1=XCL, 2=PLBV46, 3=SDMA, 4=NPI, 5=PPC440MC, 6=VFBC, 7=MCB, 8=MCB-Read, 9=MCB-Write), IPLEVEL_DRC_PROC = iplevel_drc_pim_basetype, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_SDMA_CTRL_BASEADDR:C_SDMA_CTRL_HIGHADDR:C_PIM7_BASEADDR:C_PIM7_HIGHADDR:C_PIM7_OFFSET:C_PIM7_DATA_WIDTH:C_PIM7_SUBTYPE:C_XCL7_LINESIZE:C_XCL7_WRITEXFER:C_XCL7_PIPE_STAGES:C_XCL7_B_IN_USE:C_SPLB7_AWIDTH:C_SPLB7_DWIDTH:C_SPLB7_NATIVE_DWIDTH:C_SPLB7_NUM_MASTERS:C_SPLB7_MID_WIDTH:C_SPLB7_P2P:C_SPLB7_SUPPORT_BURSTS:C_SPLB7_SMALLEST_MASTER:C_SDMA_CTRL7_BASEADDR:C_SDMA_CTRL7_HIGHADDR:C_SDMA_CTRL7_AWIDTH:C_SDMA_CTRL7_DWIDTH:C_SDMA_CTRL7_NATIVE_DWIDTH:C_SDMA_CTRL7_NUM_MASTERS:C_SDMA_CTRL7_MID_WIDTH:C_SDMA_CTRL7_P2P:C_SDMA_CTRL7_SUPPORT_BURSTS:C_SDMA_CTRL7_SMALLEST_MASTER:C_SDMA7_COMPLETED_ERR_TX:C_SDMA7_COMPLETED_ERR_RX:C_SDMA7_PRESCALAR:C_SDMA7_PI2LL_CLK_RATIO:C_PPC440MC7_BURST_LENGTH:C_PPC440MC7_PIPE_STAGES:C_VFBC7_CMD_FIFO_DEPTH:C_VFBC7_CMD_AFULL_COUNT:C_VFBC7_RDWD_DATA_WIDTH:C_VFBC7_RDWD_FIFO_DEPTH:C_VFBC7_RD_AEMPTY_WD_AFULL_COUNT:C_PI7_RD_FIFO_TYPE:C_PI7_WR_FIFO_TYPE:C_PI7_ADDRACK_PIPELINE:C_PI7_RD_FIFO_APP_PIPELINE:C_PI7_RD_FIFO_MEM_PIPELINE:C_PI7_WR_FIFO_APP_PIPELINE:C_PI7_WR_FIFO_MEM_PIPELINE:C_PI7_PM_USED:C_PI7_PM_DC_CNTR, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM7_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7:SPLB7:SDMA_LL7:MPMC_PIM7:PPC440MC7:VFBC7:MCB7, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_PIM7_BASETYPE != 0), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, SYSLEVEL_DRC_PROC = syslevel_drc_splb_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL7_LINESIZE = 4, DT = INTEGER, BUS = XCL7, RANGE = (1,4,8,16), ISVALID = (C_PIM7_BASETYPE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL7_WRITEXFER = 1, DT = INTEGER, BUS = XCL7, RANGE = (0:2), ISVALID = (C_PIM7_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_XCL7_PIPE_STAGES = 2, DT = INTEGER, BUS = XCL7, RANGE = (0:3), ISVALID = (C_PIM7_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 2, RESOLVED_BUS = 
 PARAMETER C_XCL7_B_IN_USE = 0, DT = INTEGER, BUS = XCL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, AFFECTS_PARAMS_ISVALID = C_PIM7_B_SUBTYPE:C_XCL7_B_LINESIZE:C_XCL7_B_WRITEXFER, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_PIM7_B_SUBTYPE = INACTIVE, DT = STRING, BUS = XCL7_B, ASSIGNMENT = OPTIONAL_UPDATE, ISVALID = (C_XCL7_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_pim_subtype, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = INACTIVE, RESOLVED_BUS = 
 PARAMETER C_XCL7_B_LINESIZE = 4, DT = INTEGER, BUS = XCL7_B, RANGE = (1,4,8,16), ISVALID = (C_XCL7_B_IN_USE == 1), SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_xcl_linesize, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_XCL7_B_WRITEXFER = 1, DT = INTEGER, BUS = XCL7_B, RANGE = (0:2), ISVALID = (C_XCL7_B_IN_USE == 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB7_AWIDTH = 32, DT = INTEGER, BUS = SPLB7, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 2), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SPLB7_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB7_PLB_BE:SPLB7_PLB_wrDBus:SPLB7_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB7_NATIVE_DWIDTH = 64, DT = INTEGER, BUS = SPLB7, RANGE = (32,64), ISVALID = (C_PIM7_BASETYPE == 2), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_splb_native_dwidth, ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_DRC_PROC = syslevel_drc_splb_native_dwidth, IO_IS = C_SPLB7_NATIVE_DWIDTH, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SPLB7_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:16), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB7_Sl_MBusy:SPLB7_Sl_MRdErr:SPLB7_Sl_MWrErr:SPLB7_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB7_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0:4), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SPLB7_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB7_P2P = 1, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SPLB7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SPLB7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 2), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_BASEADDR = 0xFFFFFFFF, BUS = SDMA_CTRL7, ADDRESS = BASE, PAIR = C_SDMA_CTRL7_HIGHADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xFFFFFFFF, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_HIGHADDR = 0x00000000, BUS = SDMA_CTRL7, ADDRESS = HIGH, PAIR = C_SDMA_CTRL7_BASEADDR, DT = STD_LOGIC_VECTOR, ADDR_TYPE = REGISTER, ISVALID = (C_PIM7_BASETYPE == 3 && C_ALL_PIMS_SHARE_ADDRESSES == 0), ASSIGNMENT = REQUIRE, BITWIDTH = 32, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_AWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_DWIDTH = 64, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL7_PLB_BE:SDMA_CTRL7_PLB_wrDBus:SDMA_CTRL7_Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 64, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_NUM_MASTERS = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:16), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL7_Sl_MBusy:SDMA_CTRL7_Sl_MRdErr:SDMA_CTRL7_Sl_MWrErr:SDMA_CTRL7_Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_MID_WIDTH = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0:4), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = SDMA_CTRL7_PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_P2P = 1, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (0,1), ASSIGNMENT = CONSTANT, ISVALID = (C_PIM7_BASETYPE == 3), TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = 
 PARAMETER C_SDMA_CTRL7_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SDMA_CTRL7, RANGE = (32,64,128), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_SDMA7_COMPLETED_ERR_TX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA7_COMPLETED_ERR_RX = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_SDMA7_PRESCALAR = 1023, DT = INTEGER, BUS = SDMA_LL7, RANGE = (0:1023), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1023, RESOLVED_BUS = 
 PARAMETER C_SDMA7_PI2LL_CLK_RATIO = 1, DT = INTEGER, BUS = SDMA_LL7, RANGE = (1:2), ISVALID = (C_PIM7_BASETYPE == 3), ASSIGNMENT = REQUIRE, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_PPC440MC7_BURST_LENGTH = 4, DT = INTEGER, BUS = PPC440MC7, RANGE = (2,4,8), ISVALID = (C_PIM7_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 4, RESOLVED_BUS = 
 PARAMETER C_PPC440MC7_PIPE_STAGES = 1, DT = INTEGER, BUS = PPC440MC7, RANGE = (0:2), ISVALID = (C_PIM7_BASETYPE == 5), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1, RESOLVED_BUS = 
 PARAMETER C_VFBC7_CMD_FIFO_DEPTH = 32, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC7_CMD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_VFBC7_RDWD_DATA_WIDTH = 32, DT = INTEGER, BUS = VFBC7, RANGE = (8,16,32,64), ISVALID = (C_PIM7_BASETYPE == 6), AFFECTS_PORTS_VEC = VFBC7_Wd_Data:VFBC7_Wd_Data_BE:VFBC7_Rd_Data, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = 
 PARAMETER C_VFBC7_RDWD_FIFO_DEPTH = 1024, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1024, RESOLVED_BUS = 
 PARAMETER C_VFBC7_RD_AEMPTY_WD_AFULL_COUNT = 3, DT = INTEGER, BUS = VFBC7, ISVALID = (C_PIM7_BASETYPE == 6), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 3, RESOLVED_BUS = 
 PARAMETER C_PI7_RD_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Wr-Only ), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI7_RD_FIFO_APP_PIPELINE:C_PI7_RD_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI7_WR_FIFO_TYPE = BRAM, DT = STRING, VALUES = ( BRAM = BRAM ,  SRL = SRL ,  DISABLED = Rd-Only ), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), IPLEVEL_DRC_PROC = iplevel_drc_wr_fifo, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , AFFECTS_PARAMS_ISVALID = C_PI7_WR_FIFO_APP_PIPELINE:C_PI7_WR_FIFO_MEM_PIPELINE, MPD_VALUE = BRAM
 PARAMETER C_PI7_ADDRACK_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_RD_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_RD_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_RD_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_WR_FIFO_APP_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_WR_FIFO_MEM_PIPELINE = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && ![xstrncmp C_PI7_WR_FIFO_TYPE DISABLED] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_PM_USED = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_PI7_PM_DC_CNTR = 1, DT = INTEGER, RANGE = (0,1), ISVALID = (C_PIM7_BASETYPE != 0 && C_PM_ENABLE), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 1
 PARAMETER C_WR_TRAINING_PORT = 0, DT = INTEGER, ISVALID = (((([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ])) || ([xstrncmp C_FAMILY  virtex5 ] && [xstrncmp C_MEM_TYPE  DDR ])) && C_USE_STATIC_PHY == 0), RANGE = (0:7), ASSIGNMENT = OPTIONAL_UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_training_port, SYSLEVEL_DRC_PROC = syslevel_drc_training_port, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_ARB_BRAM_INIT_00 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000
 PARAMETER C_ARB_BRAM_INIT_01 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_bram_init, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111
 PARAMETER C_ARB_BRAM_INIT_02 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000
 PARAMETER C_ARB_BRAM_INIT_03 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111
 PARAMETER C_ARB_BRAM_INIT_04 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111010001000011000000001111111111110010000110100000000011111111111100001101000100000000111111111111011010001000
 PARAMETER C_ARB_BRAM_INIT_05 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111
 PARAMETER C_ARB_BRAM_INIT_06 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111011010001000000000001111111111110110100010000000000011111111111101101000100000000000111111111111011010001000
 PARAMETER C_ARB_BRAM_INIT_07 = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0b0000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111000000001111111111111111111111110000000011111111111111111111111100000000111111111111111111111111
 PARAMETER C_NCK_PER_CLK = 1, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 1
 PARAMETER C_TWR = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_COMPLETE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_IS_WRITE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_RAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_CAS_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_WE_N_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_RMW_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_SKIP_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_DQS_O_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_SKIP_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_RDFIFO_PUSH_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_SKIP_2_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_COL_CNT_LOAD_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_COL_CNT_ENABLE_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_PRECHARGE_ADDR10_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_ROW_COL_SEL_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_FORCE_DM_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_REPEAT4_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_RAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_CAS_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_WE_N_0_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_RAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_CAS_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_WE_N_1_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_WRFIFO_POP_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_WRDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DFI_RDDATA_EN_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_OTF_ADDR12_INDEX = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_ARB_RDMODWR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_COL_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_PI_ADDR_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_PORT_SELECT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_AP_PIPELINE1_CE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_LOAD_RDWDADDR_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_RDFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_SIZE_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_DP_WRFIFO_WHICHPORT_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_PHYIF_DUMMYREADSTART_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q0_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q1_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q2_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q3_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q4_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q5_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q6_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q7_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q8_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q9_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q10_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q11_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q12_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q13_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q14_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q15_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q16_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q17_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q18_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q19_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q20_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q21_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q22_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q23_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q24_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q25_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q26_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q27_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q28_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q29_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q30_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q31_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q32_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q33_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q34_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_CTRL_Q35_DELAY = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_SKIP_1_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 15
 PARAMETER C_SKIP_2_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 15
 PARAMETER C_SKIP_3_VALUE = 15, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 15
 PARAMETER C_SKIP_4_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 20
 PARAMETER C_SKIP_5_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 36
 PARAMETER C_SKIP_6_VALUE = 20, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 20
 PARAMETER C_SKIP_7_VALUE = 36, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 36
 PARAMETER C_B16_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_B32_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_B64_REPEAT_CNT = 0, DT = INTEGER, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0
 PARAMETER C_BASEADDR_CTRL0 = 0x000, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x000
 PARAMETER C_HIGHADDR_CTRL0 = 0x00d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x00d
 PARAMETER C_BASEADDR_CTRL1 = 0x00e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x00e
 PARAMETER C_HIGHADDR_CTRL1 = 0x017, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x017
 PARAMETER C_BASEADDR_CTRL2 = 0x018, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x018
 PARAMETER C_HIGHADDR_CTRL2 = 0x025, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x025
 PARAMETER C_BASEADDR_CTRL3 = 0x026, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x026
 PARAMETER C_HIGHADDR_CTRL3 = 0x02f, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x02f
 PARAMETER C_BASEADDR_CTRL4 = 0x030, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x030
 PARAMETER C_HIGHADDR_CTRL4 = 0x03d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x03d
 PARAMETER C_BASEADDR_CTRL5 = 0x03e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x03e
 PARAMETER C_HIGHADDR_CTRL5 = 0x047, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x047
 PARAMETER C_BASEADDR_CTRL6 = 0x048, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x048
 PARAMETER C_HIGHADDR_CTRL6 = 0x05b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x05b
 PARAMETER C_BASEADDR_CTRL7 = 0x05c, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x05c
 PARAMETER C_HIGHADDR_CTRL7 = 0x06a, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x06a
 PARAMETER C_BASEADDR_CTRL8 = 0x06b, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x06b
 PARAMETER C_HIGHADDR_CTRL8 = 0x086, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x086
 PARAMETER C_BASEADDR_CTRL9 = 0x087, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x087
 PARAMETER C_HIGHADDR_CTRL9 = 0x09d, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x09d
 PARAMETER C_BASEADDR_CTRL10 = 0x09e, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x09e
 PARAMETER C_HIGHADDR_CTRL10 = 0x0a5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0a5
 PARAMETER C_BASEADDR_CTRL11 = 0x0a6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0a6
 PARAMETER C_HIGHADDR_CTRL11 = 0x0ad, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0ad
 PARAMETER C_BASEADDR_CTRL12 = 0x0ae, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0ae
 PARAMETER C_HIGHADDR_CTRL12 = 0x0b5, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0b5
 PARAMETER C_BASEADDR_CTRL13 = 0x0b6, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0b6
 PARAMETER C_HIGHADDR_CTRL13 = 0x0bd, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0bd
 PARAMETER C_BASEADDR_CTRL14 = 0x0be, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0be
 PARAMETER C_HIGHADDR_CTRL14 = 0x0d0, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0d0
 PARAMETER C_BASEADDR_CTRL15 = 0x0d1, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0d1
 PARAMETER C_HIGHADDR_CTRL15 = 0x0d8, ADDRESSS = NONE, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 12, MPD_VALUE = 0x0d8
 PARAMETER C_CTRL_BRAM_INIT_3F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_3E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_3D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_3C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_3B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_3A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_39 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_38 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_37 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_36 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_35 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_34 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_33 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_32 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_31 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_30 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_2A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_29 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_28 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_27 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_26 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_25 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_24 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_23 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_22 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_21 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_20 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1F = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1E = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1D = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1C = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1B = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_1A = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_19 = 0x000002FC000002FC000002FC000002FC000002FD000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FD000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_18 = 0x000002FC000002FC000002FC000002FC000002FC000002F0000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002F0000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_17 = 0x000002FC000042E8000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000042E8000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_16 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_15 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_14 = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_13 = 0x000002FC000002FC000002FC000002FC000002FC000042E8000006FC000026F5, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000002FC000002FC000042E8000006FC000026F5
 PARAMETER C_CTRL_BRAM_INIT_12 = 0x000006FC000026F4000006FC000026F4000006FC000026F4000006FC000026F4, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000006FC000026F4000006FC000026F4000006FC000026F4000006FC000026F4
 PARAMETER C_CTRL_BRAM_INIT_11 = 0x000006FC000026F4000006FC000026F4000006FC000016F4000082FC000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000006FC000026F4000006FC000026F4000006FC000016F4000082FC000082FC
 PARAMETER C_CTRL_BRAM_INIT_10 = 0x000082F8000002FC000002FC000002FC000042E8000002FC000002FD000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000082F8000002FC000002FC000002FC000042E8000002FC000002FD000002FC
 PARAMETER C_CTRL_BRAM_INIT_0F = 0x000002FC000002FC0000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC0000093C000029240000093C000029240000093C00002924
 PARAMETER C_CTRL_BRAM_INIT_0E = 0x0000093C000029240000093C000029240000093C000029240000093C00002924, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000093C000029240000093C000029240000093C000029240000093C00002924
 PARAMETER C_CTRL_BRAM_INIT_0D = 0x0000093C000019240000803C000082FC000082F8000002FC000002FC000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000093C000019240000803C000082FC000082F8000002FC000002FC000002FC
 PARAMETER C_CTRL_BRAM_INIT_0C = 0x000042E8000006FC000026F5000006FC000026F4000006FC000026F4000006FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000042E8000006FC000026F5000006FC000026F4000006FC000026F4000006FC
 PARAMETER C_CTRL_BRAM_INIT_0B = 0x000016F4000082FC000082FC000082F8000002FC000002FC000002FC000042E8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000016F4000082FC000082FC000082F8000002FC000002FC000002FC000042E8
 PARAMETER C_CTRL_BRAM_INIT_0A = 0x000002FC000002FD000002FC000002FC000002FC0000093C000029240000093C, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FD000002FC000002FC000002FC0000093C000029240000093C
 PARAMETER C_CTRL_BRAM_INIT_09 = 0x000029240000093C000029240000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000029240000093C000029240000093C000019240000803C000082FC000082F8
 PARAMETER C_CTRL_BRAM_INIT_08 = 0x000002FC000002FC000002FC000042E8000002FC000006FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000042E8000002FC000006FD000016F4000082FC
 PARAMETER C_CTRL_BRAM_INIT_07 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD
 PARAMETER C_CTRL_BRAM_INIT_06 = 0x000002FC000002FC000002FC0000093C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC0000093C000019240000803C000082FC000082F8
 PARAMETER C_CTRL_BRAM_INIT_05 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC
 PARAMETER C_CTRL_BRAM_INIT_04 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD
 PARAMETER C_CTRL_BRAM_INIT_03 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8
 PARAMETER C_CTRL_BRAM_INIT_02 = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC000042E8000002FC000002FD000016F4000082FC
 PARAMETER C_CTRL_BRAM_INIT_01 = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000082FC000082F8000002FC000002FC000002FC000042E8000002FC000002FD
 PARAMETER C_CTRL_BRAM_INIT_00 = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x000002FC000002FC000002FC0000013C000019240000803C000082FC000082F8
 PARAMETER C_CTRL_BRAM_SRVAL = 0x0000002FC, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 36, MPD_VALUE = 0x0000002FC
 PARAMETER C_CTRL_BRAM_INITP_07 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000000000000000000000000000000000000000000000000000000000000000
 PARAMETER C_CTRL_BRAM_INITP_06 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000000000000000000000000000000000000000000000000000000000000000
 PARAMETER C_CTRL_BRAM_INITP_05 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000000000000000000000000000000000000000000000000000000000000000
 PARAMETER C_CTRL_BRAM_INITP_04 = 0x0000000000000000000000000000000000000000000000000000000000000000, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000000000000000000000000000000000000000000000000000000000000000
 PARAMETER C_CTRL_BRAM_INITP_03 = 0x0000000000000000000000000000000000000000000000001111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x0000000000000000000000000000000000000000000000001111111111111111
 PARAMETER C_CTRL_BRAM_INITP_02 = 0x1110000000000000000000000000000000011111111111111111111111111111, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x1110000000000000000000000000000000011111111111111111111111111111
 PARAMETER C_CTRL_BRAM_INITP_01 = 0x1110000000000000000011111111111111111111111111000000000111111011, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x1110000000000000000011111111111111111111111111000000000111111011
 PARAMETER C_CTRL_BRAM_INITP_00 = 0x1111111111110001111110111111111111111001111110111111111111111001, DT = STD_LOGIC_VECTOR, ASSIGNMENT = UPDATE, SYSLEVEL_UPDATE_VALUE_PROC = syslevel_update_ctrl_parameter, TYPE = HDL, GUI_PERMIT = , BITWIDTH = 256, MPD_VALUE = 0x1111111111110001111110111111111111111001111110111111111111111001
 PARAMETER HW_VER = 5.04.a
 BUS_INTERFACE SPLB0 = plb_v46_0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_NUM_PORTS > 0 && C_PIM0_BASETYPE == 2 && !([xstrncmp C_FAMILY  spartan6 ] && C_PORT_CONFIG == 4))
 BUS_INTERFACE MPMC_CTRL = plb_v46_0, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = (C_INCLUDE_ECC_SUPPORT == 1 || C_USE_STATIC_PHY == 1 || C_DEBUG_REG_ENABLE == 1 || C_PM_ENABLE == 1 || [xstrncmp C_MEM_TYPE  SDRAM ])
 PORT FSL0_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_Write = FSL_M_Write, DIR = I, BUS = XCL0, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_Data = FSL_M_Data, DIR = I, BUS = XCL0, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_Control = FSL_M_Control, DIR = I, BUS = XCL0, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_M_Full = FSL_M_Full, DIR = O, BUS = XCL0, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_Read = FSL_S_Read, DIR = I, BUS = XCL0, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_Data = FSL_S_Data, DIR = O, BUS = XCL0, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_Control = FSL_S_Control, DIR = O, BUS = XCL0, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL0_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL0_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL0_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL0_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL0_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL0_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL0_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL0_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL0_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL0_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL0_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB0_Rst = SPLB_Rst, DIR = I, BUS = SPLB0, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB0, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB0, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB0, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB0, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_BE = PLB_BE, DIR = I, BUS = SPLB0, VEC = [0:((C_SPLB0_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB0, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_abort = PLB_abort, DIR = I, BUS = SPLB0, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB0, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB0, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_size = PLB_size, DIR = I, BUS = SPLB0, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_type = PLB_type, DIR = I, BUS = SPLB0, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB0, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB0, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB0, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB0, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB0, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB0, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB0, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB0, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_wait = Sl_wait, DIR = O, BUS = SPLB0, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB0, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB0, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB0, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB0, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SPLB0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB0, VEC = [0:(C_SPLB0_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB0
 PORT SDMA0_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL0, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL0, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL0, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL0, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA0_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL0, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL0, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL0, VEC = [0:((C_SDMA_CTRL0_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL0, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL0, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL0, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL0, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL0, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL0, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL0, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL0_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL0, VEC = [0:(C_SDMA_CTRL0_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_Addr = Addr, DIR = I, BUS = MPMC_PIM0, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM0, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM0, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RNW = RNW, DIR = I, BUS = MPMC_PIM0, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_Size = Size, DIR = I, BUS = MPMC_PIM0, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM0, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM0, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM0, VEC = [(C_PIM0_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM0, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM0, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM0, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM0, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM0, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM0, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM0, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM0, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM0_InitDone = InitDone, DIR = O, BUS = MPMC_PIM0, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC0, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC0, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC0, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC0, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC0, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC0, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC0, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC0, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC0, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC0, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC0, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC0_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC0, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC0, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC0, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Data = cmd_data, DIR = I, BUS = VFBC0, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Write = cmd_write, DIR = I, BUS = VFBC0, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_End = cmd_end, DIR = I, BUS = VFBC0, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Full = cmd_full, DIR = O, BUS = VFBC0, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC0, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC0, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Clk = wd_clk, DIR = I, BUS = VFBC0, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Reset = wd_reset, DIR = I, BUS = VFBC0, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Write = wd_write, DIR = I, BUS = VFBC0, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC0, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Flush = wd_flush, DIR = I, BUS = VFBC0, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Data = wd_data, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Full = wd_full, DIR = O, BUS = VFBC0, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC0, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Clk = rd_clk, DIR = I, BUS = VFBC0, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Reset = rd_reset, DIR = I, BUS = VFBC0, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Read = rd_read, DIR = I, BUS = VFBC0, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC0, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Flush = rd_flush, DIR = I, BUS = VFBC0, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Data = rd_data, DIR = O, BUS = VFBC0, VEC = [C_VFBC0_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Empty = rd_empty, DIR = O, BUS = VFBC0, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC0_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC0, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_clk = cmd_clk, DIR = I, BUS = MCB0, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_en = cmd_en, DIR = I, BUS = MCB0, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_instr = cmd_instr, DIR = I, BUS = MCB0, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_bl = cmd_bl, DIR = I, BUS = MCB0, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB0, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_empty = cmd_empty, DIR = O, BUS = MCB0, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_cmd_full = cmd_full, DIR = O, BUS = MCB0, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_clk = wr_clk, DIR = I, BUS = MCB0, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_en = wr_en, DIR = I, BUS = MCB0, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_mask = wr_mask, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_data = wr_data, DIR = I, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_full = wr_full, DIR = O, BUS = MCB0, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_empty = wr_empty, DIR = O, BUS = MCB0, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_count = wr_count, DIR = O, BUS = MCB0, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_underrun = wr_underrun, DIR = O, BUS = MCB0, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_wr_error = wr_error, DIR = O, BUS = MCB0, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_clk = rd_clk, DIR = I, BUS = MCB0, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_en = rd_en, DIR = I, BUS = MCB0, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_data = rd_data, DIR = O, BUS = MCB0, VEC = [C_PIM0_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_full = rd_full, DIR = O, BUS = MCB0, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_empty = rd_empty, DIR = O, BUS = MCB0, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_count = rd_count, DIR = O, BUS = MCB0, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_overflow = rd_overflow, DIR = O, BUS = MCB0, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB0_rd_error = rd_error, DIR = O, BUS = MCB0, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_Write = FSL_M_Write, DIR = I, BUS = XCL1, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_Data = FSL_M_Data, DIR = I, BUS = XCL1, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_Control = FSL_M_Control, DIR = I, BUS = XCL1, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_M_Full = FSL_M_Full, DIR = O, BUS = XCL1, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_Read = FSL_S_Read, DIR = I, BUS = XCL1, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_Data = FSL_S_Data, DIR = O, BUS = XCL1, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_Control = FSL_S_Control, DIR = O, BUS = XCL1, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL1_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL1_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL1_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL1_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL1_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL1_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL1_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL1_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL1_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL1_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL1_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Rst = SPLB_Rst, DIR = I, BUS = SPLB1, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB1, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB1, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB1, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB1, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_BE = PLB_BE, DIR = I, BUS = SPLB1, VEC = [0:((C_SPLB1_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB1, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_abort = PLB_abort, DIR = I, BUS = SPLB1, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB1, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB1, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_size = PLB_size, DIR = I, BUS = SPLB1, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_type = PLB_type, DIR = I, BUS = SPLB1, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB1, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB1, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB1, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB1, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB1, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB1, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB1, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB1, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_wait = Sl_wait, DIR = O, BUS = SPLB1, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB1, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB1, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB1, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB1, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB1, VEC = [0:(C_SPLB1_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL1, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL1, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL1, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL1, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA1_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL1, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL1, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL1, VEC = [0:((C_SDMA_CTRL1_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL1, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL1, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL1, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL1, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL1, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL1, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL1, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL1_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL1, VEC = [0:(C_SDMA_CTRL1_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_Addr = Addr, DIR = I, BUS = MPMC_PIM1, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM1, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM1, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RNW = RNW, DIR = I, BUS = MPMC_PIM1, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_Size = Size, DIR = I, BUS = MPMC_PIM1, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM1, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM1, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM1, VEC = [(C_PIM1_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM1, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM1, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM1, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM1, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM1, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM1, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM1, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM1, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM1_InitDone = InitDone, DIR = O, BUS = MPMC_PIM1, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC1, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC1, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC1, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC1, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC1, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC1, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC1, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC1, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC1, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC1, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC1, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC1_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC1, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC1, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC1, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Data = cmd_data, DIR = I, BUS = VFBC1, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Write = cmd_write, DIR = I, BUS = VFBC1, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_End = cmd_end, DIR = I, BUS = VFBC1, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Full = cmd_full, DIR = O, BUS = VFBC1, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC1, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC1, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Clk = wd_clk, DIR = I, BUS = VFBC1, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Reset = wd_reset, DIR = I, BUS = VFBC1, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Write = wd_write, DIR = I, BUS = VFBC1, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC1, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Flush = wd_flush, DIR = I, BUS = VFBC1, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Data = wd_data, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Full = wd_full, DIR = O, BUS = VFBC1, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC1, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Clk = rd_clk, DIR = I, BUS = VFBC1, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Reset = rd_reset, DIR = I, BUS = VFBC1, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Read = rd_read, DIR = I, BUS = VFBC1, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC1, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Flush = rd_flush, DIR = I, BUS = VFBC1, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Data = rd_data, DIR = O, BUS = VFBC1, VEC = [C_VFBC1_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Empty = rd_empty, DIR = O, BUS = VFBC1, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC1_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC1, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_clk = cmd_clk, DIR = I, BUS = MCB1, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_en = cmd_en, DIR = I, BUS = MCB1, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_instr = cmd_instr, DIR = I, BUS = MCB1, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_bl = cmd_bl, DIR = I, BUS = MCB1, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB1, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_empty = cmd_empty, DIR = O, BUS = MCB1, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_cmd_full = cmd_full, DIR = O, BUS = MCB1, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_clk = wr_clk, DIR = I, BUS = MCB1, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_en = wr_en, DIR = I, BUS = MCB1, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_mask = wr_mask, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_data = wr_data, DIR = I, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_full = wr_full, DIR = O, BUS = MCB1, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_empty = wr_empty, DIR = O, BUS = MCB1, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_count = wr_count, DIR = O, BUS = MCB1, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_underrun = wr_underrun, DIR = O, BUS = MCB1, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_wr_error = wr_error, DIR = O, BUS = MCB1, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_clk = rd_clk, DIR = I, BUS = MCB1, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_en = rd_en, DIR = I, BUS = MCB1, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_data = rd_data, DIR = O, BUS = MCB1, VEC = [C_PIM1_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_full = rd_full, DIR = O, BUS = MCB1, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_empty = rd_empty, DIR = O, BUS = MCB1, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_count = rd_count, DIR = O, BUS = MCB1, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_overflow = rd_overflow, DIR = O, BUS = MCB1, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB1_rd_error = rd_error, DIR = O, BUS = MCB1, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_Write = FSL_M_Write, DIR = I, BUS = XCL2, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_Data = FSL_M_Data, DIR = I, BUS = XCL2, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_Control = FSL_M_Control, DIR = I, BUS = XCL2, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_M_Full = FSL_M_Full, DIR = O, BUS = XCL2, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_Read = FSL_S_Read, DIR = I, BUS = XCL2, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_Data = FSL_S_Data, DIR = O, BUS = XCL2, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_Control = FSL_S_Control, DIR = O, BUS = XCL2, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL2_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL2_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL2_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL2_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL2_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL2_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL2_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL2_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL2_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL2_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL2_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Rst = SPLB_Rst, DIR = I, BUS = SPLB2, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB2, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB2, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB2, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB2, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_BE = PLB_BE, DIR = I, BUS = SPLB2, VEC = [0:((C_SPLB2_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB2, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB2, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB2, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_abort = PLB_abort, DIR = I, BUS = SPLB2, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB2, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB2, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_size = PLB_size, DIR = I, BUS = SPLB2, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_type = PLB_type, DIR = I, BUS = SPLB2, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB2, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB2, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB2, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB2, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB2, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB2, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB2, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB2, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB2, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB2, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB2, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_wait = Sl_wait, DIR = O, BUS = SPLB2, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB2, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB2, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB2, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB2, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB2, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB2, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB2, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB2, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB2, VEC = [0:(C_SPLB2_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL2, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL2, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL2, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL2, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA2_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL2, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL2, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL2, VEC = [0:((C_SDMA_CTRL2_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL2, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL2, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL2, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL2, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL2, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL2, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL2, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL2_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL2, VEC = [0:(C_SDMA_CTRL2_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_Addr = Addr, DIR = I, BUS = MPMC_PIM2, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM2, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM2, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RNW = RNW, DIR = I, BUS = MPMC_PIM2, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_Size = Size, DIR = I, BUS = MPMC_PIM2, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM2, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM2, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM2, VEC = [(C_PIM2_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM2, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM2, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM2, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM2, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM2, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM2, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM2, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM2, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM2_InitDone = InitDone, DIR = O, BUS = MPMC_PIM2, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC2, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC2, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC2, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC2, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC2, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC2, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC2, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC2, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC2, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC2, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC2, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC2_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC2, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC2, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC2, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Data = cmd_data, DIR = I, BUS = VFBC2, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Write = cmd_write, DIR = I, BUS = VFBC2, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_End = cmd_end, DIR = I, BUS = VFBC2, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Full = cmd_full, DIR = O, BUS = VFBC2, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC2, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC2, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Clk = wd_clk, DIR = I, BUS = VFBC2, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Reset = wd_reset, DIR = I, BUS = VFBC2, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Write = wd_write, DIR = I, BUS = VFBC2, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC2, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Flush = wd_flush, DIR = I, BUS = VFBC2, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Data = wd_data, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Full = wd_full, DIR = O, BUS = VFBC2, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC2, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Clk = rd_clk, DIR = I, BUS = VFBC2, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Reset = rd_reset, DIR = I, BUS = VFBC2, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Read = rd_read, DIR = I, BUS = VFBC2, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC2, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Flush = rd_flush, DIR = I, BUS = VFBC2, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Data = rd_data, DIR = O, BUS = VFBC2, VEC = [C_VFBC2_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Empty = rd_empty, DIR = O, BUS = VFBC2, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC2_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC2, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_clk = cmd_clk, DIR = I, BUS = MCB2, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_en = cmd_en, DIR = I, BUS = MCB2, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_instr = cmd_instr, DIR = I, BUS = MCB2, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_bl = cmd_bl, DIR = I, BUS = MCB2, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB2, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_empty = cmd_empty, DIR = O, BUS = MCB2, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_cmd_full = cmd_full, DIR = O, BUS = MCB2, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_clk = wr_clk, DIR = I, BUS = MCB2, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_en = wr_en, DIR = I, BUS = MCB2, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_mask = wr_mask, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_data = wr_data, DIR = I, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_full = wr_full, DIR = O, BUS = MCB2, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_empty = wr_empty, DIR = O, BUS = MCB2, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_count = wr_count, DIR = O, BUS = MCB2, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_underrun = wr_underrun, DIR = O, BUS = MCB2, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_wr_error = wr_error, DIR = O, BUS = MCB2, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_clk = rd_clk, DIR = I, BUS = MCB2, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_en = rd_en, DIR = I, BUS = MCB2, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_data = rd_data, DIR = O, BUS = MCB2, VEC = [C_PIM2_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_full = rd_full, DIR = O, BUS = MCB2, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_empty = rd_empty, DIR = O, BUS = MCB2, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_count = rd_count, DIR = O, BUS = MCB2, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_overflow = rd_overflow, DIR = O, BUS = MCB2, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB2_rd_error = rd_error, DIR = O, BUS = MCB2, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_Write = FSL_M_Write, DIR = I, BUS = XCL3, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_Data = FSL_M_Data, DIR = I, BUS = XCL3, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_Control = FSL_M_Control, DIR = I, BUS = XCL3, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_M_Full = FSL_M_Full, DIR = O, BUS = XCL3, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_Read = FSL_S_Read, DIR = I, BUS = XCL3, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_Data = FSL_S_Data, DIR = O, BUS = XCL3, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_Control = FSL_S_Control, DIR = O, BUS = XCL3, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL3_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL3_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL3_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL3_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL3_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL3_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL3_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL3_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL3_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL3_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL3_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Rst = SPLB_Rst, DIR = I, BUS = SPLB3, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB3, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB3, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB3, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB3, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_BE = PLB_BE, DIR = I, BUS = SPLB3, VEC = [0:((C_SPLB3_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB3, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB3, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB3, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_abort = PLB_abort, DIR = I, BUS = SPLB3, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB3, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB3, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_size = PLB_size, DIR = I, BUS = SPLB3, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_type = PLB_type, DIR = I, BUS = SPLB3, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB3, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB3, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB3, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB3, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB3, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB3, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB3, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB3, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB3, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB3, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB3, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_wait = Sl_wait, DIR = O, BUS = SPLB3, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB3, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB3, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB3, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB3, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB3, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB3, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB3, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB3, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB3, VEC = [0:(C_SPLB3_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL3, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL3, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL3, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL3, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA3_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL3, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL3, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL3, VEC = [0:((C_SDMA_CTRL3_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL3, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL3, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL3, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL3, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL3, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL3, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL3, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL3_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL3, VEC = [0:(C_SDMA_CTRL3_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_Addr = Addr, DIR = I, BUS = MPMC_PIM3, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM3, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM3, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RNW = RNW, DIR = I, BUS = MPMC_PIM3, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_Size = Size, DIR = I, BUS = MPMC_PIM3, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM3, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM3, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM3, VEC = [(C_PIM3_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM3, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM3, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM3, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM3, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM3, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM3, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM3, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM3, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM3_InitDone = InitDone, DIR = O, BUS = MPMC_PIM3, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC3, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC3, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC3, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC3, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC3, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC3, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC3, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC3, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC3, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC3, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC3, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC3_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC3, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC3, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC3, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Data = cmd_data, DIR = I, BUS = VFBC3, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Write = cmd_write, DIR = I, BUS = VFBC3, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_End = cmd_end, DIR = I, BUS = VFBC3, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Full = cmd_full, DIR = O, BUS = VFBC3, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC3, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC3, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Clk = wd_clk, DIR = I, BUS = VFBC3, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Reset = wd_reset, DIR = I, BUS = VFBC3, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Write = wd_write, DIR = I, BUS = VFBC3, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC3, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Flush = wd_flush, DIR = I, BUS = VFBC3, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Data = wd_data, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Full = wd_full, DIR = O, BUS = VFBC3, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC3, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Clk = rd_clk, DIR = I, BUS = VFBC3, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Reset = rd_reset, DIR = I, BUS = VFBC3, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Read = rd_read, DIR = I, BUS = VFBC3, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC3, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Flush = rd_flush, DIR = I, BUS = VFBC3, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Data = rd_data, DIR = O, BUS = VFBC3, VEC = [C_VFBC3_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Empty = rd_empty, DIR = O, BUS = VFBC3, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC3_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC3, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_clk = cmd_clk, DIR = I, BUS = MCB3, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_en = cmd_en, DIR = I, BUS = MCB3, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_instr = cmd_instr, DIR = I, BUS = MCB3, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_bl = cmd_bl, DIR = I, BUS = MCB3, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB3, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_empty = cmd_empty, DIR = O, BUS = MCB3, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_cmd_full = cmd_full, DIR = O, BUS = MCB3, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_clk = wr_clk, DIR = I, BUS = MCB3, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_en = wr_en, DIR = I, BUS = MCB3, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_mask = wr_mask, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_data = wr_data, DIR = I, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_full = wr_full, DIR = O, BUS = MCB3, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_empty = wr_empty, DIR = O, BUS = MCB3, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_count = wr_count, DIR = O, BUS = MCB3, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_underrun = wr_underrun, DIR = O, BUS = MCB3, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_wr_error = wr_error, DIR = O, BUS = MCB3, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_clk = rd_clk, DIR = I, BUS = MCB3, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_en = rd_en, DIR = I, BUS = MCB3, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_data = rd_data, DIR = O, BUS = MCB3, VEC = [C_PIM3_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_full = rd_full, DIR = O, BUS = MCB3, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_empty = rd_empty, DIR = O, BUS = MCB3, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_count = rd_count, DIR = O, BUS = MCB3, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_overflow = rd_overflow, DIR = O, BUS = MCB3, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB3_rd_error = rd_error, DIR = O, BUS = MCB3, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_Write = FSL_M_Write, DIR = I, BUS = XCL4, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_Data = FSL_M_Data, DIR = I, BUS = XCL4, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_Control = FSL_M_Control, DIR = I, BUS = XCL4, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_M_Full = FSL_M_Full, DIR = O, BUS = XCL4, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_Read = FSL_S_Read, DIR = I, BUS = XCL4, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_Data = FSL_S_Data, DIR = O, BUS = XCL4, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_Control = FSL_S_Control, DIR = O, BUS = XCL4, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL4_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL4_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL4_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL4_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL4_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL4_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL4_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL4_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL4_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL4_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL4_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Rst = SPLB_Rst, DIR = I, BUS = SPLB4, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB4, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB4, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB4, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB4, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_BE = PLB_BE, DIR = I, BUS = SPLB4, VEC = [0:((C_SPLB4_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB4, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB4, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB4, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_abort = PLB_abort, DIR = I, BUS = SPLB4, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB4, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB4, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_size = PLB_size, DIR = I, BUS = SPLB4, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_type = PLB_type, DIR = I, BUS = SPLB4, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB4, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB4, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB4, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB4, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB4, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB4, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB4, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB4, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB4, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB4, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB4, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_wait = Sl_wait, DIR = O, BUS = SPLB4, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB4, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB4, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB4, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB4, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB4, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB4, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB4, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB4, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB4, VEC = [0:(C_SPLB4_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL4, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL4, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL4, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL4, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA4_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL4, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL4, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL4, VEC = [0:((C_SDMA_CTRL4_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL4, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL4, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL4, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL4, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL4, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL4, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL4, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL4_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL4, VEC = [0:(C_SDMA_CTRL4_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_Addr = Addr, DIR = I, BUS = MPMC_PIM4, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM4, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM4, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RNW = RNW, DIR = I, BUS = MPMC_PIM4, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_Size = Size, DIR = I, BUS = MPMC_PIM4, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM4, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM4, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM4, VEC = [(C_PIM4_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM4, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM4, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM4, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM4, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM4, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM4, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM4, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM4, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM4_InitDone = InitDone, DIR = O, BUS = MPMC_PIM4, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC4, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC4, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC4, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC4, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC4, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC4, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC4, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC4, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC4, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC4, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC4, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC4_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC4, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC4, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC4, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Data = cmd_data, DIR = I, BUS = VFBC4, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Write = cmd_write, DIR = I, BUS = VFBC4, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_End = cmd_end, DIR = I, BUS = VFBC4, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Full = cmd_full, DIR = O, BUS = VFBC4, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC4, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC4, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Clk = wd_clk, DIR = I, BUS = VFBC4, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Reset = wd_reset, DIR = I, BUS = VFBC4, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Write = wd_write, DIR = I, BUS = VFBC4, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC4, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Flush = wd_flush, DIR = I, BUS = VFBC4, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Data = wd_data, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Full = wd_full, DIR = O, BUS = VFBC4, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC4, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Clk = rd_clk, DIR = I, BUS = VFBC4, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Reset = rd_reset, DIR = I, BUS = VFBC4, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Read = rd_read, DIR = I, BUS = VFBC4, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC4, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Flush = rd_flush, DIR = I, BUS = VFBC4, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Data = rd_data, DIR = O, BUS = VFBC4, VEC = [C_VFBC4_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Empty = rd_empty, DIR = O, BUS = VFBC4, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC4_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC4, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_clk = cmd_clk, DIR = I, BUS = MCB4, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_en = cmd_en, DIR = I, BUS = MCB4, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_instr = cmd_instr, DIR = I, BUS = MCB4, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_bl = cmd_bl, DIR = I, BUS = MCB4, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB4, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_empty = cmd_empty, DIR = O, BUS = MCB4, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_cmd_full = cmd_full, DIR = O, BUS = MCB4, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_clk = wr_clk, DIR = I, BUS = MCB4, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_en = wr_en, DIR = I, BUS = MCB4, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_mask = wr_mask, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_data = wr_data, DIR = I, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_full = wr_full, DIR = O, BUS = MCB4, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_empty = wr_empty, DIR = O, BUS = MCB4, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_count = wr_count, DIR = O, BUS = MCB4, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_underrun = wr_underrun, DIR = O, BUS = MCB4, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_wr_error = wr_error, DIR = O, BUS = MCB4, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_clk = rd_clk, DIR = I, BUS = MCB4, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_en = rd_en, DIR = I, BUS = MCB4, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_data = rd_data, DIR = O, BUS = MCB4, VEC = [C_PIM4_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_full = rd_full, DIR = O, BUS = MCB4, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_empty = rd_empty, DIR = O, BUS = MCB4, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_count = rd_count, DIR = O, BUS = MCB4, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_overflow = rd_overflow, DIR = O, BUS = MCB4, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB4_rd_error = rd_error, DIR = O, BUS = MCB4, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_Write = FSL_M_Write, DIR = I, BUS = XCL5, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_Data = FSL_M_Data, DIR = I, BUS = XCL5, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_Control = FSL_M_Control, DIR = I, BUS = XCL5, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_M_Full = FSL_M_Full, DIR = O, BUS = XCL5, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_Read = FSL_S_Read, DIR = I, BUS = XCL5, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_Data = FSL_S_Data, DIR = O, BUS = XCL5, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_Control = FSL_S_Control, DIR = O, BUS = XCL5, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL5_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL5_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL5_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL5_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL5_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL5_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL5_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL5_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL5_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL5_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL5_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Rst = SPLB_Rst, DIR = I, BUS = SPLB5, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB5, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB5, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB5, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB5, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_BE = PLB_BE, DIR = I, BUS = SPLB5, VEC = [0:((C_SPLB5_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB5, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB5, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB5, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_abort = PLB_abort, DIR = I, BUS = SPLB5, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB5, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB5, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_size = PLB_size, DIR = I, BUS = SPLB5, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_type = PLB_type, DIR = I, BUS = SPLB5, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB5, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB5, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB5, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB5, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB5, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB5, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB5, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB5, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB5, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB5, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB5, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_wait = Sl_wait, DIR = O, BUS = SPLB5, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB5, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB5, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB5, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB5, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB5, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB5, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB5, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB5, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB5, VEC = [0:(C_SPLB5_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL5, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL5, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL5, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL5, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA5_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL5, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL5, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL5, VEC = [0:((C_SDMA_CTRL5_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL5, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL5, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL5, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL5, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL5, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL5, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL5, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL5_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL5, VEC = [0:(C_SDMA_CTRL5_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_Addr = Addr, DIR = I, BUS = MPMC_PIM5, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM5, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM5, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RNW = RNW, DIR = I, BUS = MPMC_PIM5, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_Size = Size, DIR = I, BUS = MPMC_PIM5, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM5, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM5, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM5, VEC = [(C_PIM5_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM5, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM5, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM5, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM5, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM5, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM5, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM5, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM5, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM5_InitDone = InitDone, DIR = O, BUS = MPMC_PIM5, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC5, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC5, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC5, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC5, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC5, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC5, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC5, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC5, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC5, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC5, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC5, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC5_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC5, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC5, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC5, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Data = cmd_data, DIR = I, BUS = VFBC5, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Write = cmd_write, DIR = I, BUS = VFBC5, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_End = cmd_end, DIR = I, BUS = VFBC5, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Full = cmd_full, DIR = O, BUS = VFBC5, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC5, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC5, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Clk = wd_clk, DIR = I, BUS = VFBC5, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Reset = wd_reset, DIR = I, BUS = VFBC5, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Write = wd_write, DIR = I, BUS = VFBC5, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC5, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Flush = wd_flush, DIR = I, BUS = VFBC5, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Data = wd_data, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Full = wd_full, DIR = O, BUS = VFBC5, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC5, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Clk = rd_clk, DIR = I, BUS = VFBC5, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Reset = rd_reset, DIR = I, BUS = VFBC5, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Read = rd_read, DIR = I, BUS = VFBC5, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC5, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Flush = rd_flush, DIR = I, BUS = VFBC5, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Data = rd_data, DIR = O, BUS = VFBC5, VEC = [C_VFBC5_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Empty = rd_empty, DIR = O, BUS = VFBC5, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC5_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC5, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_clk = cmd_clk, DIR = I, BUS = MCB5, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_en = cmd_en, DIR = I, BUS = MCB5, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_instr = cmd_instr, DIR = I, BUS = MCB5, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_bl = cmd_bl, DIR = I, BUS = MCB5, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB5, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_empty = cmd_empty, DIR = O, BUS = MCB5, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_cmd_full = cmd_full, DIR = O, BUS = MCB5, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_clk = wr_clk, DIR = I, BUS = MCB5, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_en = wr_en, DIR = I, BUS = MCB5, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_mask = wr_mask, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_data = wr_data, DIR = I, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_full = wr_full, DIR = O, BUS = MCB5, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_empty = wr_empty, DIR = O, BUS = MCB5, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_count = wr_count, DIR = O, BUS = MCB5, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_underrun = wr_underrun, DIR = O, BUS = MCB5, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_wr_error = wr_error, DIR = O, BUS = MCB5, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_clk = rd_clk, DIR = I, BUS = MCB5, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_en = rd_en, DIR = I, BUS = MCB5, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_data = rd_data, DIR = O, BUS = MCB5, VEC = [C_PIM5_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_full = rd_full, DIR = O, BUS = MCB5, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_empty = rd_empty, DIR = O, BUS = MCB5, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_count = rd_count, DIR = O, BUS = MCB5, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_overflow = rd_overflow, DIR = O, BUS = MCB5, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB5_rd_error = rd_error, DIR = O, BUS = MCB5, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_Write = FSL_M_Write, DIR = I, BUS = XCL6, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_Data = FSL_M_Data, DIR = I, BUS = XCL6, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_Control = FSL_M_Control, DIR = I, BUS = XCL6, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_M_Full = FSL_M_Full, DIR = O, BUS = XCL6, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_Read = FSL_S_Read, DIR = I, BUS = XCL6, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_Data = FSL_S_Data, DIR = O, BUS = XCL6, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_Control = FSL_S_Control, DIR = O, BUS = XCL6, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL6_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL6_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL6_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL6_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL6_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL6_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL6_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL6_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL6_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL6_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL6_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Rst = SPLB_Rst, DIR = I, BUS = SPLB6, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB6, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB6, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB6, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB6, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_BE = PLB_BE, DIR = I, BUS = SPLB6, VEC = [0:((C_SPLB6_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB6, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB6, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB6, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_abort = PLB_abort, DIR = I, BUS = SPLB6, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB6, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB6, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_size = PLB_size, DIR = I, BUS = SPLB6, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_type = PLB_type, DIR = I, BUS = SPLB6, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB6, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB6, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB6, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB6, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB6, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB6, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB6, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB6, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB6, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB6, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB6, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_wait = Sl_wait, DIR = O, BUS = SPLB6, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB6, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB6, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB6, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB6, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB6, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB6, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB6, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB6, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB6, VEC = [0:(C_SPLB6_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL6, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL6, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL6, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL6, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA6_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL6, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL6, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL6, VEC = [0:((C_SDMA_CTRL6_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL6, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL6, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL6, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL6, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL6, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL6, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL6, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL6_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL6, VEC = [0:(C_SDMA_CTRL6_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_Addr = Addr, DIR = I, BUS = MPMC_PIM6, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM6, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM6, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RNW = RNW, DIR = I, BUS = MPMC_PIM6, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_Size = Size, DIR = I, BUS = MPMC_PIM6, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM6, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM6, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM6, VEC = [(C_PIM6_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM6, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM6, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM6, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM6, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM6, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM6, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM6, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM6, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM6_InitDone = InitDone, DIR = O, BUS = MPMC_PIM6, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC6, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC6, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC6, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC6, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC6, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC6, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC6, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC6, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC6, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC6, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC6, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC6_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC6, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC6, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC6, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Data = cmd_data, DIR = I, BUS = VFBC6, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Write = cmd_write, DIR = I, BUS = VFBC6, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_End = cmd_end, DIR = I, BUS = VFBC6, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Full = cmd_full, DIR = O, BUS = VFBC6, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC6, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC6, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Clk = wd_clk, DIR = I, BUS = VFBC6, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Reset = wd_reset, DIR = I, BUS = VFBC6, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Write = wd_write, DIR = I, BUS = VFBC6, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC6, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Flush = wd_flush, DIR = I, BUS = VFBC6, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Data = wd_data, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Full = wd_full, DIR = O, BUS = VFBC6, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC6, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Clk = rd_clk, DIR = I, BUS = VFBC6, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Reset = rd_reset, DIR = I, BUS = VFBC6, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Read = rd_read, DIR = I, BUS = VFBC6, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC6, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Flush = rd_flush, DIR = I, BUS = VFBC6, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Data = rd_data, DIR = O, BUS = VFBC6, VEC = [C_VFBC6_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Empty = rd_empty, DIR = O, BUS = VFBC6, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC6_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC6, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_clk = cmd_clk, DIR = I, BUS = MCB6, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_en = cmd_en, DIR = I, BUS = MCB6, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_instr = cmd_instr, DIR = I, BUS = MCB6, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_bl = cmd_bl, DIR = I, BUS = MCB6, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB6, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_empty = cmd_empty, DIR = O, BUS = MCB6, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_cmd_full = cmd_full, DIR = O, BUS = MCB6, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_clk = wr_clk, DIR = I, BUS = MCB6, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_en = wr_en, DIR = I, BUS = MCB6, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_mask = wr_mask, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_data = wr_data, DIR = I, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_full = wr_full, DIR = O, BUS = MCB6, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_empty = wr_empty, DIR = O, BUS = MCB6, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_count = wr_count, DIR = O, BUS = MCB6, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_underrun = wr_underrun, DIR = O, BUS = MCB6, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_wr_error = wr_error, DIR = O, BUS = MCB6, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_clk = rd_clk, DIR = I, BUS = MCB6, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_en = rd_en, DIR = I, BUS = MCB6, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_data = rd_data, DIR = O, BUS = MCB6, VEC = [C_PIM6_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_full = rd_full, DIR = O, BUS = MCB6, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_empty = rd_empty, DIR = O, BUS = MCB6, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_count = rd_count, DIR = O, BUS = MCB6, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_overflow = rd_overflow, DIR = O, BUS = MCB6, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB6_rd_error = rd_error, DIR = O, BUS = MCB6, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_Write = FSL_M_Write, DIR = I, BUS = XCL7, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_Data = FSL_M_Data, DIR = I, BUS = XCL7, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_Control = FSL_M_Control, DIR = I, BUS = XCL7, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_M_Full = FSL_M_Full, DIR = O, BUS = XCL7, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_Read = FSL_S_Read, DIR = I, BUS = XCL7, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_Data = FSL_S_Data, DIR = O, BUS = XCL7, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_Control = FSL_S_Control, DIR = O, BUS = XCL7, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_M_Clk = FSL_M_Clk, DIR = I, BUS = XCL7_B, SIGIS = CLK, INITIALVAL = VCC, DEFAULT = FSL_M_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_M_Write = FSL_M_Write, DIR = I, BUS = XCL7_B, DEFAULT = FSL_M_Write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_M_Data = FSL_M_Data, DIR = I, BUS = XCL7_B, VEC = [0:31], DEFAULT = FSL_M_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_M_Control = FSL_M_Control, DIR = I, BUS = XCL7_B, DEFAULT = FSL_M_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_M_Full = FSL_M_Full, DIR = O, BUS = XCL7_B, DEFAULT = FSL_M_Full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_S_Clk = FSL_S_Clk, DIR = I, BUS = XCL7_B, DEFAULT = FSL_S_Clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_S_Read = FSL_S_Read, DIR = I, BUS = XCL7_B, DEFAULT = FSL_S_Read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_S_Data = FSL_S_Data, DIR = O, BUS = XCL7_B, VEC = [0:31], DEFAULT = FSL_S_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_S_Control = FSL_S_Control, DIR = O, BUS = XCL7_B, DEFAULT = FSL_S_Control, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT FSL7_B_S_Exists = FSL_S_Exists, DIR = O, BUS = XCL7_B, DEFAULT = FSL_S_Exists, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Rst = SPLB_Rst, DIR = I, BUS = SPLB7, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_ABus = PLB_ABus, DIR = I, BUS = SPLB7, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB7, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB7, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_masterID = PLB_masterID, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB7, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_BE = PLB_BE, DIR = I, BUS = SPLB7, VEC = [0:((C_SPLB7_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_UABus = PLB_UABus, DIR = I, BUS = SPLB7, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB7, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB7, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_abort = PLB_abort, DIR = I, BUS = SPLB7, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB7, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_MSize = PLB_MSize, DIR = I, BUS = SPLB7, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_size = PLB_size, DIR = I, BUS = SPLB7, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_type = PLB_type, DIR = I, BUS = SPLB7, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB7, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB7, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SPLB7, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB7, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SPLB7, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SPLB7, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SPLB7, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB7, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB7, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB7, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_SSize = Sl_SSize, DIR = O, BUS = SPLB7, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_wait = Sl_wait, DIR = O, BUS = SPLB7, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB7, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB7, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB7, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB7, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SPLB7, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB7, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB7, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB7, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SPLB7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SPLB7, VEC = [0:(C_SPLB7_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RstOut = LL_RST_ACK, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_RST_ACK, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_D = LL_Tx_Data, DIR = O, BUS = SDMA_LL7, VEC = [0:31], DEFAULT = LL_Tx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_Rem = LL_Tx_Rem, DIR = O, BUS = SDMA_LL7, VEC = [0:3], DEFAULT = LL_Tx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_SOF = LL_Tx_SOF_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Tx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_EOF = LL_Tx_EOF_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Tx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_SOP = LL_Tx_SOP_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Tx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_EOP = LL_Tx_EOP_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Tx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_Src_Rdy = LL_Tx_SrcRdy_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Tx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_TX_Dst_Rdy = LL_Tx_DstRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Tx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_D = LL_Rx_Data, DIR = I, BUS = SDMA_LL7, INITIALVAL = GND, VEC = [0:31], DEFAULT = LL_Rx_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_Rem = LL_Rx_Rem, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, VEC = [0:3], DEFAULT = LL_Rx_Rem, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_SOF = LL_Rx_SOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Rx_SOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_EOF = LL_Rx_EOF_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Rx_EOF_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_SOP = LL_Rx_SOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Rx_SOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_EOP = LL_Rx_EOP_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Rx_EOP_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_Src_Rdy = LL_Rx_SrcRdy_n, DIR = I, BUS = SDMA_LL7, INITIALVAL = VCC, DEFAULT = LL_Rx_SrcRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA7_RX_Dst_Rdy = LL_Rx_DstRdy_n, DIR = O, BUS = SDMA_LL7, DEFAULT = LL_Rx_DstRdy_n, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Rst = SPLB_Rst, DIR = I, BUS = SDMA_CTRL7, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_ABus = PLB_ABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_PAValid = PLB_PAValid, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_SAValid = PLB_SAValid, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_masterID = PLB_masterID, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_RNW = PLB_RNW, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_BE = PLB_BE, DIR = I, BUS = SDMA_CTRL7, VEC = [0:((C_SDMA_CTRL7_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_UABus = PLB_UABus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_abort = PLB_abort, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_busLock = PLB_busLock, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_MSize = PLB_MSize, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_size = PLB_size, DIR = I, BUS = SDMA_CTRL7, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_type = PLB_type, DIR = I, BUS = SDMA_CTRL7, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_lockErr = PLB_lockErr, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_reqPri = PLB_reqPri, DIR = I, BUS = SDMA_CTRL7, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = SDMA_CTRL7, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SDMA_CTRL7, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_addrAck = Sl_addrAck, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_SSize = Sl_SSize, DIR = O, BUS = SDMA_CTRL7, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_wait = Sl_wait, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_wrComp = Sl_wrComp, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rdComp = Sl_rdComp, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SDMA_CTRL7, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_MBusy = Sl_MBusy, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT SDMA_CTRL7_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = SDMA_CTRL7, VEC = [0:(C_SDMA_CTRL7_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_Addr = Addr, DIR = I, BUS = MPMC_PIM7, VEC = [31:0], DEFAULT = Addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_AddrReq = AddrReq, DIR = I, BUS = MPMC_PIM7, DEFAULT = AddrReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_AddrAck = AddrAck, DIR = O, BUS = MPMC_PIM7, DEFAULT = AddrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RNW = RNW, DIR = I, BUS = MPMC_PIM7, DEFAULT = RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_Size = Size, DIR = I, BUS = MPMC_PIM7, VEC = [3:0], DEFAULT = Size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdModWr = RdModWr, DIR = I, BUS = MPMC_PIM7, DEFAULT = RdModWr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_Data = WrFIFO_Data, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0], DEFAULT = WrFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_BE = WrFIFO_BE, DIR = I, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH/8-1):0], DEFAULT = WrFIFO_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_Push = WrFIFO_Push, DIR = I, BUS = MPMC_PIM7, DEFAULT = WrFIFO_Push, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_Data = RdFIFO_Data, DIR = O, BUS = MPMC_PIM7, VEC = [(C_PIM7_DATA_WIDTH-1):0], DEFAULT = RdFIFO_Data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_Pop = RdFIFO_Pop, DIR = I, BUS = MPMC_PIM7, DEFAULT = RdFIFO_Pop, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_RdWdAddr = RdFIFO_RdWdAddr, DIR = O, BUS = MPMC_PIM7, VEC = [3:0], DEFAULT = RdFIFO_RdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_Empty = WrFIFO_Empty, DIR = O, BUS = MPMC_PIM7, DEFAULT = WrFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_AlmostFull = WrFIFO_AlmostFull, DIR = O, BUS = MPMC_PIM7, DEFAULT = WrFIFO_AlmostFull, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_WrFIFO_Flush = WrFIFO_Flush, DIR = I, BUS = MPMC_PIM7, DEFAULT = WrFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_Empty = RdFIFO_Empty, DIR = O, BUS = MPMC_PIM7, DEFAULT = RdFIFO_Empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_Flush = RdFIFO_Flush, DIR = I, BUS = MPMC_PIM7, DEFAULT = RdFIFO_Flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_RdFIFO_Latency = RDFIFO_Latency, DIR = O, BUS = MPMC_PIM7, VEC = [1:0], DEFAULT = RDFIFO_Latency, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PIM7_InitDone = InitDone, DIR = O, BUS = MPMC_PIM7, DEFAULT = InitDone, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCReadNotWrite = MIMCREADNOTWRITE, DIR = I, BUS = PPC440MC7, DEFAULT = MIMCREADNOTWRITE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCAddress = MIMCADDRESS, DIR = I, BUS = PPC440MC7, VEC = [0:35], DEFAULT = MIMCADDRESS, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCAddressValid = MIMCADDRESSVALID, DIR = I, BUS = PPC440MC7, DEFAULT = MIMCADDRESSVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCWriteData = MIMCWRITEDATA, DIR = I, BUS = PPC440MC7, VEC = [0:127], DEFAULT = MIMCWRITEDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCWriteDataValid = MIMCWRITEDATAVALID, DIR = I, BUS = PPC440MC7, DEFAULT = MIMCWRITEDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCByteEnable = MIMCBYTEENABLE, DIR = I, BUS = PPC440MC7, VEC = [0:15], DEFAULT = MIMCBYTEENABLE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCBankConflict = MIMCBANKCONFLICT, DIR = I, BUS = PPC440MC7, DEFAULT = MIMCBANKCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MIMCRowConflict = MIMCROWCONFLICT, DIR = I, BUS = PPC440MC7, DEFAULT = MIMCROWCONFLICT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MCMIReadData = MCMIREADDATA, DIR = O, BUS = PPC440MC7, VEC = [0:127], DEFAULT = MCMIREADDATA, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MCMIReadDataValid = MCMIREADDATAVALID, DIR = O, BUS = PPC440MC7, DEFAULT = MCMIREADDATAVALID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MCMIReadDataErr = MCMIREADDATAERR, DIR = O, BUS = PPC440MC7, DEFAULT = MCMIREADDATAERR, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT PPC440MC7_MCMIAddrReadyToAccept = MCMIADDRREADYTOACCEPT, DIR = O, BUS = PPC440MC7, DEFAULT = MCMIADDRREADYTOACCEPT, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Clk = cmd_clk, DIR = I, BUS = VFBC7, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Reset = cmd_reset, DIR = I, BUS = VFBC7, DEFAULT = cmd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Data = cmd_data, DIR = I, BUS = VFBC7, VEC = [31:0], DEFAULT = cmd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Write = cmd_write, DIR = I, BUS = VFBC7, DEFAULT = cmd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_End = cmd_end, DIR = I, BUS = VFBC7, DEFAULT = cmd_end, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Full = cmd_full, DIR = O, BUS = VFBC7, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Almost_Full = cmd_almost_full, DIR = O, BUS = VFBC7, DEFAULT = cmd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Cmd_Idle = cmd_idle, DIR = O, BUS = VFBC7, DEFAULT = cmd_idle, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Clk = wd_clk, DIR = I, BUS = VFBC7, DEFAULT = wd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Reset = wd_reset, DIR = I, BUS = VFBC7, DEFAULT = wd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Write = wd_write, DIR = I, BUS = VFBC7, DEFAULT = wd_write, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_End_Burst = wd_end_burst, DIR = I, BUS = VFBC7, DEFAULT = wd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Flush = wd_flush, DIR = I, BUS = VFBC7, DEFAULT = wd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Data = wd_data, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0], DEFAULT = wd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Data_BE = wd_data_be, DIR = I, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH/8-1:0], DEFAULT = wd_data_be, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Full = wd_full, DIR = O, BUS = VFBC7, DEFAULT = wd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Wd_Almost_Full = wd_almost_full, DIR = O, BUS = VFBC7, DEFAULT = wd_almost_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Clk = rd_clk, DIR = I, BUS = VFBC7, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Reset = rd_reset, DIR = I, BUS = VFBC7, DEFAULT = rd_reset, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Read = rd_read, DIR = I, BUS = VFBC7, DEFAULT = rd_read, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_End_Burst = rd_end_burst, DIR = I, BUS = VFBC7, DEFAULT = rd_end_burst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Flush = rd_flush, DIR = I, BUS = VFBC7, DEFAULT = rd_flush, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Data = rd_data, DIR = O, BUS = VFBC7, VEC = [C_VFBC7_RDWD_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Empty = rd_empty, DIR = O, BUS = VFBC7, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT VFBC7_Rd_Almost_Empty = rd_almost_empty, DIR = O, BUS = VFBC7, DEFAULT = rd_almost_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_clk = cmd_clk, DIR = I, BUS = MCB7, DEFAULT = cmd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_en = cmd_en, DIR = I, BUS = MCB7, DEFAULT = cmd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_instr = cmd_instr, DIR = I, BUS = MCB7, VEC = [2:0], DEFAULT = cmd_instr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_bl = cmd_bl, DIR = I, BUS = MCB7, VEC = [5:0], DEFAULT = cmd_bl, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_byte_addr = cmd_byte_addr, DIR = I, BUS = MCB7, VEC = [29:0], DEFAULT = cmd_byte_addr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_empty = cmd_empty, DIR = O, BUS = MCB7, DEFAULT = cmd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_cmd_full = cmd_full, DIR = O, BUS = MCB7, DEFAULT = cmd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_clk = wr_clk, DIR = I, BUS = MCB7, DEFAULT = wr_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_en = wr_en, DIR = I, BUS = MCB7, DEFAULT = wr_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_mask = wr_mask, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH/8-1:0], DEFAULT = wr_mask, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_data = wr_data, DIR = I, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0], DEFAULT = wr_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_full = wr_full, DIR = O, BUS = MCB7, DEFAULT = wr_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_empty = wr_empty, DIR = O, BUS = MCB7, DEFAULT = wr_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_count = wr_count, DIR = O, BUS = MCB7, VEC = [6:0], DEFAULT = wr_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_underrun = wr_underrun, DIR = O, BUS = MCB7, DEFAULT = wr_underrun, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_wr_error = wr_error, DIR = O, BUS = MCB7, DEFAULT = wr_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_clk = rd_clk, DIR = I, BUS = MCB7, DEFAULT = rd_clk, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_en = rd_en, DIR = I, BUS = MCB7, DEFAULT = rd_en, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_data = rd_data, DIR = O, BUS = MCB7, VEC = [C_PIM7_DATA_WIDTH-1:0], DEFAULT = rd_data, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_full = rd_full, DIR = O, BUS = MCB7, DEFAULT = rd_full, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_empty = rd_empty, DIR = O, BUS = MCB7, DEFAULT = rd_empty, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_count = rd_count, DIR = O, BUS = MCB7, VEC = [6:0], DEFAULT = rd_count, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_overflow = rd_overflow, DIR = O, BUS = MCB7, DEFAULT = rd_overflow, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MCB7_rd_error = rd_error, DIR = O, BUS = MCB7, DEFAULT = rd_error, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = 
 PORT MPMC_CTRL_Rst = SPLB_Rst, DIR = I, BUS = MPMC_CTRL, SIGIS = RST, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_ABus = PLB_ABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31], DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_PAValid = PLB_PAValid, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_SAValid = PLB_SAValid, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_masterID = PLB_masterID, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_MID_WIDTH-1)], DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_RNW = PLB_RNW, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_BE = PLB_BE, DIR = I, BUS = MPMC_CTRL, VEC = [0:((C_MPMC_CTRL_DWIDTH/8)-1)], DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_UABus = PLB_UABus, DIR = I, BUS = MPMC_CTRL, VEC = [0:31], DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_abort = PLB_abort, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_busLock = PLB_busLock, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_MSize = PLB_MSize, DIR = I, BUS = MPMC_CTRL, VEC = [0:1], DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_size = PLB_size, DIR = I, BUS = MPMC_CTRL, VEC = [0:3], DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_type = PLB_type, DIR = I, BUS = MPMC_CTRL, VEC = [0:2], DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_lockErr = PLB_lockErr, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_wrPendPri = PLB_wrPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1], DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_rdPendPri = PLB_rdPendPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1], DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_reqPri = PLB_reqPri, DIR = I, BUS = MPMC_CTRL, VEC = [0:1], DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_TAttribute = PLB_TAttribute, DIR = I, BUS = MPMC_CTRL, VEC = [0:15], DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = MPMC_CTRL, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_PLB_wrDBus = PLB_wrDBus, DIR = I, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)], DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_addrAck = Sl_addrAck, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_SSize = Sl_SSize, DIR = O, BUS = MPMC_CTRL, VEC = [0:1], DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_wait = Sl_wait, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_wrComp = Sl_wrComp, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rdDBus = Sl_rdDBus, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_DWIDTH-1)], DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, BUS = MPMC_CTRL, VEC = [0:3], DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rdComp = Sl_rdComp, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MPMC_CTRL, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_MBusy = Sl_MBusy, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)], DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_MRdErr = Sl_MRdErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)], DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_MWrErr = Sl_MWrErr, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)], DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_CTRL_Sl_MIRQ = Sl_MIRQ, DIR = O, BUS = MPMC_CTRL, VEC = [0:(C_MPMC_CTRL_NUM_MASTERS-1)], DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = MPMC_CTRL
 PORT MPMC_Clk0 = clk_125_0000MHzPLL0_ADJUST, DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHzPLL0_ADJUST
 PORT MPMC_Clk90 = clk_125_0000MHz90PLL0_ADJUST, DIR = I, SIGIS = CLK, INITIALVAL = VCC, ASSIGNMENT = REQUIRE, ISVALID = (![xstrncmp C_FAMILY  spartan6 ] && ![xstrncmp C_FAMILY  virtex6 ] && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || C_DEBUG_REG_ENABLE == 1)), DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_125_0000MHz90PLL0_ADJUST
 PORT MPMC_Clk_200MHz = clk_200_0000MHz, DIR = I, SIGIS = CLK, INITIALVAL = VCC, ISVALID = (([xstrncmp C_FAMILY  virtex4 ] || [xstrncmp C_FAMILY  qvirtex4 ] || [xstrncmp C_FAMILY  qrvirtex4 ] || [xstrncmp C_FAMILY  virtex5 ] || [xstrncmp C_FAMILY  virtex6 ]) && ([xstrncmp C_MEM_TYPE  DDR ] || [xstrncmp C_MEM_TYPE  DDR2 ] || [xstrncmp C_MEM_TYPE  DDR3 ]) && C_USE_STATIC_PHY == 0 && C_NUM_IDELAYCTRL > 0), ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = clk_200_0000MHz
 PORT MPMC_Rst = sys_periph_reset, DIR = I, SIGIS = RST, ASSIGNMENT = REQUIRE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = sys_periph_reset
 PORT DDR_Clk = fpga_0_DDR_SDRAM_0_DDR_Clk_pin, DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_Clk_pin
 PORT DDR_Clk_n = fpga_0_DDR_SDRAM_0_DDR_Clk_n_pin, DIR = O, VEC = [C_MEM_CLK_WIDTH-1:0], SIGIS = CLK, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_Clk_n, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_Clk_n_pin
 PORT DDR_CE = fpga_0_DDR_SDRAM_0_DDR_CE_pin, DIR = O, VEC = [C_MEM_CE_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CLOCK_ENABLE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_CE_pin
 PORT DDR_CS_n = fpga_0_DDR_SDRAM_0_DDR_CS_n_pin, DIR = O, VEC = [C_MEM_CS_N_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_CHIP_SELECT, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_CS_n_pin
 PORT DDR_RAS_n = fpga_0_DDR_SDRAM_0_DDR_RAS_n_pin, DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ROW_ADDR_SELECT, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_RAS_n_pin
 PORT DDR_CAS_n = fpga_0_DDR_SDRAM_0_DDR_CAS_n_pin, DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_COL_ADDR_SELECT, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_CAS_n_pin
 PORT DDR_WE_n = fpga_0_DDR_SDRAM_0_DDR_WE_n_pin, DIR = O, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_WRITE_ENABLE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_WE_n_pin
 PORT DDR_BankAddr = fpga_0_DDR_SDRAM_0_DDR_BankAddr_pin, DIR = O, VEC = [C_MEM_BANKADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_BANKADDR, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_BankAddr_pin
 PORT DDR_Addr = fpga_0_DDR_SDRAM_0_DDR_Addr_pin, DIR = O, VEC = [C_MEM_ADDR_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_ADDRESS, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_Addr_pin
 PORT DDR_DQ = fpga_0_DDR_SDRAM_0_DDR_DQ_pin, DIR = IO, VEC = [C_ECC_DATA_WIDTH  + C_MEM_DATA_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , IOB_STATE = BUF, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_DQ_pin
 PORT DDR_DM = fpga_0_DDR_SDRAM_0_DDR_DM_pin, DIR = O, VEC = [C_ECC_DM_WIDTH    + C_MEM_DM_WIDTH-1:0], ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_MASK, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_DM_pin
 PORT DDR_DQS = fpga_0_DDR_SDRAM_0_DDR_DQS_pin, DIR = IO, VEC = [C_ECC_DQS_WIDTH   + C_MEM_DQS_WIDTH-1:0], THREE_STATE = FALSE, ISVALID = ([xstrncmp C_MEM_TYPE  DDR ] && ![xstrncmp C_FAMILY  spartan6 ]), ASSIGNMENT = REQUIRE, IO_IF = memory_0, IO_IS = DDR_DATA_STROBE, DEFAULT = , ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , IOB_STATE = BUF, MHS_VALUE = fpga_0_DDR_SDRAM_0_DDR_DQS_pin
END

BEGIN qmfir
 PARAMETER INSTANCE = qmfir_0
 PARAMETER C_BASEADDR = 0xcea00000, DT = std_logic_vector, MIN_SIZE = 0x400, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xcea00000, RESOLVED_BUS = SPLB
 PARAMETER C_HIGHADDR = 0xcea0ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xcea0ffff, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_DWIDTH = 128, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_BE:PLB_wrDBus:Sl_rdDBus, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 128, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, RANGE = (1:16), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = Sl_MBusy:Sl_MWrErr:Sl_MRdErr:Sl_MIRQ, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 8, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, RANGE = (1:4), ASSIGNMENT = UPDATE, AFFECTS_PORTS_VEC = PLB_masterID, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 3, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = CONSTANT, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 32, RESOLVED_BUS = SPLB
 PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB, ASSIGNMENT = OPTIONAL_UPDATE, TYPE = HDL, GUI_PERMIT = , CLK_UNIT = PS, CLK_PORT = SPLB_CLK, MPD_VALUE = 10000, RESOLVED_BUS = SPLB
 PARAMETER C_INCLUDE_DPHASE_TIMER = 0, DT = INTEGER, RANGE = (0, 1), ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , CONST_RANGE = , IS_RANGE_CONST = TRUE, MPD_VALUE = 0
 PARAMETER C_FAMILY = virtex5, DT = STRING, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = virtex5, MHS_VALUE = virtex5
 PARAMETER C_MEM0_BASEADDR = 0xc1a20000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_MEM0_HIGHADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xc1a20000, RESOLVED_BUS = SPLB
 PARAMETER C_MEM0_HIGHADDR = 0xc1a2ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_MEM0_BASEADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xc1a2ffff, RESOLVED_BUS = SPLB
 PARAMETER C_MEM1_BASEADDR = 0xc1a00000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_MEM1_HIGHADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xc1a00000, RESOLVED_BUS = SPLB
 PARAMETER C_MEM1_HIGHADDR = 0xc1a0ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_MEM1_BASEADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xc1a0ffff, RESOLVED_BUS = SPLB
 PARAMETER C_MEM2_BASEADDR = 0xc1a40000, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_MEM2_HIGHADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0xffffffff, MHS_VALUE = 0xc1a40000, RESOLVED_BUS = SPLB
 PARAMETER C_MEM2_HIGHADDR = 0xc1a4ffff, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_MEM2_BASEADDR, ADDR_TYPE = REGISTER, BITWIDTH = 32, ASSIGNMENT = OPTIONAL, TYPE = HDL, GUI_PERMIT = , MPD_VALUE = 0x00000000, MHS_VALUE = 0xc1a4ffff, RESOLVED_BUS = SPLB
 PARAMETER HW_VER = 1.00.a
 BUS_INTERFACE SPLB = plb_v46_0, BUS_TYPE = SLAVE, BUS_STD = PLBV46
 PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB, DEFAULT = SPLB_Rst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_ABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB, DEFAULT = PLB_UABus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_PAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB, DEFAULT = PLB_SAValid, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPrim, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB, DEFAULT = PLB_masterID, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB, DEFAULT = PLB_abort, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB, DEFAULT = PLB_busLock, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB, DEFAULT = PLB_RNW, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB, DEFAULT = PLB_BE, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_MSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB, DEFAULT = PLB_size, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB, DEFAULT = PLB_type, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB, DEFAULT = PLB_lockErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = PLB_wrDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_wrBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB, DEFAULT = PLB_rdBurst, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_wrPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB, DEFAULT = PLB_rdPendReq, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_wrPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_rdPendPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB, DEFAULT = PLB_reqPri, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB, DEFAULT = PLB_TAttribute, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB, DEFAULT = Sl_addrAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB, DEFAULT = Sl_SSize, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB, DEFAULT = Sl_wait, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB, DEFAULT = Sl_rearbitrate, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_wrDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB, DEFAULT = Sl_wrComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_wrBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB, DEFAULT = Sl_rdDBus, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB, DEFAULT = Sl_rdWdAddr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB, DEFAULT = Sl_rdDAck, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB, DEFAULT = Sl_rdComp, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB, DEFAULT = Sl_rdBTerm, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MBusy, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MWrErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MRdErr, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB, DEFAULT = Sl_MIRQ, ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, SIGIS = , THREE_STATE = FALSE, IOB_STATE = INFER, RESOLVED_BUS = SPLB
 PORT IP2INTC_Irpt = qmfir_0_IP2INTC_Irpt, DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, DEFAULT = , ASSIGNMENT = OPTIONAL, ENDIAN = BIG, GUI_PERMIT = ALL_USERS, INITVAL = GND, INTERRUPT_PRIORITY = LOW, THREE_STATE = FALSE, IOB_STATE = INFER, MHS_VALUE = qmfir_0_IP2INTC_Irpt
END

